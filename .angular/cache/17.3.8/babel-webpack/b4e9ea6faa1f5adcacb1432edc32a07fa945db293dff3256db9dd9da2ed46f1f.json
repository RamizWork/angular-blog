{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __extends, __spreadArray, __awaiter, __generator, __assign } from 'tslib';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\n/**\r\n * Domain name for firebase storage.\r\n */\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\nvar FirebaseStorageError = /** @class */function (_super) {\n  __extends(FirebaseStorageError, _super);\n  /**\r\n   * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n   *  added to the end of the message.\r\n   * @param message  - Error message.\r\n   */\n  function FirebaseStorageError(code, message) {\n    var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\n    /**\r\n     * Stores custom error data unque to FirebaseStorageError.\r\n     */\n    _this.customData = {\n      serverResponse: null\n    };\n    _this._baseMessage = _this.message;\n    // Without this, `instanceof FirebaseStorageError`, in tests for example,\n    // returns false.\n    Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\n    return _this;\n  }\n  /**\r\n   * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n   */\n  FirebaseStorageError.prototype._codeEquals = function (code) {\n    return prependCode(code) === this.code;\n  };\n  Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\n    /**\r\n     * Optional response message that was added by the server.\r\n     */\n    get: function () {\n      return this.customData.serverResponse;\n    },\n    set: function (serverResponse) {\n      this.customData.serverResponse = serverResponse;\n      if (this.customData.serverResponse) {\n        this.message = this._baseMessage + \"\\n\" + this.customData.serverResponse;\n      } else {\n        this.message = this._baseMessage;\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return FirebaseStorageError;\n}(FirebaseError);\nfunction prependCode(code) {\n  return 'storage/' + code;\n}\nfunction unknown() {\n  var message = 'An unknown error occurred, please check the error payload for ' + 'server response.';\n  return new FirebaseStorageError(\"unknown\" /* UNKNOWN */, message);\n}\nfunction objectNotFound(path) {\n  return new FirebaseStorageError(\"object-not-found\" /* OBJECT_NOT_FOUND */, \"Object '\" + path + \"' does not exist.\");\n}\nfunction quotaExceeded(bucket) {\n  return new FirebaseStorageError(\"quota-exceeded\" /* QUOTA_EXCEEDED */, \"Quota for bucket '\" + bucket + \"' exceeded, please view quota on \" + 'https://firebase.google.com/pricing/.');\n}\nfunction unauthenticated() {\n  var message = 'User is not authenticated, please authenticate using Firebase ' + 'Authentication and try again.';\n  return new FirebaseStorageError(\"unauthenticated\" /* UNAUTHENTICATED */, message);\n}\nfunction unauthorizedApp() {\n  return new FirebaseStorageError(\"unauthorized-app\" /* UNAUTHORIZED_APP */, 'This app does not have permission to access Firebase Storage on this project.');\n}\nfunction unauthorized(path) {\n  return new FirebaseStorageError(\"unauthorized\" /* UNAUTHORIZED */, \"User does not have permission to access '\" + path + \"'.\");\n}\nfunction retryLimitExceeded() {\n  return new FirebaseStorageError(\"retry-limit-exceeded\" /* RETRY_LIMIT_EXCEEDED */, 'Max retry time for operation exceeded, please try again.');\n}\nfunction canceled() {\n  return new FirebaseStorageError(\"canceled\" /* CANCELED */, 'User canceled the upload/download.');\n}\nfunction invalidUrl(url) {\n  return new FirebaseStorageError(\"invalid-url\" /* INVALID_URL */, \"Invalid URL '\" + url + \"'.\");\n}\nfunction invalidDefaultBucket(bucket) {\n  return new FirebaseStorageError(\"invalid-default-bucket\" /* INVALID_DEFAULT_BUCKET */, \"Invalid default bucket '\" + bucket + \"'.\");\n}\nfunction noDefaultBucket() {\n  return new FirebaseStorageError(\"no-default-bucket\" /* NO_DEFAULT_BUCKET */, 'No default bucket ' + \"found. Did you set the '\" + CONFIG_STORAGE_BUCKET_KEY + \"' property when initializing the app?\");\n}\nfunction cannotSliceBlob() {\n  return new FirebaseStorageError(\"cannot-slice-blob\" /* CANNOT_SLICE_BLOB */, 'Cannot slice blob for upload. Please retry the upload.');\n}\nfunction serverFileWrongSize() {\n  return new FirebaseStorageError(\"server-file-wrong-size\" /* SERVER_FILE_WRONG_SIZE */, 'Server recorded incorrect upload file size, please retry the upload.');\n}\nfunction noDownloadURL() {\n  return new FirebaseStorageError(\"no-download-url\" /* NO_DOWNLOAD_URL */, 'The given file does not have any download URLs.');\n}\nfunction invalidArgument(message) {\n  return new FirebaseStorageError(\"invalid-argument\" /* INVALID_ARGUMENT */, message);\n}\nfunction appDeleted() {\n  return new FirebaseStorageError(\"app-deleted\" /* APP_DELETED */, 'The Firebase app was deleted.');\n}\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\nfunction invalidRootOperation(name) {\n  return new FirebaseStorageError(\"invalid-root-operation\" /* INVALID_ROOT_OPERATION */, \"The operation '\" + name + \"' cannot be performed on a root reference, create a non-root \" + \"reference using child, such as .child('file.png').\");\n}\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\nfunction invalidFormat(format, message) {\n  return new FirebaseStorageError(\"invalid-format\" /* INVALID_FORMAT */, \"String does not match format '\" + format + \"': \" + message);\n}\n/**\r\n * @param message - A message describing the internal error.\r\n */\nfunction internalError(message) {\n  throw new FirebaseStorageError(\"internal-error\" /* INTERNAL_ERROR */, 'Internal error: ' + message);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/** Converts a Base64 encoded string to a binary string. */\nfunction decodeBase64(encoded) {\n  return atob(encoded);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\nvar StringFormat = {\n  /**\r\n   * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n   * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n   * sequence.\r\n   * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n   * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n   */\n  RAW: 'raw',\n  /**\r\n   * Indicates the string should be interpreted as base64-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64: 'base64',\n  /**\r\n   * Indicates the string should be interpreted as base64url-encoded data.\r\n   * Padding characters (trailing '='s) are optional.\r\n   * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n   * ad 69 8e fb e1 3a b7 bf eb 97\r\n   */\n  BASE64URL: 'base64url',\n  /**\r\n   * Indicates the string is a data URL, such as one obtained from\r\n   * canvas.toDataURL().\r\n   * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n   * becomes the byte sequence\r\n   * 69 a6 9a\r\n   * (the content-type \"application/octet-stream\" is also applied, but can\r\n   * be overridden in the metadata object).\r\n   */\n  DATA_URL: 'data_url'\n};\nvar StringData = /** @class */function () {\n  function StringData(data, contentType) {\n    this.data = data;\n    this.contentType = contentType || null;\n  }\n  return StringData;\n}();\nfunction dataFromString(format, stringData) {\n  switch (format) {\n    case StringFormat.RAW:\n      return new StringData(utf8Bytes_(stringData));\n    case StringFormat.BASE64:\n    case StringFormat.BASE64URL:\n      return new StringData(base64Bytes_(format, stringData));\n    case StringFormat.DATA_URL:\n      return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\n    // do nothing\n  }\n  // assert(false);\n  throw unknown();\n}\nfunction utf8Bytes_(value) {\n  var b = [];\n  for (var i = 0; i < value.length; i++) {\n    var c = value.charCodeAt(i);\n    if (c <= 127) {\n      b.push(c);\n    } else {\n      if (c <= 2047) {\n        b.push(192 | c >> 6, 128 | c & 63);\n      } else {\n        if ((c & 64512) === 55296) {\n          // The start of a surrogate pair.\n          var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\n          if (!valid) {\n            // The second surrogate wasn't there.\n            b.push(239, 191, 189);\n          } else {\n            var hi = c;\n            var lo = value.charCodeAt(++i);\n            c = 65536 | (hi & 1023) << 10 | lo & 1023;\n            b.push(240 | c >> 18, 128 | c >> 12 & 63, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        } else {\n          if ((c & 64512) === 56320) {\n            // Invalid low surrogate.\n            b.push(239, 191, 189);\n          } else {\n            b.push(224 | c >> 12, 128 | c >> 6 & 63, 128 | c & 63);\n          }\n        }\n      }\n    }\n  }\n  return new Uint8Array(b);\n}\nfunction percentEncodedBytes_(value) {\n  var decoded;\n  try {\n    decoded = decodeURIComponent(value);\n  } catch (e) {\n    throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\n  }\n  return utf8Bytes_(decoded);\n}\nfunction base64Bytes_(format, value) {\n  switch (format) {\n    case StringFormat.BASE64:\n      {\n        var hasMinus = value.indexOf('-') !== -1;\n        var hasUnder = value.indexOf('_') !== -1;\n        if (hasMinus || hasUnder) {\n          var invalidChar = hasMinus ? '-' : '_';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64url encoded?\");\n        }\n        break;\n      }\n    case StringFormat.BASE64URL:\n      {\n        var hasPlus = value.indexOf('+') !== -1;\n        var hasSlash = value.indexOf('/') !== -1;\n        if (hasPlus || hasSlash) {\n          var invalidChar = hasPlus ? '+' : '/';\n          throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\n        }\n        value = value.replace(/-/g, '+').replace(/_/g, '/');\n        break;\n      }\n    // do nothing\n  }\n  var bytes;\n  try {\n    bytes = decodeBase64(value);\n  } catch (e) {\n    throw invalidFormat(format, 'Invalid character found');\n  }\n  var array = new Uint8Array(bytes.length);\n  for (var i = 0; i < bytes.length; i++) {\n    array[i] = bytes.charCodeAt(i);\n  }\n  return array;\n}\nvar DataURLParts = /** @class */function () {\n  function DataURLParts(dataURL) {\n    this.base64 = false;\n    this.contentType = null;\n    var matches = dataURL.match(/^data:([^,]+)?,/);\n    if (matches === null) {\n      throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\n    }\n    var middle = matches[1] || null;\n    if (middle != null) {\n      this.base64 = endsWith(middle, ';base64');\n      this.contentType = this.base64 ? middle.substring(0, middle.length - ';base64'.length) : middle;\n    }\n    this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\n  }\n  return DataURLParts;\n}();\nfunction dataURLBytes_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  if (parts.base64) {\n    return base64Bytes_(StringFormat.BASE64, parts.rest);\n  } else {\n    return percentEncodedBytes_(parts.rest);\n  }\n}\nfunction dataURLContentType_(dataUrl) {\n  var parts = new DataURLParts(dataUrl);\n  return parts.contentType;\n}\nfunction endsWith(s, end) {\n  var longEnough = s.length >= end.length;\n  if (!longEnough) {\n    return false;\n  }\n  return s.substring(s.length - end.length) === end;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * An event that is triggered on a task.\r\n */\nvar TaskEvent = {\n  /**\r\n   * For this event,\r\n   * <ul>\r\n   *   <li>The `next` function is triggered on progress updates and when the\r\n   *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n   *       argument.</li>\r\n   *   <li>The `error` function is triggered if the upload is canceled or fails\r\n   *       for another reason.</li>\r\n   *   <li>The `complete` function is triggered if the upload completes\r\n   *       successfully.</li>\r\n   * </ul>\r\n   */\n  STATE_CHANGED: 'state_changed'\n};\n/**\r\n * Represents the current state of a running upload.\r\n */\nvar TaskState = {\n  /** The task is currently transferring data. */\n  RUNNING: 'running',\n  /** The task was paused by the user. */\n  PAUSED: 'paused',\n  /** The task completed successfully. */\n  SUCCESS: 'success',\n  /** The task was canceled. */\n  CANCELED: 'canceled',\n  /** The task failed with an error. */\n  ERROR: 'error'\n};\nfunction taskStateFromInternalTaskState(state) {\n  switch (state) {\n    case \"running\" /* RUNNING */:\n    case \"pausing\" /* PAUSING */:\n    case \"canceling\" /* CANCELING */:\n      return TaskState.RUNNING;\n    case \"paused\" /* PAUSED */:\n      return TaskState.PAUSED;\n    case \"success\" /* SUCCESS */:\n      return TaskState.SUCCESS;\n    case \"canceled\" /* CANCELED */:\n      return TaskState.CANCELED;\n    case \"error\" /* ERROR */:\n      return TaskState.ERROR;\n    default:\n      // TODO(andysoto): assert(false);\n      return TaskState.ERROR;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\nvar ErrorCode;\n(function (ErrorCode) {\n  ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\n  ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\n  ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\nvar XhrConnection = /** @class */function () {\n  function XhrConnection() {\n    var _this = this;\n    this.sent_ = false;\n    this.xhr_ = new XMLHttpRequest();\n    this.errorCode_ = ErrorCode.NO_ERROR;\n    this.sendPromise_ = new Promise(function (resolve) {\n      _this.xhr_.addEventListener('abort', function () {\n        _this.errorCode_ = ErrorCode.ABORT;\n        resolve();\n      });\n      _this.xhr_.addEventListener('error', function () {\n        _this.errorCode_ = ErrorCode.NETWORK_ERROR;\n        resolve();\n      });\n      _this.xhr_.addEventListener('load', function () {\n        resolve();\n      });\n    });\n  }\n  /**\r\n   * @override\r\n   */\n  XhrConnection.prototype.send = function (url, method, body, headers) {\n    if (this.sent_) {\n      throw internalError('cannot .send() more than once');\n    }\n    this.sent_ = true;\n    this.xhr_.open(method, url, true);\n    if (headers !== undefined) {\n      for (var key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          this.xhr_.setRequestHeader(key, headers[key].toString());\n        }\n      }\n    }\n    if (body !== undefined) {\n      this.xhr_.send(body);\n    } else {\n      this.xhr_.send();\n    }\n    return this.sendPromise_;\n  };\n  /**\r\n   * @override\r\n   */\n  XhrConnection.prototype.getErrorCode = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getErrorCode() before sending');\n    }\n    return this.errorCode_;\n  };\n  /**\r\n   * @override\r\n   */\n  XhrConnection.prototype.getStatus = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getStatus() before sending');\n    }\n    try {\n      return this.xhr_.status;\n    } catch (e) {\n      return -1;\n    }\n  };\n  /**\r\n   * @override\r\n   */\n  XhrConnection.prototype.getResponseText = function () {\n    if (!this.sent_) {\n      throw internalError('cannot .getResponseText() before sending');\n    }\n    return this.xhr_.responseText;\n  };\n  /**\r\n   * Aborts the request.\r\n   * @override\r\n   */\n  XhrConnection.prototype.abort = function () {\n    this.xhr_.abort();\n  };\n  /**\r\n   * @override\r\n   */\n  XhrConnection.prototype.getResponseHeader = function (header) {\n    return this.xhr_.getResponseHeader(header);\n  };\n  /**\r\n   * @override\r\n   */\n  XhrConnection.prototype.addUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.addEventListener('progress', listener);\n    }\n  };\n  /**\r\n   * @override\r\n   */\n  XhrConnection.prototype.removeUploadProgressListener = function (listener) {\n    if (this.xhr_.upload != null) {\n      this.xhr_.upload.removeEventListener('progress', listener);\n    }\n  };\n  return XhrConnection;\n}();\nfunction newConnection() {\n  return new XhrConnection();\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\nvar ConnectionPool = /** @class */function () {\n  function ConnectionPool() {}\n  ConnectionPool.prototype.createConnection = function () {\n    return newConnection();\n  };\n  return ConnectionPool;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\nvar Location = /** @class */function () {\n  function Location(bucket, path) {\n    this.bucket = bucket;\n    this.path_ = path;\n  }\n  Object.defineProperty(Location.prototype, \"path\", {\n    get: function () {\n      return this.path_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Location.prototype, \"isRoot\", {\n    get: function () {\n      return this.path.length === 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Location.prototype.fullServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\n  };\n  Location.prototype.bucketOnlyServerUrl = function () {\n    var encode = encodeURIComponent;\n    return '/b/' + encode(this.bucket) + '/o';\n  };\n  Location.makeFromBucketSpec = function (bucketString, host) {\n    var bucketLocation;\n    try {\n      bucketLocation = Location.makeFromUrl(bucketString, host);\n    } catch (e) {\n      // Not valid URL, use as-is. This lets you put bare bucket names in\n      // config.\n      return new Location(bucketString, '');\n    }\n    if (bucketLocation.path === '') {\n      return bucketLocation;\n    } else {\n      throw invalidDefaultBucket(bucketString);\n    }\n  };\n  Location.makeFromUrl = function (url, host) {\n    var location = null;\n    var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\n    function gsModify(loc) {\n      if (loc.path.charAt(loc.path.length - 1) === '/') {\n        loc.path_ = loc.path_.slice(0, -1);\n      }\n    }\n    var gsPath = '(/(.*))?$';\n    var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\n    var gsIndices = {\n      bucket: 1,\n      path: 3\n    };\n    function httpModify(loc) {\n      loc.path_ = decodeURIComponent(loc.path);\n    }\n    var version = 'v[A-Za-z0-9_]+';\n    var firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\n    var firebaseStoragePath = '(/([^?#]*).*)?$';\n    var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\n    var firebaseStorageIndices = {\n      bucket: 1,\n      path: 3\n    };\n    var cloudStorageHost = host === DEFAULT_HOST ? '(?:storage.googleapis.com|storage.cloud.google.com)' : host;\n    var cloudStoragePath = '([^?#]*)';\n    var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\n    var cloudStorageIndices = {\n      bucket: 1,\n      path: 2\n    };\n    var groups = [{\n      regex: gsRegex,\n      indices: gsIndices,\n      postModify: gsModify\n    }, {\n      regex: firebaseStorageRegExp,\n      indices: firebaseStorageIndices,\n      postModify: httpModify\n    }, {\n      regex: cloudStorageRegExp,\n      indices: cloudStorageIndices,\n      postModify: httpModify\n    }];\n    for (var i = 0; i < groups.length; i++) {\n      var group = groups[i];\n      var captures = group.regex.exec(url);\n      if (captures) {\n        var bucketValue = captures[group.indices.bucket];\n        var pathValue = captures[group.indices.path];\n        if (!pathValue) {\n          pathValue = '';\n        }\n        location = new Location(bucketValue, pathValue);\n        group.postModify(location);\n        break;\n      }\n    }\n    if (location == null) {\n      throw invalidUrl(url);\n    }\n    return location;\n  };\n  return Location;\n}();\n\n/**\r\n * A request whose promise always fails.\r\n */\nvar FailRequest = /** @class */function () {\n  function FailRequest(error) {\n    this.promise_ = Promise.reject(error);\n  }\n  /** @inheritDoc */\n  FailRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n  FailRequest.prototype.cancel = function (_appDelete) {};\n  return FailRequest;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\nfunction start(f,\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncallback, timeout) {\n  // TODO(andysoto): make this code cleaner (probably refactor into an actual\n  // type instead of a bunch of functions with state shared in the closure)\n  var waitSeconds = 1;\n  // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\n  // TODO: find a way to exclude Node type definition for storage because storage only works in browser\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  var timeoutId = null;\n  var hitTimeout = false;\n  var cancelState = 0;\n  function canceled() {\n    return cancelState === 2;\n  }\n  var triggeredCallback = false;\n  function triggerCallback() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (!triggeredCallback) {\n      triggeredCallback = true;\n      callback.apply(null, args);\n    }\n  }\n  function callWithDelay(millis) {\n    timeoutId = setTimeout(function () {\n      timeoutId = null;\n      f(handler, canceled());\n    }, millis);\n  }\n  function handler(success) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n      args[_i - 1] = arguments[_i];\n    }\n    if (triggeredCallback) {\n      return;\n    }\n    if (success) {\n      triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\n      return;\n    }\n    var mustStop = canceled() || hitTimeout;\n    if (mustStop) {\n      triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\n      return;\n    }\n    if (waitSeconds < 64) {\n      /* TODO(andysoto): don't back off so quickly if we know we're offline. */\n      waitSeconds *= 2;\n    }\n    var waitMillis;\n    if (cancelState === 1) {\n      cancelState = 2;\n      waitMillis = 0;\n    } else {\n      waitMillis = (waitSeconds + Math.random()) * 1000;\n    }\n    callWithDelay(waitMillis);\n  }\n  var stopped = false;\n  function stop(wasTimeout) {\n    if (stopped) {\n      return;\n    }\n    stopped = true;\n    if (triggeredCallback) {\n      return;\n    }\n    if (timeoutId !== null) {\n      if (!wasTimeout) {\n        cancelState = 2;\n      }\n      clearTimeout(timeoutId);\n      callWithDelay(0);\n    } else {\n      if (!wasTimeout) {\n        cancelState = 1;\n      }\n    }\n  }\n  callWithDelay(0);\n  setTimeout(function () {\n    hitTimeout = true;\n    stop(true);\n  }, timeout);\n  return stop;\n}\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\nfunction stop(id) {\n  id(false);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction isJustDef(p) {\n  return p !== void 0;\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction isFunction(p) {\n  return typeof p === 'function';\n}\nfunction isNonArrayObject(p) {\n  return typeof p === 'object' && !Array.isArray(p);\n}\nfunction isString(p) {\n  return typeof p === 'string' || p instanceof String;\n}\nfunction isNativeBlob(p) {\n  return isNativeBlobDefined() && p instanceof Blob;\n}\nfunction isNativeBlobDefined() {\n  return typeof Blob !== 'undefined';\n}\nfunction validateNumber(argument, minValue, maxValue, value) {\n  if (value < minValue) {\n    throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\n  }\n  if (value > maxValue) {\n    throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction makeUrl(urlPart, host) {\n  var protocolMatch = host.match(/^(\\w+):\\/\\/.+/);\n  var protocol = protocolMatch === null || protocolMatch === void 0 ? void 0 : protocolMatch[1];\n  var origin = host;\n  if (protocol == null) {\n    origin = \"https://\" + host;\n  }\n  return origin + \"/v0\" + urlPart;\n}\nfunction makeQueryString(params) {\n  var encode = encodeURIComponent;\n  var queryPart = '?';\n  for (var key in params) {\n    if (params.hasOwnProperty(key)) {\n      var nextPart = encode(key) + '=' + encode(params[key]);\n      queryPart = queryPart + nextPart + '&';\n    }\n  }\n  // Chop off the extra '&' or '?' on the end\n  queryPart = queryPart.slice(0, -1);\n  return queryPart;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar NetworkRequest = /** @class */function () {\n  function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\n    var _this = this;\n    this.pendingConnection_ = null;\n    this.backoffId_ = null;\n    this.canceled_ = false;\n    this.appDelete_ = false;\n    this.url_ = url;\n    this.method_ = method;\n    this.headers_ = headers;\n    this.body_ = body;\n    this.successCodes_ = successCodes.slice();\n    this.additionalRetryCodes_ = additionalRetryCodes.slice();\n    this.callback_ = callback;\n    this.errorCallback_ = errorCallback;\n    this.progressCallback_ = progressCallback;\n    this.timeout_ = timeout;\n    this.pool_ = pool;\n    this.promise_ = new Promise(function (resolve, reject) {\n      _this.resolve_ = resolve;\n      _this.reject_ = reject;\n      _this.start_();\n    });\n  }\n  /**\r\n   * Actually starts the retry loop.\r\n   */\n  NetworkRequest.prototype.start_ = function () {\n    var self = this;\n    function doTheRequest(backoffCallback, canceled) {\n      if (canceled) {\n        backoffCallback(false, new RequestEndStatus(false, null, true));\n        return;\n      }\n      var connection = self.pool_.createConnection();\n      self.pendingConnection_ = connection;\n      function progressListener(progressEvent) {\n        var loaded = progressEvent.loaded;\n        var total = progressEvent.lengthComputable ? progressEvent.total : -1;\n        if (self.progressCallback_ !== null) {\n          self.progressCallback_(loaded, total);\n        }\n      }\n      if (self.progressCallback_ !== null) {\n        connection.addUploadProgressListener(progressListener);\n      }\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      connection.send(self.url_, self.method_, self.body_, self.headers_).then(function () {\n        if (self.progressCallback_ !== null) {\n          connection.removeUploadProgressListener(progressListener);\n        }\n        self.pendingConnection_ = null;\n        var hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\n        var status = connection.getStatus();\n        if (!hitServer || self.isRetryStatusCode_(status)) {\n          var wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\n          backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\n          return;\n        }\n        var successCode = self.successCodes_.indexOf(status) !== -1;\n        backoffCallback(true, new RequestEndStatus(successCode, connection));\n      });\n    }\n    /**\r\n     * @param requestWentThrough - True if the request eventually went\r\n     *     through, false if it hit the retry limit or was canceled.\r\n     */\n    function backoffDone(requestWentThrough, status) {\n      var resolve = self.resolve_;\n      var reject = self.reject_;\n      var connection = status.connection;\n      if (status.wasSuccessCode) {\n        try {\n          var result = self.callback_(connection, connection.getResponseText());\n          if (isJustDef(result)) {\n            resolve(result);\n          } else {\n            resolve();\n          }\n        } catch (e) {\n          reject(e);\n        }\n      } else {\n        if (connection !== null) {\n          var err = unknown();\n          err.serverResponse = connection.getResponseText();\n          if (self.errorCallback_) {\n            reject(self.errorCallback_(connection, err));\n          } else {\n            reject(err);\n          }\n        } else {\n          if (status.canceled) {\n            var err = self.appDelete_ ? appDeleted() : canceled();\n            reject(err);\n          } else {\n            var err = retryLimitExceeded();\n            reject(err);\n          }\n        }\n      }\n    }\n    if (this.canceled_) {\n      backoffDone(false, new RequestEndStatus(false, null, true));\n    } else {\n      this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\n    }\n  };\n  /** @inheritDoc */\n  NetworkRequest.prototype.getPromise = function () {\n    return this.promise_;\n  };\n  /** @inheritDoc */\n  NetworkRequest.prototype.cancel = function (appDelete) {\n    this.canceled_ = true;\n    this.appDelete_ = appDelete || false;\n    if (this.backoffId_ !== null) {\n      stop(this.backoffId_);\n    }\n    if (this.pendingConnection_ !== null) {\n      this.pendingConnection_.abort();\n    }\n  };\n  NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\n    // The codes for which to retry came from this page:\n    // https://cloud.google.com/storage/docs/exponential-backoff\n    var isFiveHundredCode = status >= 500 && status < 600;\n    var extraRetryCodes = [\n    // Request Timeout: web server didn't receive full request in time.\n    408,\n    // Too Many Requests: you're getting rate-limited, basically.\n    429];\n    var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\n    var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\n    return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\n  };\n  return NetworkRequest;\n}();\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\nvar RequestEndStatus = /** @class */function () {\n  function RequestEndStatus(wasSuccessCode, connection, canceled) {\n    this.wasSuccessCode = wasSuccessCode;\n    this.connection = connection;\n    this.canceled = !!canceled;\n  }\n  return RequestEndStatus;\n}();\nfunction addAuthHeader_(headers, authToken) {\n  if (authToken !== null && authToken.length > 0) {\n    headers['Authorization'] = 'Firebase ' + authToken;\n  }\n}\nfunction addVersionHeader_(headers, firebaseVersion) {\n  headers['X-Firebase-Storage-Version'] = 'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\n}\nfunction addGmpidHeader_(headers, appId) {\n  if (appId) {\n    headers['X-Firebase-GMPID'] = appId;\n  }\n}\nfunction addAppCheckHeader_(headers, appCheckToken) {\n  if (appCheckToken !== null) {\n    headers['X-Firebase-AppCheck'] = appCheckToken;\n  }\n}\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, pool, firebaseVersion) {\n  var queryPart = makeQueryString(requestInfo.urlParams);\n  var url = requestInfo.url + queryPart;\n  var headers = Object.assign({}, requestInfo.headers);\n  addGmpidHeader_(headers, appId);\n  addAuthHeader_(headers, authToken);\n  addVersionHeader_(headers, firebaseVersion);\n  addAppCheckHeader_(headers, appCheckToken);\n  return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getBlobBuilder() {\n  if (typeof BlobBuilder !== 'undefined') {\n    return BlobBuilder;\n  } else if (typeof WebKitBlobBuilder !== 'undefined') {\n    return WebKitBlobBuilder;\n  } else {\n    return undefined;\n  }\n}\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\nfunction getBlob() {\n  var args = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n  var BlobBuilder = getBlobBuilder();\n  if (BlobBuilder !== undefined) {\n    var bb = new BlobBuilder();\n    for (var i = 0; i < args.length; i++) {\n      bb.append(args[i]);\n    }\n    return bb.getBlob();\n  } else {\n    if (isNativeBlobDefined()) {\n      return new Blob(args);\n    } else {\n      throw new FirebaseStorageError(\"unsupported-environment\" /* UNSUPPORTED_ENVIRONMENT */, \"This browser doesn't seem to support creating Blobs\");\n    }\n  }\n}\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  } else if (blob.mozSlice) {\n    return blob.mozSlice(start, end);\n  } else if (blob.slice) {\n    return blob.slice(start, end);\n  }\n  return null;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\nvar FbsBlob = /** @class */function () {\n  function FbsBlob(data, elideCopy) {\n    var size = 0;\n    var blobType = '';\n    if (isNativeBlob(data)) {\n      this.data_ = data;\n      size = data.size;\n      blobType = data.type;\n    } else if (data instanceof ArrayBuffer) {\n      if (elideCopy) {\n        this.data_ = new Uint8Array(data);\n      } else {\n        this.data_ = new Uint8Array(data.byteLength);\n        this.data_.set(new Uint8Array(data));\n      }\n      size = this.data_.length;\n    } else if (data instanceof Uint8Array) {\n      if (elideCopy) {\n        this.data_ = data;\n      } else {\n        this.data_ = new Uint8Array(data.length);\n        this.data_.set(data);\n      }\n      size = data.length;\n    }\n    this.size_ = size;\n    this.type_ = blobType;\n  }\n  FbsBlob.prototype.size = function () {\n    return this.size_;\n  };\n  FbsBlob.prototype.type = function () {\n    return this.type_;\n  };\n  FbsBlob.prototype.slice = function (startByte, endByte) {\n    if (isNativeBlob(this.data_)) {\n      var realBlob = this.data_;\n      var sliced = sliceBlob(realBlob, startByte, endByte);\n      if (sliced === null) {\n        return null;\n      }\n      return new FbsBlob(sliced);\n    } else {\n      var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\n      return new FbsBlob(slice, true);\n    }\n  };\n  FbsBlob.getBlob = function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    if (isNativeBlobDefined()) {\n      var blobby = args.map(function (val) {\n        if (val instanceof FbsBlob) {\n          return val.data_;\n        } else {\n          return val;\n        }\n      });\n      return new FbsBlob(getBlob.apply(null, blobby));\n    } else {\n      var uint8Arrays = args.map(function (val) {\n        if (isString(val)) {\n          return dataFromString(StringFormat.RAW, val).data;\n        } else {\n          // Blobs don't exist, so this has to be a Uint8Array.\n          return val.data_;\n        }\n      });\n      var finalLength_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        finalLength_1 += array.byteLength;\n      });\n      var merged_1 = new Uint8Array(finalLength_1);\n      var index_1 = 0;\n      uint8Arrays.forEach(function (array) {\n        for (var i = 0; i < array.length; i++) {\n          merged_1[index_1++] = array[i];\n        }\n      });\n      return new FbsBlob(merged_1, true);\n    }\n  };\n  FbsBlob.prototype.uploadData = function () {\n    return this.data_;\n  };\n  return FbsBlob;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\nfunction jsonObjectOrNull(s) {\n  var obj;\n  try {\n    obj = JSON.parse(s);\n  } catch (e) {\n    return null;\n  }\n  if (isNonArrayObject(obj)) {\n    return obj;\n  } else {\n    return null;\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\n/**\r\n * @return Null if the path is already at the root.\r\n */\nfunction parent(path) {\n  if (path.length === 0) {\n    return null;\n  }\n  var index = path.lastIndexOf('/');\n  if (index === -1) {\n    return '';\n  }\n  var newPath = path.slice(0, index);\n  return newPath;\n}\nfunction child(path, childPath) {\n  var canonicalChildPath = childPath.split('/').filter(function (component) {\n    return component.length > 0;\n  }).join('/');\n  if (path.length === 0) {\n    return canonicalChildPath;\n  } else {\n    return path + '/' + canonicalChildPath;\n  }\n}\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\nfunction lastComponent(path) {\n  var index = path.lastIndexOf('/', path.length - 2);\n  if (index === -1) {\n    return path;\n  } else {\n    return path.slice(index + 1);\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction noXform_(metadata, value) {\n  return value;\n}\nvar Mapping = /** @class */function () {\n  function Mapping(server, local, writable, xform) {\n    this.server = server;\n    this.local = local || server;\n    this.writable = !!writable;\n    this.xform = xform || noXform_;\n  }\n  return Mapping;\n}();\nvar mappings_ = null;\nfunction xformPath(fullPath) {\n  if (!isString(fullPath) || fullPath.length < 2) {\n    return fullPath;\n  } else {\n    return lastComponent(fullPath);\n  }\n}\nfunction getMappings() {\n  if (mappings_) {\n    return mappings_;\n  }\n  var mappings = [];\n  mappings.push(new Mapping('bucket'));\n  mappings.push(new Mapping('generation'));\n  mappings.push(new Mapping('metageneration'));\n  mappings.push(new Mapping('name', 'fullPath', true));\n  function mappingsXformPath(_metadata, fullPath) {\n    return xformPath(fullPath);\n  }\n  var nameMapping = new Mapping('name');\n  nameMapping.xform = mappingsXformPath;\n  mappings.push(nameMapping);\n  /**\r\n   * Coerces the second param to a number, if it is defined.\r\n   */\n  function xformSize(_metadata, size) {\n    if (size !== undefined) {\n      return Number(size);\n    } else {\n      return size;\n    }\n  }\n  var sizeMapping = new Mapping('size');\n  sizeMapping.xform = xformSize;\n  mappings.push(sizeMapping);\n  mappings.push(new Mapping('timeCreated'));\n  mappings.push(new Mapping('updated'));\n  mappings.push(new Mapping('md5Hash', null, true));\n  mappings.push(new Mapping('cacheControl', null, true));\n  mappings.push(new Mapping('contentDisposition', null, true));\n  mappings.push(new Mapping('contentEncoding', null, true));\n  mappings.push(new Mapping('contentLanguage', null, true));\n  mappings.push(new Mapping('contentType', null, true));\n  mappings.push(new Mapping('metadata', 'customMetadata', true));\n  mappings_ = mappings;\n  return mappings_;\n}\nfunction addRef(metadata, service) {\n  function generateRef() {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var loc = new Location(bucket, path);\n    return service._makeStorageReference(loc);\n  }\n  Object.defineProperty(metadata, 'ref', {\n    get: generateRef\n  });\n}\nfunction fromResource(service, resource, mappings) {\n  var metadata = {};\n  metadata['type'] = 'file';\n  var len = mappings.length;\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\n  }\n  addRef(metadata, service);\n  return metadata;\n}\nfunction fromResourceString(service, resourceString, mappings) {\n  var obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  var resource = obj;\n  return fromResource(service, resource, mappings);\n}\nfunction downloadUrlFromResourceString(metadata, resourceString, host) {\n  var obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  if (!isString(obj['downloadTokens'])) {\n    // This can happen if objects are uploaded through GCS and retrieved\n    // through list, so we don't want to throw an Error.\n    return null;\n  }\n  var tokens = obj['downloadTokens'];\n  if (tokens.length === 0) {\n    return null;\n  }\n  var encode = encodeURIComponent;\n  var tokensList = tokens.split(',');\n  var urls = tokensList.map(function (token) {\n    var bucket = metadata['bucket'];\n    var path = metadata['fullPath'];\n    var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\n    var base = makeUrl(urlPart, host);\n    var queryString = makeQueryString({\n      alt: 'media',\n      token: token\n    });\n    return base + queryString;\n  });\n  return urls[0];\n}\nfunction toResourceString(metadata, mappings) {\n  var resource = {};\n  var len = mappings.length;\n  for (var i = 0; i < len; i++) {\n    var mapping = mappings[i];\n    if (mapping.writable) {\n      resource[mapping.server] = metadata[mapping.local];\n    }\n  }\n  return JSON.stringify(resource);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PREFIXES_KEY = 'prefixes';\nvar ITEMS_KEY = 'items';\nfunction fromBackendResponse(service, bucket, resource) {\n  var listResult = {\n    prefixes: [],\n    items: [],\n    nextPageToken: resource['nextPageToken']\n  };\n  if (resource[PREFIXES_KEY]) {\n    for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\n      var path = _a[_i];\n      var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\n      var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\n      listResult.prefixes.push(reference);\n    }\n  }\n  if (resource[ITEMS_KEY]) {\n    for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\n      var item = _c[_b];\n      var reference = service._makeStorageReference(new Location(bucket, item['name']));\n      listResult.items.push(reference);\n    }\n  }\n  return listResult;\n}\nfunction fromResponseString(service, bucket, resourceString) {\n  var obj = jsonObjectOrNull(resourceString);\n  if (obj === null) {\n    return null;\n  }\n  var resource = obj;\n  return fromBackendResponse(service, bucket, resource);\n}\nvar RequestInfo = /** @class */function () {\n  function RequestInfo(url, method,\n  /**\r\n   * Returns the value with which to resolve the request's promise. Only called\r\n   * if the request is successful. Throw from this function to reject the\r\n   * returned Request's promise with the thrown error.\r\n   * Note: The XhrIo passed to this function may be reused after this callback\r\n   * returns. Do not keep a reference to it in any way.\r\n   */\n  handler, timeout) {\n    this.url = url;\n    this.method = method;\n    this.handler = handler;\n    this.timeout = timeout;\n    this.urlParams = {};\n    this.headers = {};\n    this.body = null;\n    this.errorHandler = null;\n    /**\r\n     * Called with the current number of bytes uploaded and total size (-1 if not\r\n     * computable) of the request body (i.e. used to report upload progress).\r\n     */\n    this.progressCallback = null;\n    this.successCodes = [200];\n    this.additionalRetryCodes = [];\n  }\n  return RequestInfo;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\nfunction handlerCheck(cndn) {\n  if (!cndn) {\n    throw unknown();\n  }\n}\nfunction metadataHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return metadata;\n  }\n  return handler;\n}\nfunction listHandler(service, bucket) {\n  function handler(xhr, text) {\n    var listResult = fromResponseString(service, bucket, text);\n    handlerCheck(listResult !== null);\n    return listResult;\n  }\n  return handler;\n}\nfunction downloadUrlHandler(service, mappings) {\n  function handler(xhr, text) {\n    var metadata = fromResourceString(service, text, mappings);\n    handlerCheck(metadata !== null);\n    return downloadUrlFromResourceString(metadata, text, service.host);\n  }\n  return handler;\n}\nfunction sharedErrorHandler(location) {\n  function errorHandler(xhr, err) {\n    var newErr;\n    if (xhr.getStatus() === 401) {\n      if (\n      // This exact message string is the only consistent part of the\n      // server's error response that identifies it as an App Check error.\n      xhr.getResponseText().includes('Firebase App Check token is invalid')) {\n        newErr = unauthorizedApp();\n      } else {\n        newErr = unauthenticated();\n      }\n    } else {\n      if (xhr.getStatus() === 402) {\n        newErr = quotaExceeded(location.bucket);\n      } else {\n        if (xhr.getStatus() === 403) {\n          newErr = unauthorized(location.path);\n        } else {\n          newErr = err;\n        }\n      }\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\nfunction objectErrorHandler(location) {\n  var shared = sharedErrorHandler(location);\n  function errorHandler(xhr, err) {\n    var newErr = shared(xhr, err);\n    if (xhr.getStatus() === 404) {\n      newErr = objectNotFound(location.path);\n    }\n    newErr.serverResponse = err.serverResponse;\n    return newErr;\n  }\n  return errorHandler;\n}\nfunction getMetadata$2(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\n  var urlParams = {};\n  if (location.isRoot) {\n    urlParams['prefix'] = '';\n  } else {\n    urlParams['prefix'] = location.path + '/';\n  }\n  if (delimiter && delimiter.length > 0) {\n    urlParams['delimiter'] = delimiter;\n  }\n  if (pageToken) {\n    urlParams['pageToken'] = pageToken;\n  }\n  if (maxResults) {\n    urlParams['maxResults'] = maxResults;\n  }\n  var urlPart = location.bucketOnlyServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\nfunction getDownloadUrl(service, location, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'GET';\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction updateMetadata$2(service, location, metadata, mappings) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'PATCH';\n  var body = toResourceString(metadata, mappings);\n  var headers = {\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var timeout = service.maxOperationRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction deleteObject$2(service, location) {\n  var urlPart = location.fullServerUrl();\n  var url = makeUrl(urlPart, service.host);\n  var method = 'DELETE';\n  var timeout = service.maxOperationRetryTime;\n  function handler(_xhr, _text) {}\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.successCodes = [200, 204];\n  requestInfo.errorHandler = objectErrorHandler(location);\n  return requestInfo;\n}\nfunction determineContentType_(metadata, blob) {\n  return metadata && metadata['contentType'] || blob && blob.type() || 'application/octet-stream';\n}\nfunction metadataForUpload_(location, blob, metadata) {\n  var metadataClone = Object.assign({}, metadata);\n  metadataClone['fullPath'] = location.path;\n  metadataClone['size'] = blob.size();\n  if (!metadataClone['contentType']) {\n    metadataClone['contentType'] = determineContentType_(null, blob);\n  }\n  return metadataClone;\n}\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\nfunction multipartUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var headers = {\n    'X-Goog-Upload-Protocol': 'multipart'\n  };\n  function genBoundary() {\n    var str = '';\n    for (var i = 0; i < 2; i++) {\n      str = str + Math.random().toString().slice(2);\n    }\n    return str;\n  }\n  var boundary = genBoundary();\n  headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\n  var metadata_ = metadataForUpload_(location, blob, metadata);\n  var metadataString = toResourceString(metadata_, mappings);\n  var preBlobPart = '--' + boundary + '\\r\\n' + 'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' + metadataString + '\\r\\n--' + boundary + '\\r\\n' + 'Content-Type: ' + metadata_['contentType'] + '\\r\\n\\r\\n';\n  var postBlobPart = '\\r\\n--' + boundary + '--';\n  var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  var urlParams = {\n    name: metadata_['fullPath']\n  };\n  var url = makeUrl(urlPart, service.host);\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\nvar ResumableUploadStatus = /** @class */function () {\n  function ResumableUploadStatus(current, total, finalized, metadata) {\n    this.current = current;\n    this.total = total;\n    this.finalized = !!finalized;\n    this.metadata = metadata || null;\n  }\n  return ResumableUploadStatus;\n}();\nfunction checkResumeHeader_(xhr, allowed) {\n  var status = null;\n  try {\n    status = xhr.getResponseHeader('X-Goog-Upload-Status');\n  } catch (e) {\n    handlerCheck(false);\n  }\n  var allowedStatus = allowed || ['active'];\n  handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\n  return status;\n}\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\n  var urlPart = location.bucketOnlyServerUrl();\n  var metadataForUpload = metadataForUpload_(location, blob, metadata);\n  var urlParams = {\n    name: metadataForUpload['fullPath']\n  };\n  var url = makeUrl(urlPart, service.host);\n  var method = 'POST';\n  var headers = {\n    'X-Goog-Upload-Protocol': 'resumable',\n    'X-Goog-Upload-Command': 'start',\n    'X-Goog-Upload-Header-Content-Length': \"\" + blob.size(),\n    'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\n    'Content-Type': 'application/json; charset=utf-8'\n  };\n  var body = toResourceString(metadataForUpload, mappings);\n  var timeout = service.maxUploadRetryTime;\n  function handler(xhr) {\n    checkResumeHeader_(xhr);\n    var url;\n    try {\n      url = xhr.getResponseHeader('X-Goog-Upload-URL');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    handlerCheck(isString(url));\n    return url;\n  }\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.urlParams = urlParams;\n  requestInfo.headers = headers;\n  requestInfo.body = body;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\nfunction getResumableUploadStatus(service, location, url, blob) {\n  var headers = {\n    'X-Goog-Upload-Command': 'query'\n  };\n  function handler(xhr) {\n    var status = checkResumeHeader_(xhr, ['active', 'final']);\n    var sizeString = null;\n    try {\n      sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\n    } catch (e) {\n      handlerCheck(false);\n    }\n    if (!sizeString) {\n      // null or empty string\n      handlerCheck(false);\n    }\n    var size = Number(sizeString);\n    handlerCheck(!isNaN(size));\n    return new ResumableUploadStatus(size, blob.size(), status === 'final');\n  }\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\n  // TODO(andysoto): standardize on internal asserts\n  // assert(!(opt_status && opt_status.finalized));\n  var status_ = new ResumableUploadStatus(0, 0);\n  if (status) {\n    status_.current = status.current;\n    status_.total = status.total;\n  } else {\n    status_.current = 0;\n    status_.total = blob.size();\n  }\n  if (blob.size() !== status_.total) {\n    throw serverFileWrongSize();\n  }\n  var bytesLeft = status_.total - status_.current;\n  var bytesToUpload = bytesLeft;\n  if (chunkSize > 0) {\n    bytesToUpload = Math.min(bytesToUpload, chunkSize);\n  }\n  var startByte = status_.current;\n  var endByte = startByte + bytesToUpload;\n  var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\n  var headers = {\n    'X-Goog-Upload-Command': uploadCommand,\n    'X-Goog-Upload-Offset': \"\" + status_.current\n  };\n  var body = blob.slice(startByte, endByte);\n  if (body === null) {\n    throw cannotSliceBlob();\n  }\n  function handler(xhr, text) {\n    // TODO(andysoto): Verify the MD5 of each uploaded range:\n    // the 'x-range-md5' header comes back with status code 308 responses.\n    // We'll only be able to bail out though, because you can't re-upload a\n    // range that you previously uploaded.\n    var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\n    var newCurrent = status_.current + bytesToUpload;\n    var size = blob.size();\n    var metadata;\n    if (uploadStatus === 'final') {\n      metadata = metadataHandler(service, mappings)(xhr, text);\n    } else {\n      metadata = null;\n    }\n    return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\n  }\n  var method = 'POST';\n  var timeout = service.maxUploadRetryTime;\n  var requestInfo = new RequestInfo(url, method, handler, timeout);\n  requestInfo.headers = headers;\n  requestInfo.body = body.uploadData();\n  requestInfo.progressCallback = progressCallback || null;\n  requestInfo.errorHandler = sharedErrorHandler(location);\n  return requestInfo;\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Observer = /** @class */function () {\n  function Observer(nextOrObserver, error, complete) {\n    var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\n    if (asFunctions) {\n      this.next = nextOrObserver;\n      this.error = error;\n      this.complete = complete;\n    } else {\n      var observer = nextOrObserver;\n      this.next = observer.next;\n      this.error = observer.error;\n      this.complete = observer.complete;\n    }\n  }\n  return Observer;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction async(f) {\n  return function () {\n    var argsToForward = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      argsToForward[_i] = arguments[_i];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.resolve().then(function () {\n      return f.apply(void 0, argsToForward);\n    });\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\nvar UploadTask = /** @class */function () {\n  /**\r\n   * @param ref - The firebaseStorage.Reference object this task came\r\n   *     from, untyped to avoid cyclic dependencies.\r\n   * @param blob - The blob to upload.\r\n   */\n  function UploadTask(ref, blob, metadata) {\n    var _this = this;\n    if (metadata === void 0) {\n      metadata = null;\n    }\n    /**\r\n     * Number of bytes transferred so far.\r\n     */\n    this._transferred = 0;\n    this._needToFetchStatus = false;\n    this._needToFetchMetadata = false;\n    this._observers = [];\n    this._error = undefined;\n    this._uploadUrl = undefined;\n    this._request = undefined;\n    this._chunkMultiplier = 1;\n    this._resolve = undefined;\n    this._reject = undefined;\n    this._ref = ref;\n    this._blob = blob;\n    this._metadata = metadata;\n    this._mappings = getMappings();\n    this._resumable = this._shouldDoResumable(this._blob);\n    this._state = \"running\" /* RUNNING */;\n    this._errorHandler = function (error) {\n      _this._request = undefined;\n      _this._chunkMultiplier = 1;\n      if (error._codeEquals(\"canceled\" /* CANCELED */)) {\n        _this._needToFetchStatus = true;\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n        _this._transition(\"error\" /* ERROR */);\n      }\n    };\n    this._metadataErrorHandler = function (error) {\n      _this._request = undefined;\n      if (error._codeEquals(\"canceled\" /* CANCELED */)) {\n        _this.completeTransitions_();\n      } else {\n        _this._error = error;\n        _this._transition(\"error\" /* ERROR */);\n      }\n    };\n    this._promise = new Promise(function (resolve, reject) {\n      _this._resolve = resolve;\n      _this._reject = reject;\n      _this._start();\n    });\n    // Prevent uncaught rejections on the internal promise from bubbling out\n    // to the top level with a dummy handler.\n    this._promise.then(null, function () {});\n  }\n  UploadTask.prototype._makeProgressCallback = function () {\n    var _this = this;\n    var sizeBefore = this._transferred;\n    return function (loaded) {\n      return _this._updateProgress(sizeBefore + loaded);\n    };\n  };\n  UploadTask.prototype._shouldDoResumable = function (blob) {\n    return blob.size() > 256 * 1024;\n  };\n  UploadTask.prototype._start = function () {\n    if (this._state !== \"running\" /* RUNNING */) {\n      // This can happen if someone pauses us in a resume callback, for example.\n      return;\n    }\n    if (this._request !== undefined) {\n      return;\n    }\n    if (this._resumable) {\n      if (this._uploadUrl === undefined) {\n        this._createResumable();\n      } else {\n        if (this._needToFetchStatus) {\n          this._fetchStatus();\n        } else {\n          if (this._needToFetchMetadata) {\n            // Happens if we miss the metadata on upload completion.\n            this._fetchMetadata();\n          } else {\n            this._continueUpload();\n          }\n        }\n      }\n    } else {\n      this._oneShotUpload();\n    }\n  };\n  UploadTask.prototype._resolveToken = function (callback) {\n    var _this = this;\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    Promise.all([this._ref.storage._getAuthToken(), this._ref.storage._getAppCheckToken()]).then(function (_a) {\n      var authToken = _a[0],\n        appCheckToken = _a[1];\n      switch (_this._state) {\n        case \"running\" /* RUNNING */:\n          callback(authToken, appCheckToken);\n          break;\n        case \"canceling\" /* CANCELING */:\n          _this._transition(\"canceled\" /* CANCELED */);\n          break;\n        case \"pausing\" /* PAUSING */:\n          _this._transition(\"paused\" /* PAUSED */);\n          break;\n      }\n    });\n  };\n  // TODO(andysoto): assert false\n  UploadTask.prototype._createResumable = function () {\n    var _this = this;\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n      var createRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n      _this._request = createRequest;\n      createRequest.getPromise().then(function (url) {\n        _this._request = undefined;\n        _this._uploadUrl = url;\n        _this._needToFetchStatus = false;\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n  UploadTask.prototype._fetchStatus = function () {\n    var _this = this;\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    var url = this._uploadUrl;\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\n      var statusRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n      _this._request = statusRequest;\n      statusRequest.getPromise().then(function (status) {\n        status = status;\n        _this._request = undefined;\n        _this._updateProgress(status.current);\n        _this._needToFetchStatus = false;\n        if (status.finalized) {\n          _this._needToFetchMetadata = true;\n        }\n        _this.completeTransitions_();\n      }, _this._errorHandler);\n    });\n  };\n  UploadTask.prototype._continueUpload = function () {\n    var _this = this;\n    var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    var status = new ResumableUploadStatus(this._transferred, this._blob.size());\n    // TODO(andysoto): assert(this.uploadUrl_ !== null);\n    var url = this._uploadUrl;\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo;\n      try {\n        requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\n      } catch (e) {\n        _this._error = e;\n        _this._transition(\"error\" /* ERROR */);\n        return;\n      }\n      var uploadRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n      _this._request = uploadRequest;\n      uploadRequest.getPromise().then(function (newStatus) {\n        _this._increaseMultiplier();\n        _this._request = undefined;\n        _this._updateProgress(newStatus.current);\n        if (newStatus.finalized) {\n          _this._metadata = newStatus.metadata;\n          _this._transition(\"success\" /* SUCCESS */);\n        } else {\n          _this.completeTransitions_();\n        }\n      }, _this._errorHandler);\n    });\n  };\n  UploadTask.prototype._increaseMultiplier = function () {\n    var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\n    // Max chunk size is 32M.\n    if (currentSize < 32 * 1024 * 1024) {\n      this._chunkMultiplier *= 2;\n    }\n  };\n  UploadTask.prototype._fetchMetadata = function () {\n    var _this = this;\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = getMetadata$2(_this._ref.storage, _this._ref._location, _this._mappings);\n      var metadataRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n      _this._request = metadataRequest;\n      metadataRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n        _this._transition(\"success\" /* SUCCESS */);\n      }, _this._metadataErrorHandler);\n    });\n  };\n  UploadTask.prototype._oneShotUpload = function () {\n    var _this = this;\n    this._resolveToken(function (authToken, appCheckToken) {\n      var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\n      var multipartRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\n      _this._request = multipartRequest;\n      multipartRequest.getPromise().then(function (metadata) {\n        _this._request = undefined;\n        _this._metadata = metadata;\n        _this._updateProgress(_this._blob.size());\n        _this._transition(\"success\" /* SUCCESS */);\n      }, _this._errorHandler);\n    });\n  };\n  UploadTask.prototype._updateProgress = function (transferred) {\n    var old = this._transferred;\n    this._transferred = transferred;\n    // A progress update can make the \"transferred\" value smaller (e.g. a\n    // partial upload not completed by server, after which the \"transferred\"\n    // value may reset to the value at the beginning of the request).\n    if (this._transferred !== old) {\n      this._notifyObservers();\n    }\n  };\n  UploadTask.prototype._transition = function (state) {\n    if (this._state === state) {\n      return;\n    }\n    switch (state) {\n      case \"canceling\" /* CANCELING */:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case \"pausing\" /* PAUSING */:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING);\n        this._state = state;\n        if (this._request !== undefined) {\n          this._request.cancel();\n        }\n        break;\n      case \"running\" /* RUNNING */:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.PAUSING);\n        var wasPaused = this._state === \"paused\" /* PAUSED */;\n        this._state = state;\n        if (wasPaused) {\n          this._notifyObservers();\n          this._start();\n        }\n        break;\n      case \"paused\" /* PAUSED */:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case \"canceled\" /* CANCELED */:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.PAUSED ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._error = canceled();\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case \"error\" /* ERROR */:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n      case \"success\" /* SUCCESS */:\n        // TODO(andysoto):\n        // assert(this.state_ === InternalTaskState.RUNNING ||\n        //        this.state_ === InternalTaskState.PAUSING ||\n        //        this.state_ === InternalTaskState.CANCELING);\n        this._state = state;\n        this._notifyObservers();\n        break;\n    }\n  };\n  UploadTask.prototype.completeTransitions_ = function () {\n    switch (this._state) {\n      case \"pausing\" /* PAUSING */:\n        this._transition(\"paused\" /* PAUSED */);\n        break;\n      case \"canceling\" /* CANCELING */:\n        this._transition(\"canceled\" /* CANCELED */);\n        break;\n      case \"running\" /* RUNNING */:\n        this._start();\n        break;\n    }\n  };\n  Object.defineProperty(UploadTask.prototype, \"snapshot\", {\n    /**\r\n     * A snapshot of the current task state.\r\n     */\n    get: function () {\n      var externalState = taskStateFromInternalTaskState(this._state);\n      return {\n        bytesTransferred: this._transferred,\n        totalBytes: this._blob.size(),\n        state: externalState,\n        metadata: this._metadata,\n        task: this,\n        ref: this._ref\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Adds a callback for an event.\r\n   * @param type - The type of event to listen for.\r\n   * @param nextOrObserver -\r\n   *     The `next` function, which gets called for each item in\r\n   *     the event stream, or an observer object with some or all of these three\r\n   *     properties (`next`, `error`, `complete`).\r\n   * @param error - A function that gets called with a `FirebaseStorageError`\r\n   *     if the event stream ends due to an error.\r\n   * @param completed - A function that gets called if the\r\n   *     event stream ends normally.\r\n   * @returns\r\n   *     If only the event argument is passed, returns a function you can use to\r\n   *     add callbacks (see the examples above). If more than just the event\r\n   *     argument is passed, returns a function you can call to unregister the\r\n   *     callbacks.\r\n   */\n  UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n    var observer = new Observer(nextOrObserver, error, completed);\n    this._addObserver(observer);\n    return function () {\n      _this._removeObserver(observer);\n    };\n  };\n  /**\r\n   * This object behaves like a Promise, and resolves with its snapshot data\r\n   * when the upload completes.\r\n   * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n   * @param onRejected - The rejection callback.\r\n   */\n  UploadTask.prototype.then = function (onFulfilled, onRejected) {\n    // These casts are needed so that TypeScript can infer the types of the\n    // resulting Promise.\n    return this._promise.then(onFulfilled, onRejected);\n  };\n  /**\r\n   * Equivalent to calling `then(null, onRejected)`.\r\n   */\n  UploadTask.prototype.catch = function (onRejected) {\n    return this.then(null, onRejected);\n  };\n  /**\r\n   * Adds the given observer.\r\n   */\n  UploadTask.prototype._addObserver = function (observer) {\n    this._observers.push(observer);\n    this._notifyObserver(observer);\n  };\n  /**\r\n   * Removes the given observer.\r\n   */\n  UploadTask.prototype._removeObserver = function (observer) {\n    var i = this._observers.indexOf(observer);\n    if (i !== -1) {\n      this._observers.splice(i, 1);\n    }\n  };\n  UploadTask.prototype._notifyObservers = function () {\n    var _this = this;\n    this._finishPromise();\n    var observers = this._observers.slice();\n    observers.forEach(function (observer) {\n      _this._notifyObserver(observer);\n    });\n  };\n  UploadTask.prototype._finishPromise = function () {\n    if (this._resolve !== undefined) {\n      var triggered = true;\n      switch (taskStateFromInternalTaskState(this._state)) {\n        case TaskState.SUCCESS:\n          async(this._resolve.bind(null, this.snapshot))();\n          break;\n        case TaskState.CANCELED:\n        case TaskState.ERROR:\n          var toCall = this._reject;\n          async(toCall.bind(null, this._error))();\n          break;\n        default:\n          triggered = false;\n          break;\n      }\n      if (triggered) {\n        this._resolve = undefined;\n        this._reject = undefined;\n      }\n    }\n  };\n  UploadTask.prototype._notifyObserver = function (observer) {\n    var externalState = taskStateFromInternalTaskState(this._state);\n    switch (externalState) {\n      case TaskState.RUNNING:\n      case TaskState.PAUSED:\n        if (observer.next) {\n          async(observer.next.bind(observer, this.snapshot))();\n        }\n        break;\n      case TaskState.SUCCESS:\n        if (observer.complete) {\n          async(observer.complete.bind(observer))();\n        }\n        break;\n      case TaskState.CANCELED:\n      case TaskState.ERROR:\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n        break;\n      default:\n        // TODO(andysoto): assert(false);\n        if (observer.error) {\n          async(observer.error.bind(observer, this._error))();\n        }\n    }\n  };\n  /**\r\n   * Resumes a paused task. Has no effect on a currently running or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n  UploadTask.prototype.resume = function () {\n    var valid = this._state === \"paused\" /* PAUSED */ || this._state === \"pausing\" /* PAUSING */;\n    if (valid) {\n      this._transition(\"running\" /* RUNNING */);\n    }\n    return valid;\n  };\n  /**\r\n   * Pauses a currently running task. Has no effect on a paused or failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n  UploadTask.prototype.pause = function () {\n    var valid = this._state === \"running\" /* RUNNING */;\n    if (valid) {\n      this._transition(\"pausing\" /* PAUSING */);\n    }\n    return valid;\n  };\n  /**\r\n   * Cancels a currently running or paused task. Has no effect on a complete or\r\n   * failed task.\r\n   * @returns True if the operation took effect, false if ignored.\r\n   */\n  UploadTask.prototype.cancel = function () {\n    var valid = this._state === \"running\" /* RUNNING */ || this._state === \"pausing\" /* PAUSING */;\n    if (valid) {\n      this._transition(\"canceling\" /* CANCELING */);\n    }\n    return valid;\n  };\n  return UploadTask;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\nvar Reference = /** @class */function () {\n  function Reference(_service, location) {\n    this._service = _service;\n    if (location instanceof Location) {\n      this._location = location;\n    } else {\n      this._location = Location.makeFromUrl(location, _service.host);\n    }\n  }\n  /**\r\n   * Returns the URL for the bucket and path this object references,\r\n   *     in the form gs://<bucket>/<object-path>\r\n   * @override\r\n   */\n  Reference.prototype.toString = function () {\n    return 'gs://' + this._location.bucket + '/' + this._location.path;\n  };\n  Reference.prototype._newRef = function (service, location) {\n    return new Reference(service, location);\n  };\n  Object.defineProperty(Reference.prototype, \"root\", {\n    /**\r\n     * A reference to the root of this object's bucket.\r\n     */\n    get: function () {\n      var location = new Location(this._location.bucket, '');\n      return this._newRef(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"bucket\", {\n    /**\r\n     * The name of the bucket containing this reference's object.\r\n     */\n    get: function () {\n      return this._location.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"fullPath\", {\n    /**\r\n     * The full path of this object.\r\n     */\n    get: function () {\n      return this._location.path;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"name\", {\n    /**\r\n     * The short name of this object, which is the last component of the full path.\r\n     * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n     */\n    get: function () {\n      return lastComponent(this._location.path);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"storage\", {\n    /**\r\n     * The `StorageService` instance this `StorageReference` is associated with.\r\n     */\n    get: function () {\n      return this._service;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Reference.prototype, \"parent\", {\n    /**\r\n     * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n     * this reference is the root.\r\n     */\n    get: function () {\n      var newPath = parent(this._location.path);\n      if (newPath === null) {\n        return null;\n      }\n      var location = new Location(this._location.bucket, newPath);\n      return new Reference(this._service, location);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Utility function to throw an error in methods that do not accept a root reference.\r\n   */\n  Reference.prototype._throwIfRoot = function (name) {\n    if (this._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n  return Reference;\n}();\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\nfunction uploadBytesResumable$1(ref, data, metadata) {\n  ref._throwIfRoot('uploadBytesResumable');\n  return new UploadTask(ref, new FbsBlob(data), metadata);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\nfunction listAll$1(ref) {\n  var accumulator = {\n    prefixes: [],\n    items: []\n  };\n  return listAllHelper(ref, accumulator).then(function () {\n    return accumulator;\n  });\n}\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\nfunction listAllHelper(ref, accumulator, pageToken) {\n  return __awaiter(this, void 0, void 0, function () {\n    var opt, nextPage;\n    var _a, _b;\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          opt = {\n            // maxResults is 1000 by default.\n            pageToken: pageToken\n          };\n          return [4 /*yield*/, list$1(ref, opt)];\n        case 1:\n          nextPage = _c.sent();\n          (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\n          (_b = accumulator.items).push.apply(_b, nextPage.items);\n          if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\n          return [4 /*yield*/, listAllHelper(ref, accumulator, nextPage.nextPageToken)];\n        case 2:\n          _c.sent();\n          _c.label = 3;\n        case 3:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\nfunction list$1(ref, options) {\n  return __awaiter(this, void 0, void 0, function () {\n    var op, requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (options != null) {\n            if (typeof options.maxResults === 'number') {\n              validateNumber('options.maxResults', /* minValue= */1, /* maxValue= */1000, options.maxResults);\n            }\n          }\n          op = options || {};\n          requestInfo = list$2(ref.storage, ref._location, /*delimiter= */'/', op.pageToken, op.maxResults);\n          return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\n        case 1:\n          return [2 /*return*/, _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\nfunction getMetadata$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getMetadata');\n          requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\n          return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\n        case 1:\n          return [2 /*return*/, _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\nfunction updateMetadata$1(ref, metadata) {\n  return __awaiter(this, void 0, void 0, function () {\n    var requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('updateMetadata');\n          requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\n          return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\n        case 1:\n          return [2 /*return*/, _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\nfunction getDownloadURL$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('getDownloadURL');\n          requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\n          return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\n        case 1:\n          return [2 /*return*/, _a.sent().getPromise().then(function (url) {\n            if (url === null) {\n              throw noDownloadURL();\n            }\n            return url;\n          })];\n      }\n    });\n  });\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\nfunction deleteObject$1(ref) {\n  return __awaiter(this, void 0, void 0, function () {\n    var requestInfo;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ref._throwIfRoot('deleteObject');\n          requestInfo = deleteObject$2(ref.storage, ref._location);\n          return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\n        case 1:\n          return [2 /*return*/, _a.sent().getPromise()];\n      }\n    });\n  });\n}\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\nfunction _getChild$1(ref, childPath) {\n  var newPath = child(ref._location.path, childPath);\n  var location = new Location(ref._location.bucket, newPath);\n  return new Reference(ref.storage, location);\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction isUrl(path) {\n  return /^[A-Za-z]+:\\/\\//.test(path);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\nfunction refFromURL(service, url) {\n  return new Reference(service, url);\n}\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\nfunction refFromPath(ref, path) {\n  if (ref instanceof FirebaseStorageImpl) {\n    var service = ref;\n    if (service._bucket == null) {\n      throw noDefaultBucket();\n    }\n    var reference = new Reference(service, service._bucket);\n    if (path != null) {\n      return refFromPath(reference, path);\n    } else {\n      return reference;\n    }\n  } else {\n    // ref is a Reference\n    if (path !== undefined) {\n      return _getChild$1(ref, path);\n    } else {\n      return ref;\n    }\n  }\n}\nfunction ref$1(serviceOrRef, pathOrUrl) {\n  if (pathOrUrl && isUrl(pathOrUrl)) {\n    if (serviceOrRef instanceof FirebaseStorageImpl) {\n      return refFromURL(serviceOrRef, pathOrUrl);\n    } else {\n      throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\n    }\n  } else {\n    return refFromPath(serviceOrRef, pathOrUrl);\n  }\n}\nfunction extractBucket(host, config) {\n  var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\n  if (bucketString == null) {\n    return null;\n  }\n  return Location.makeFromBucketSpec(bucketString, host);\n}\nfunction connectStorageEmulator$1(storage, host, port, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  storage.host = \"http://\" + host + \":\" + port;\n  var mockUserToken = options.mockUserToken;\n  if (mockUserToken) {\n    storage._overrideAuthToken = typeof mockUserToken === 'string' ? mockUserToken : createMockUserToken(mockUserToken, storage.app.options.projectId);\n  }\n}\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @public\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\nvar FirebaseStorageImpl = /** @class */function () {\n  function FirebaseStorageImpl(\n  /**\r\n   * FirebaseApp associated with this StorageService instance.\r\n   */\n  app, _authProvider,\n  /**\r\n   * @internal\r\n   */\n  _appCheckProvider,\n  /**\r\n   * @internal\r\n   */\n  _pool, _url, _firebaseVersion) {\n    this.app = app;\n    this._authProvider = _authProvider;\n    this._appCheckProvider = _appCheckProvider;\n    this._pool = _pool;\n    this._url = _url;\n    this._firebaseVersion = _firebaseVersion;\n    this._bucket = null;\n    /**\r\n     * This string can be in the formats:\r\n     * - host\r\n     * - host:port\r\n     * - protocol://host:port\r\n     */\n    this._host = DEFAULT_HOST;\n    this._appId = null;\n    this._deleted = false;\n    this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\n    this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\n    this._requests = new Set();\n    if (_url != null) {\n      this._bucket = Location.makeFromBucketSpec(_url, this._host);\n    } else {\n      this._bucket = extractBucket(this._host, this.app.options);\n    }\n  }\n  Object.defineProperty(FirebaseStorageImpl.prototype, \"host\", {\n    get: function () {\n      return this._host;\n    },\n    /**\r\n     * Set host string for this service.\r\n     * @param host - host string in the form of host, host:port,\r\n     * or protocol://host:port\r\n     */\n    set: function (host) {\n      this._host = host;\n      if (this._url != null) {\n        this._bucket = Location.makeFromBucketSpec(this._url, host);\n      } else {\n        this._bucket = extractBucket(host, this.app.options);\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageImpl.prototype, \"maxUploadRetryTime\", {\n    /**\r\n     * The maximum time to retry uploads in milliseconds.\r\n     */\n    get: function () {\n      return this._maxUploadRetryTime;\n    },\n    set: function (time) {\n      validateNumber('time', /* minValue=*/0, /* maxValue= */Number.POSITIVE_INFINITY, time);\n      this._maxUploadRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(FirebaseStorageImpl.prototype, \"maxOperationRetryTime\", {\n    /**\r\n     * The maximum time to retry operations other than uploads or downloads in\r\n     * milliseconds.\r\n     */\n    get: function () {\n      return this._maxOperationRetryTime;\n    },\n    set: function (time) {\n      validateNumber('time', /* minValue=*/0, /* maxValue= */Number.POSITIVE_INFINITY, time);\n      this._maxOperationRetryTime = time;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  FirebaseStorageImpl.prototype._getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var auth, tokenData;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this._overrideAuthToken) {\n              return [2 /*return*/, this._overrideAuthToken];\n            }\n            auth = this._authProvider.getImmediate({\n              optional: true\n            });\n            if (!auth) return [3 /*break*/, 2];\n            return [4 /*yield*/, auth.getToken()];\n          case 1:\n            tokenData = _a.sent();\n            if (tokenData !== null) {\n              return [2 /*return*/, tokenData.accessToken];\n            }\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/, null];\n        }\n      });\n    });\n  };\n  FirebaseStorageImpl.prototype._getAppCheckToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var appCheck, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            appCheck = this._appCheckProvider.getImmediate({\n              optional: true\n            });\n            if (!appCheck) return [3 /*break*/, 2];\n            return [4 /*yield*/, appCheck.getToken()];\n          case 1:\n            result = _a.sent();\n            // TODO: What do we want to do if there is an error getting the token?\n            // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\n            // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\n            // the token (actual or dummy) to send requests.\n            return [2 /*return*/, result.token];\n          case 2:\n            return [2 /*return*/, null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Stop running requests and prevent more from being created.\r\n   */\n  FirebaseStorageImpl.prototype._delete = function () {\n    if (!this._deleted) {\n      this._deleted = true;\n      this._requests.forEach(function (request) {\n        return request.cancel();\n      });\n      this._requests.clear();\n    }\n    return Promise.resolve();\n  };\n  /**\r\n   * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n   * at the given Location.\r\n   */\n  FirebaseStorageImpl.prototype._makeStorageReference = function (loc) {\n    return new Reference(this, loc);\n  };\n  /**\r\n   * @param requestInfo - HTTP RequestInfo object\r\n   * @param authToken - Firebase auth token\r\n   */\n  FirebaseStorageImpl.prototype._makeRequest = function (requestInfo, authToken, appCheckToken) {\n    var _this = this;\n    if (!this._deleted) {\n      var request_1 = makeRequest(requestInfo, this._appId, authToken, appCheckToken, this._pool, this._firebaseVersion);\n      this._requests.add(request_1);\n      // Request removes itself from set when complete.\n      request_1.getPromise().then(function () {\n        return _this._requests.delete(request_1);\n      }, function () {\n        return _this._requests.delete(request_1);\n      });\n      return request_1;\n    } else {\n      return new FailRequest(appDeleted());\n    }\n  };\n  FirebaseStorageImpl.prototype.makeRequestWithTokens = function (requestInfo) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, authToken, appCheckToken;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all([this._getAuthToken(), this._getAppCheckToken()])];\n          case 1:\n            _a = _b.sent(), authToken = _a[0], appCheckToken = _a[1];\n            return [2 /*return*/, this._makeRequest(requestInfo, authToken, appCheckToken)];\n        }\n      });\n    });\n  };\n  return FirebaseStorageImpl;\n}();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\nfunction uploadBytesResumable(ref, data, metadata) {\n  ref = getModularInstance(ref);\n  return uploadBytesResumable$1(ref, data, metadata);\n}\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */\nfunction getMetadata(ref) {\n  ref = getModularInstance(ref);\n  return getMetadata$1(ref);\n}\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */\nfunction updateMetadata(ref, metadata) {\n  ref = getModularInstance(ref);\n  return updateMetadata$1(ref, metadata);\n}\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\nfunction list(ref, options) {\n  ref = getModularInstance(ref);\n  return list$1(ref, options);\n}\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\nfunction listAll(ref) {\n  ref = getModularInstance(ref);\n  return listAll$1(ref);\n}\n/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\nfunction getDownloadURL(ref) {\n  ref = getModularInstance(ref);\n  return getDownloadURL$1(ref);\n}\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\nfunction deleteObject(ref) {\n  ref = getModularInstance(ref);\n  return deleteObject$1(ref);\n}\nfunction ref(serviceOrRef, pathOrUrl) {\n  serviceOrRef = getModularInstance(serviceOrRef);\n  return ref$1(serviceOrRef, pathOrUrl);\n}\n/**\r\n * @internal\r\n */\nfunction _getChild(ref, childPath) {\n  return _getChild$1(ref, childPath);\n}\n/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules.\r\n * @public\r\n */\nfunction connectStorageEmulator(storage, host, port, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  connectStorageEmulator$1(storage, host, port, options);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar UploadTaskSnapshotCompat = /** @class */function () {\n  function UploadTaskSnapshotCompat(_delegate, task, ref) {\n    this._delegate = _delegate;\n    this.task = task;\n    this.ref = ref;\n  }\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\n    get: function () {\n      return this._delegate.bytesTransferred;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\n    get: function () {\n      return this._delegate.metadata;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\n    get: function () {\n      return this._delegate.state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\n    get: function () {\n      return this._delegate.totalBytes;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return UploadTaskSnapshotCompat;\n}();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar UploadTaskCompat = /** @class */function () {\n  function UploadTaskCompat(_delegate, _ref) {\n    this._delegate = _delegate;\n    this._ref = _ref;\n    this.cancel = this._delegate.cancel.bind(this._delegate);\n    this.catch = this._delegate.catch.bind(this._delegate);\n    this.pause = this._delegate.pause.bind(this._delegate);\n    this.resume = this._delegate.resume.bind(this._delegate);\n  }\n  Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\n    get: function () {\n      return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\n    var _this = this;\n    return this._delegate.then(function (snapshot) {\n      if (onFulfilled) {\n        return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\n      }\n    }, onRejected);\n  };\n  UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\n    var _this = this;\n    var wrappedNextOrObserver = undefined;\n    if (!!nextOrObserver) {\n      if (typeof nextOrObserver === 'function') {\n        wrappedNextOrObserver = function (taskSnapshot) {\n          return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n        };\n      } else {\n        wrappedNextOrObserver = {\n          next: !!nextOrObserver.next ? function (taskSnapshot) {\n            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\n          } : undefined,\n          complete: nextOrObserver.complete || undefined,\n          error: nextOrObserver.error || undefined\n        };\n      }\n    }\n    return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\n  };\n  return UploadTaskCompat;\n}();\nvar ListResultCompat = /** @class */function () {\n  function ListResultCompat(_delegate, _service) {\n    this._delegate = _delegate;\n    this._service = _service;\n  }\n  Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\n    get: function () {\n      var _this = this;\n      return this._delegate.prefixes.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"items\", {\n    get: function () {\n      var _this = this;\n      return this._delegate.items.map(function (ref) {\n        return new ReferenceCompat(ref, _this._service);\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\n    get: function () {\n      return this._delegate.nextPageToken || null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return ListResultCompat;\n}();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar ReferenceCompat = /** @class */function () {\n  function ReferenceCompat(_delegate, storage) {\n    this._delegate = _delegate;\n    this.storage = storage;\n  }\n  Object.defineProperty(ReferenceCompat.prototype, \"name\", {\n    get: function () {\n      return this._delegate.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\n    get: function () {\n      return this._delegate.bucket;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\n    get: function () {\n      return this._delegate.fullPath;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ReferenceCompat.prototype.toString = function () {\n    return this._delegate.toString();\n  };\n  /**\r\n   * @returns A reference to the object obtained by\r\n   * appending childPath, removing any duplicate, beginning, or trailing\r\n   * slashes.\r\n   */\n  ReferenceCompat.prototype.child = function (childPath) {\n    var reference = _getChild(this._delegate, childPath);\n    return new ReferenceCompat(reference, this.storage);\n  };\n  Object.defineProperty(ReferenceCompat.prototype, \"root\", {\n    get: function () {\n      return new ReferenceCompat(this._delegate.root, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\n    /**\r\n     * @returns A reference to the parent of the\r\n     * current object, or null if the current object is the root.\r\n     */\n    get: function () {\n      var reference = this._delegate.parent;\n      if (reference == null) {\n        return null;\n      }\n      return new ReferenceCompat(reference, this.storage);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Uploads a blob to this object's location.\r\n   * @param data - The blob to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n  ReferenceCompat.prototype.put = function (data, metadata) {\n    this._throwIfRoot('put');\n    return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\n  };\n  /**\r\n   * Uploads a string to this object's location.\r\n   * @param value - The string to upload.\r\n   * @param format - The format of the string to upload.\r\n   * @returns An UploadTask that lets you control and\r\n   * observe the upload.\r\n   */\n  ReferenceCompat.prototype.putString = function (value, format, metadata) {\n    if (format === void 0) {\n      format = StringFormat.RAW;\n    }\n    this._throwIfRoot('putString');\n    var data = dataFromString(format, value);\n    var metadataClone = __assign({}, metadata);\n    if (metadataClone['contentType'] == null && data.contentType != null) {\n      metadataClone['contentType'] = data.contentType;\n    }\n    return new UploadTaskCompat(new UploadTask(this._delegate, new FbsBlob(data.data, true), metadataClone), this);\n  };\n  /**\r\n   * List all items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * This is a helper method for calling list() repeatedly until there are\r\n   * no more results. The default pagination size is 1000.\r\n   *\r\n   * Note: The results may not be consistent if objects are changed while this\r\n   * operation is running.\r\n   *\r\n   * Warning: listAll may potentially consume too many resources if there are\r\n   * too many results.\r\n   *\r\n   * @returns A Promise that resolves with all the items and prefixes under\r\n   *  the current storage reference. `prefixes` contains references to\r\n   *  sub-directories and `items` contains references to objects in this\r\n   *  folder. `nextPageToken` is never returned.\r\n   */\n  ReferenceCompat.prototype.listAll = function () {\n    var _this = this;\n    return listAll(this._delegate).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * List items (files) and prefixes (folders) under this storage reference.\r\n   *\r\n   * List API is only available for Firebase Rules Version 2.\r\n   *\r\n   * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n   * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n   *\r\n   * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n   * support objects whose paths end with \"/\" or contain two consecutive\r\n   * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n   * list() may fail if there are too many unsupported objects in the bucket.\r\n   *\r\n   * @param options - See ListOptions for details.\r\n   * @returns A Promise that resolves with the items and prefixes.\r\n   * `prefixes` contains references to sub-folders and `items`\r\n   * contains references to objects in this folder. `nextPageToken`\r\n   * can be used to get the rest of the results.\r\n   */\n  ReferenceCompat.prototype.list = function (options) {\n    var _this = this;\n    return list(this._delegate, options || undefined).then(function (r) {\n      return new ListResultCompat(r, _this.storage);\n    });\n  };\n  /**\r\n   * A `Promise` that resolves with the metadata for this object. If this\r\n   * object doesn't exist or metadata cannot be retreived, the promise is\r\n   * rejected.\r\n   */\n  ReferenceCompat.prototype.getMetadata = function () {\n    return getMetadata(this._delegate);\n  };\n  /**\r\n   * Updates the metadata for this object.\r\n   * @param metadata - The new metadata for the object.\r\n   * Only values that have been explicitly set will be changed. Explicitly\r\n   * setting a value to null will remove the metadata.\r\n   * @returns A `Promise` that resolves\r\n   * with the new metadata for this object.\r\n   * @see firebaseStorage.Reference.prototype.getMetadata\r\n   */\n  ReferenceCompat.prototype.updateMetadata = function (metadata) {\n    return updateMetadata(this._delegate, metadata);\n  };\n  /**\r\n   * @returns A `Promise` that resolves with the download\r\n   * URL for this object.\r\n   */\n  ReferenceCompat.prototype.getDownloadURL = function () {\n    return getDownloadURL(this._delegate);\n  };\n  /**\r\n   * Deletes the object at this location.\r\n   * @returns A `Promise` that resolves if the deletion succeeds.\r\n   */\n  ReferenceCompat.prototype.delete = function () {\n    this._throwIfRoot('delete');\n    return deleteObject(this._delegate);\n  };\n  ReferenceCompat.prototype._throwIfRoot = function (name) {\n    if (this._delegate._location.path === '') {\n      throw invalidRootOperation(name);\n    }\n  };\n  return ReferenceCompat;\n}();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\nvar StorageServiceCompat = /** @class */function () {\n  function StorageServiceCompat(app, _delegate) {\n    this.app = app;\n    this._delegate = _delegate;\n  }\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\n    get: function () {\n      return this._delegate.maxOperationRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\n    get: function () {\n      return this._delegate.maxUploadRetryTime;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns a firebaseStorage.Reference for the given path in the default\r\n   * bucket.\r\n   */\n  StorageServiceCompat.prototype.ref = function (path) {\n    if (isUrl(path)) {\n      throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\n    }\n    return new ReferenceCompat(ref(this._delegate, path), this);\n  };\n  /**\r\n   * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n   * which must be a gs:// or http[s]:// URL.\r\n   */\n  StorageServiceCompat.prototype.refFromURL = function (url) {\n    if (!isUrl(url)) {\n      throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\n    }\n    try {\n      Location.makeFromUrl(url, this._delegate.host);\n    } catch (e) {\n      throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\n    }\n    return new ReferenceCompat(ref(this._delegate, url), this);\n  };\n  StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\n    this._delegate.maxUploadRetryTime = time;\n  };\n  StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\n    this._delegate.maxOperationRetryTime = time;\n  };\n  StorageServiceCompat.prototype.useEmulator = function (host, port, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    connectStorageEmulator(this._delegate, host, port, options);\n  };\n  return StorageServiceCompat;\n}();\nvar name = \"@firebase/storage\";\nvar version = \"0.7.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Type constant for Firebase Storage.\r\n */\nvar STORAGE_TYPE = 'storage';\nfunction factory(container, _a) {\n  var url = _a.instanceIdentifier;\n  // Dependencies\n  // TODO: This should eventually be 'app-compat'\n  var app = container.getProvider('app').getImmediate();\n  var authProvider = container.getProvider('auth-internal');\n  var appCheckProvider = container.getProvider('app-check-internal');\n  // TODO: get StorageService instance from component framework instead\n  // of creating a new one.\n  var storageServiceCompat = new StorageServiceCompat(app, new FirebaseStorageImpl(app, authProvider, appCheckProvider, new ConnectionPool(), url, firebase.SDK_VERSION));\n  return storageServiceCompat;\n}\nfunction registerStorage(instance) {\n  var namespaceExports = {\n    // no-inline\n    TaskState: TaskState,\n    TaskEvent: TaskEvent,\n    StringFormat: StringFormat,\n    Storage: FirebaseStorageImpl,\n    Reference: ReferenceCompat\n  };\n  instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */).setServiceProps(namespaceExports).setMultipleInstances(true));\n  instance.registerVersion(name, version);\n}\nregisterStorage(firebase);\nexport { registerStorage };","map":{"version":3,"names":["firebase","__extends","__spreadArray","__awaiter","__generator","__assign","FirebaseError","createMockUserToken","getModularInstance","Component","DEFAULT_HOST","CONFIG_STORAGE_BUCKET_KEY","DEFAULT_MAX_OPERATION_RETRY_TIME","DEFAULT_MAX_UPLOAD_RETRY_TIME","FirebaseStorageError","_super","code","message","_this","call","prependCode","customData","serverResponse","_baseMessage","Object","setPrototypeOf","prototype","_codeEquals","defineProperty","get","set","enumerable","configurable","unknown","objectNotFound","path","quotaExceeded","bucket","unauthenticated","unauthorizedApp","unauthorized","retryLimitExceeded","canceled","invalidUrl","url","invalidDefaultBucket","noDefaultBucket","cannotSliceBlob","serverFileWrongSize","noDownloadURL","invalidArgument","appDeleted","invalidRootOperation","name","invalidFormat","format","internalError","decodeBase64","encoded","atob","StringFormat","RAW","BASE64","BASE64URL","DATA_URL","StringData","data","contentType","dataFromString","stringData","utf8Bytes_","base64Bytes_","dataURLBytes_","dataURLContentType_","value","b","i","length","c","charCodeAt","push","valid","hi","lo","Uint8Array","percentEncodedBytes_","decoded","decodeURIComponent","e","hasMinus","indexOf","hasUnder","invalidChar","hasPlus","hasSlash","replace","bytes","array","DataURLParts","dataURL","base64","matches","match","middle","endsWith","substring","rest","dataUrl","parts","s","end","longEnough","TaskEvent","STATE_CHANGED","TaskState","RUNNING","PAUSED","SUCCESS","CANCELED","ERROR","taskStateFromInternalTaskState","state","ErrorCode","XhrConnection","sent_","xhr_","XMLHttpRequest","errorCode_","NO_ERROR","sendPromise_","Promise","resolve","addEventListener","ABORT","NETWORK_ERROR","send","method","body","headers","open","undefined","key","hasOwnProperty","setRequestHeader","toString","getErrorCode","getStatus","status","getResponseText","responseText","abort","getResponseHeader","header","addUploadProgressListener","listener","upload","removeUploadProgressListener","removeEventListener","newConnection","ConnectionPool","createConnection","Location","path_","fullServerUrl","encode","encodeURIComponent","bucketOnlyServerUrl","makeFromBucketSpec","bucketString","host","bucketLocation","makeFromUrl","location","bucketDomain","gsModify","loc","charAt","slice","gsPath","gsRegex","RegExp","gsIndices","httpModify","version","firebaseStorageHost","firebaseStoragePath","firebaseStorageRegExp","firebaseStorageIndices","cloudStorageHost","cloudStoragePath","cloudStorageRegExp","cloudStorageIndices","groups","regex","indices","postModify","group","captures","exec","bucketValue","pathValue","FailRequest","error","promise_","reject","getPromise","cancel","_appDelete","start","f","callback","timeout","waitSeconds","timeoutId","hitTimeout","cancelState","triggeredCallback","triggerCallback","args","_i","arguments","apply","callWithDelay","millis","setTimeout","handler","success","mustStop","waitMillis","Math","random","stopped","stop","wasTimeout","clearTimeout","id","isJustDef","p","isFunction","isNonArrayObject","Array","isArray","isString","String","isNativeBlob","isNativeBlobDefined","Blob","validateNumber","argument","minValue","maxValue","makeUrl","urlPart","protocolMatch","protocol","origin","makeQueryString","params","queryPart","nextPart","NetworkRequest","successCodes","additionalRetryCodes","errorCallback","progressCallback","pool","pendingConnection_","backoffId_","canceled_","appDelete_","url_","method_","headers_","body_","successCodes_","additionalRetryCodes_","callback_","errorCallback_","progressCallback_","timeout_","pool_","resolve_","reject_","start_","self","doTheRequest","backoffCallback","RequestEndStatus","connection","progressListener","progressEvent","loaded","total","lengthComputable","then","hitServer","isRetryStatusCode_","wasCanceled","successCode","backoffDone","requestWentThrough","wasSuccessCode","result","err","appDelete","isFiveHundredCode","extraRetryCodes","isExtraRetryCode","isRequestSpecificRetryCode","addAuthHeader_","authToken","addVersionHeader_","firebaseVersion","addGmpidHeader_","appId","addAppCheckHeader_","appCheckToken","makeRequest","requestInfo","urlParams","assign","errorHandler","getBlobBuilder","BlobBuilder","WebKitBlobBuilder","getBlob","bb","append","sliceBlob","blob","webkitSlice","mozSlice","FbsBlob","elideCopy","size","blobType","data_","type","ArrayBuffer","byteLength","size_","type_","startByte","endByte","realBlob","sliced","buffer","blobby","map","val","uint8Arrays","finalLength_1","forEach","merged_1","index_1","uploadData","jsonObjectOrNull","obj","JSON","parse","parent","index","lastIndexOf","newPath","child","childPath","canonicalChildPath","split","filter","component","join","lastComponent","noXform_","metadata","Mapping","server","local","writable","xform","mappings_","xformPath","fullPath","getMappings","mappings","mappingsXformPath","_metadata","nameMapping","xformSize","Number","sizeMapping","addRef","service","generateRef","_makeStorageReference","fromResource","resource","len","mapping","fromResourceString","resourceString","downloadUrlFromResourceString","tokens","tokensList","urls","token","base","queryString","alt","toResourceString","stringify","PREFIXES_KEY","ITEMS_KEY","fromBackendResponse","listResult","prefixes","items","nextPageToken","_a","pathWithoutTrailingSlash","reference","_b","_c","item","fromResponseString","RequestInfo","handlerCheck","cndn","metadataHandler","xhr","text","listHandler","downloadUrlHandler","sharedErrorHandler","newErr","includes","objectErrorHandler","shared","getMetadata$2","maxOperationRetryTime","list$2","delimiter","pageToken","maxResults","isRoot","getDownloadUrl","updateMetadata$2","deleteObject$2","_xhr","_text","determineContentType_","metadataForUpload_","metadataClone","multipartUpload","genBoundary","str","boundary","metadata_","metadataString","preBlobPart","postBlobPart","maxUploadRetryTime","ResumableUploadStatus","current","finalized","checkResumeHeader_","allowed","allowedStatus","createResumableUpload","metadataForUpload","getResumableUploadStatus","sizeString","isNaN","RESUMABLE_UPLOAD_CHUNK_SIZE","continueResumableUpload","chunkSize","status_","bytesLeft","bytesToUpload","min","uploadCommand","uploadStatus","newCurrent","Observer","nextOrObserver","complete","asFunctions","next","observer","async","argsToForward","UploadTask","ref","_transferred","_needToFetchStatus","_needToFetchMetadata","_observers","_error","_uploadUrl","_request","_chunkMultiplier","_resolve","_reject","_ref","_blob","_mappings","_resumable","_shouldDoResumable","_state","_errorHandler","completeTransitions_","_transition","_metadataErrorHandler","_promise","_start","_makeProgressCallback","sizeBefore","_updateProgress","_createResumable","_fetchStatus","_fetchMetadata","_continueUpload","_oneShotUpload","_resolveToken","all","storage","_getAuthToken","_getAppCheckToken","_location","createRequest","_makeRequest","statusRequest","uploadRequest","newStatus","_increaseMultiplier","currentSize","metadataRequest","multipartRequest","transferred","old","_notifyObservers","wasPaused","externalState","bytesTransferred","totalBytes","task","on","completed","_addObserver","_removeObserver","onFulfilled","onRejected","catch","_notifyObserver","splice","_finishPromise","observers","triggered","bind","snapshot","toCall","resume","pause","Reference","_service","_newRef","_throwIfRoot","uploadBytesResumable$1","listAll$1","accumulator","listAllHelper","opt","nextPage","label","list$1","sent","options","op","makeRequestWithTokens","getMetadata$1","updateMetadata$1","getDownloadURL$1","deleteObject$1","_getChild$1","isUrl","test","refFromURL","refFromPath","FirebaseStorageImpl","_bucket","ref$1","serviceOrRef","pathOrUrl","extractBucket","config","connectStorageEmulator$1","port","mockUserToken","_overrideAuthToken","app","projectId","_authProvider","_appCheckProvider","_pool","_url","_firebaseVersion","_host","_appId","_deleted","_maxOperationRetryTime","_maxUploadRetryTime","_requests","Set","time","POSITIVE_INFINITY","auth","tokenData","getImmediate","optional","getToken","accessToken","appCheck","_delete","request","clear","request_1","add","delete","uploadBytesResumable","getMetadata","updateMetadata","list","listAll","getDownloadURL","deleteObject","_getChild","connectStorageEmulator","UploadTaskSnapshotCompat","_delegate","UploadTaskCompat","wrappedNextOrObserver","taskSnapshot","ListResultCompat","ReferenceCompat","root","put","putString","r","StorageServiceCompat","setMaxUploadRetryTime","setMaxOperationRetryTime","useEmulator","STORAGE_TYPE","factory","container","instanceIdentifier","getProvider","authProvider","appCheckProvider","storageServiceCompat","SDK_VERSION","registerStorage","instance","namespaceExports","Storage","INTERNAL","registerComponent","setServiceProps","setMultipleInstances","registerVersion"],"sources":["C:/Progect for learning/angular-blog/node_modules/@firebase/storage/dist/index.browser.esm.js"],"sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __spreadArray, __awaiter, __generator, __assign } from 'tslib';\nimport { FirebaseError, createMockUserToken, getModularInstance } from '@firebase/util';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Constants used in the Firebase Storage library.\r\n */\r\n/**\r\n * Domain name for firebase storage.\r\n */\r\nvar DEFAULT_HOST = 'firebasestorage.googleapis.com';\r\n/**\r\n * The key in Firebase config json for the storage bucket.\r\n */\r\nvar CONFIG_STORAGE_BUCKET_KEY = 'storageBucket';\r\n/**\r\n * 2 minutes\r\n *\r\n * The timeout for all operations except upload.\r\n */\r\nvar DEFAULT_MAX_OPERATION_RETRY_TIME = 2 * 60 * 1000;\r\n/**\r\n * 10 minutes\r\n *\r\n * The timeout for upload.\r\n */\r\nvar DEFAULT_MAX_UPLOAD_RETRY_TIME = 10 * 60 * 1000;\n\n/**\r\n * An error returned by the Firebase Storage SDK.\r\n * @public\r\n */\r\nvar FirebaseStorageError = /** @class */ (function (_super) {\r\n    __extends(FirebaseStorageError, _super);\r\n    /**\r\n     * @param code - A StorageErrorCode string to be prefixed with 'storage/' and\r\n     *  added to the end of the message.\r\n     * @param message  - Error message.\r\n     */\r\n    function FirebaseStorageError(code, message) {\r\n        var _this = _super.call(this, prependCode(code), \"Firebase Storage: \" + message + \" (\" + prependCode(code) + \")\") || this;\r\n        /**\r\n         * Stores custom error data unque to FirebaseStorageError.\r\n         */\r\n        _this.customData = { serverResponse: null };\r\n        _this._baseMessage = _this.message;\r\n        // Without this, `instanceof FirebaseStorageError`, in tests for example,\r\n        // returns false.\r\n        Object.setPrototypeOf(_this, FirebaseStorageError.prototype);\r\n        return _this;\r\n    }\r\n    /**\r\n     * Compares a StorageErrorCode against this error's code, filtering out the prefix.\r\n     */\r\n    FirebaseStorageError.prototype._codeEquals = function (code) {\r\n        return prependCode(code) === this.code;\r\n    };\r\n    Object.defineProperty(FirebaseStorageError.prototype, \"serverResponse\", {\r\n        /**\r\n         * Optional response message that was added by the server.\r\n         */\r\n        get: function () {\r\n            return this.customData.serverResponse;\r\n        },\r\n        set: function (serverResponse) {\r\n            this.customData.serverResponse = serverResponse;\r\n            if (this.customData.serverResponse) {\r\n                this.message = this._baseMessage + \"\\n\" + this.customData.serverResponse;\r\n            }\r\n            else {\r\n                this.message = this._baseMessage;\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return FirebaseStorageError;\r\n}(FirebaseError));\r\nfunction prependCode(code) {\r\n    return 'storage/' + code;\r\n}\r\nfunction unknown() {\r\n    var message = 'An unknown error occurred, please check the error payload for ' +\r\n        'server response.';\r\n    return new FirebaseStorageError(\"unknown\" /* UNKNOWN */, message);\r\n}\r\nfunction objectNotFound(path) {\r\n    return new FirebaseStorageError(\"object-not-found\" /* OBJECT_NOT_FOUND */, \"Object '\" + path + \"' does not exist.\");\r\n}\r\nfunction quotaExceeded(bucket) {\r\n    return new FirebaseStorageError(\"quota-exceeded\" /* QUOTA_EXCEEDED */, \"Quota for bucket '\" +\r\n        bucket +\r\n        \"' exceeded, please view quota on \" +\r\n        'https://firebase.google.com/pricing/.');\r\n}\r\nfunction unauthenticated() {\r\n    var message = 'User is not authenticated, please authenticate using Firebase ' +\r\n        'Authentication and try again.';\r\n    return new FirebaseStorageError(\"unauthenticated\" /* UNAUTHENTICATED */, message);\r\n}\r\nfunction unauthorizedApp() {\r\n    return new FirebaseStorageError(\"unauthorized-app\" /* UNAUTHORIZED_APP */, 'This app does not have permission to access Firebase Storage on this project.');\r\n}\r\nfunction unauthorized(path) {\r\n    return new FirebaseStorageError(\"unauthorized\" /* UNAUTHORIZED */, \"User does not have permission to access '\" + path + \"'.\");\r\n}\r\nfunction retryLimitExceeded() {\r\n    return new FirebaseStorageError(\"retry-limit-exceeded\" /* RETRY_LIMIT_EXCEEDED */, 'Max retry time for operation exceeded, please try again.');\r\n}\r\nfunction canceled() {\r\n    return new FirebaseStorageError(\"canceled\" /* CANCELED */, 'User canceled the upload/download.');\r\n}\r\nfunction invalidUrl(url) {\r\n    return new FirebaseStorageError(\"invalid-url\" /* INVALID_URL */, \"Invalid URL '\" + url + \"'.\");\r\n}\r\nfunction invalidDefaultBucket(bucket) {\r\n    return new FirebaseStorageError(\"invalid-default-bucket\" /* INVALID_DEFAULT_BUCKET */, \"Invalid default bucket '\" + bucket + \"'.\");\r\n}\r\nfunction noDefaultBucket() {\r\n    return new FirebaseStorageError(\"no-default-bucket\" /* NO_DEFAULT_BUCKET */, 'No default bucket ' +\r\n        \"found. Did you set the '\" +\r\n        CONFIG_STORAGE_BUCKET_KEY +\r\n        \"' property when initializing the app?\");\r\n}\r\nfunction cannotSliceBlob() {\r\n    return new FirebaseStorageError(\"cannot-slice-blob\" /* CANNOT_SLICE_BLOB */, 'Cannot slice blob for upload. Please retry the upload.');\r\n}\r\nfunction serverFileWrongSize() {\r\n    return new FirebaseStorageError(\"server-file-wrong-size\" /* SERVER_FILE_WRONG_SIZE */, 'Server recorded incorrect upload file size, please retry the upload.');\r\n}\r\nfunction noDownloadURL() {\r\n    return new FirebaseStorageError(\"no-download-url\" /* NO_DOWNLOAD_URL */, 'The given file does not have any download URLs.');\r\n}\r\nfunction invalidArgument(message) {\r\n    return new FirebaseStorageError(\"invalid-argument\" /* INVALID_ARGUMENT */, message);\r\n}\r\nfunction appDeleted() {\r\n    return new FirebaseStorageError(\"app-deleted\" /* APP_DELETED */, 'The Firebase app was deleted.');\r\n}\r\n/**\r\n * @param name - The name of the operation that was invalid.\r\n */\r\nfunction invalidRootOperation(name) {\r\n    return new FirebaseStorageError(\"invalid-root-operation\" /* INVALID_ROOT_OPERATION */, \"The operation '\" +\r\n        name +\r\n        \"' cannot be performed on a root reference, create a non-root \" +\r\n        \"reference using child, such as .child('file.png').\");\r\n}\r\n/**\r\n * @param format - The format that was not valid.\r\n * @param message - A message describing the format violation.\r\n */\r\nfunction invalidFormat(format, message) {\r\n    return new FirebaseStorageError(\"invalid-format\" /* INVALID_FORMAT */, \"String does not match format '\" + format + \"': \" + message);\r\n}\r\n/**\r\n * @param message - A message describing the internal error.\r\n */\r\nfunction internalError(message) {\r\n    throw new FirebaseStorageError(\"internal-error\" /* INTERNAL_ERROR */, 'Internal error: ' + message);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** Converts a Base64 encoded string to a binary string. */\r\nfunction decodeBase64(encoded) {\r\n    return atob(encoded);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An enumeration of the possible string formats for upload.\r\n * @public\r\n */\r\nvar StringFormat = {\r\n    /**\r\n     * Indicates the string should be interpreted \"raw\", that is, as normal text.\r\n     * The string will be interpreted as UTF-16, then uploaded as a UTF-8 byte\r\n     * sequence.\r\n     * Example: The string 'Hello! \\\\ud83d\\\\ude0a' becomes the byte sequence\r\n     * 48 65 6c 6c 6f 21 20 f0 9f 98 8a\r\n     */\r\n    RAW: 'raw',\r\n    /**\r\n     * Indicates the string should be interpreted as base64-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO++E6t7/rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64: 'base64',\r\n    /**\r\n     * Indicates the string should be interpreted as base64url-encoded data.\r\n     * Padding characters (trailing '='s) are optional.\r\n     * Example: The string 'rWmO--E6t7_rlw==' becomes the byte sequence\r\n     * ad 69 8e fb e1 3a b7 bf eb 97\r\n     */\r\n    BASE64URL: 'base64url',\r\n    /**\r\n     * Indicates the string is a data URL, such as one obtained from\r\n     * canvas.toDataURL().\r\n     * Example: the string 'data:application/octet-stream;base64,aaaa'\r\n     * becomes the byte sequence\r\n     * 69 a6 9a\r\n     * (the content-type \"application/octet-stream\" is also applied, but can\r\n     * be overridden in the metadata object).\r\n     */\r\n    DATA_URL: 'data_url'\r\n};\r\nvar StringData = /** @class */ (function () {\r\n    function StringData(data, contentType) {\r\n        this.data = data;\r\n        this.contentType = contentType || null;\r\n    }\r\n    return StringData;\r\n}());\r\nfunction dataFromString(format, stringData) {\r\n    switch (format) {\r\n        case StringFormat.RAW:\r\n            return new StringData(utf8Bytes_(stringData));\r\n        case StringFormat.BASE64:\r\n        case StringFormat.BASE64URL:\r\n            return new StringData(base64Bytes_(format, stringData));\r\n        case StringFormat.DATA_URL:\r\n            return new StringData(dataURLBytes_(stringData), dataURLContentType_(stringData));\r\n        // do nothing\r\n    }\r\n    // assert(false);\r\n    throw unknown();\r\n}\r\nfunction utf8Bytes_(value) {\r\n    var b = [];\r\n    for (var i = 0; i < value.length; i++) {\r\n        var c = value.charCodeAt(i);\r\n        if (c <= 127) {\r\n            b.push(c);\r\n        }\r\n        else {\r\n            if (c <= 2047) {\r\n                b.push(192 | (c >> 6), 128 | (c & 63));\r\n            }\r\n            else {\r\n                if ((c & 64512) === 55296) {\r\n                    // The start of a surrogate pair.\r\n                    var valid = i < value.length - 1 && (value.charCodeAt(i + 1) & 64512) === 56320;\r\n                    if (!valid) {\r\n                        // The second surrogate wasn't there.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        var hi = c;\r\n                        var lo = value.charCodeAt(++i);\r\n                        c = 65536 | ((hi & 1023) << 10) | (lo & 1023);\r\n                        b.push(240 | (c >> 18), 128 | ((c >> 12) & 63), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n                else {\r\n                    if ((c & 64512) === 56320) {\r\n                        // Invalid low surrogate.\r\n                        b.push(239, 191, 189);\r\n                    }\r\n                    else {\r\n                        b.push(224 | (c >> 12), 128 | ((c >> 6) & 63), 128 | (c & 63));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return new Uint8Array(b);\r\n}\r\nfunction percentEncodedBytes_(value) {\r\n    var decoded;\r\n    try {\r\n        decoded = decodeURIComponent(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(StringFormat.DATA_URL, 'Malformed data URL.');\r\n    }\r\n    return utf8Bytes_(decoded);\r\n}\r\nfunction base64Bytes_(format, value) {\r\n    switch (format) {\r\n        case StringFormat.BASE64: {\r\n            var hasMinus = value.indexOf('-') !== -1;\r\n            var hasUnder = value.indexOf('_') !== -1;\r\n            if (hasMinus || hasUnder) {\r\n                var invalidChar = hasMinus ? '-' : '_';\r\n                throw invalidFormat(format, \"Invalid character '\" +\r\n                    invalidChar +\r\n                    \"' found: is it base64url encoded?\");\r\n            }\r\n            break;\r\n        }\r\n        case StringFormat.BASE64URL: {\r\n            var hasPlus = value.indexOf('+') !== -1;\r\n            var hasSlash = value.indexOf('/') !== -1;\r\n            if (hasPlus || hasSlash) {\r\n                var invalidChar = hasPlus ? '+' : '/';\r\n                throw invalidFormat(format, \"Invalid character '\" + invalidChar + \"' found: is it base64 encoded?\");\r\n            }\r\n            value = value.replace(/-/g, '+').replace(/_/g, '/');\r\n            break;\r\n        }\r\n        // do nothing\r\n    }\r\n    var bytes;\r\n    try {\r\n        bytes = decodeBase64(value);\r\n    }\r\n    catch (e) {\r\n        throw invalidFormat(format, 'Invalid character found');\r\n    }\r\n    var array = new Uint8Array(bytes.length);\r\n    for (var i = 0; i < bytes.length; i++) {\r\n        array[i] = bytes.charCodeAt(i);\r\n    }\r\n    return array;\r\n}\r\nvar DataURLParts = /** @class */ (function () {\r\n    function DataURLParts(dataURL) {\r\n        this.base64 = false;\r\n        this.contentType = null;\r\n        var matches = dataURL.match(/^data:([^,]+)?,/);\r\n        if (matches === null) {\r\n            throw invalidFormat(StringFormat.DATA_URL, \"Must be formatted 'data:[<mediatype>][;base64],<data>\");\r\n        }\r\n        var middle = matches[1] || null;\r\n        if (middle != null) {\r\n            this.base64 = endsWith(middle, ';base64');\r\n            this.contentType = this.base64\r\n                ? middle.substring(0, middle.length - ';base64'.length)\r\n                : middle;\r\n        }\r\n        this.rest = dataURL.substring(dataURL.indexOf(',') + 1);\r\n    }\r\n    return DataURLParts;\r\n}());\r\nfunction dataURLBytes_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    if (parts.base64) {\r\n        return base64Bytes_(StringFormat.BASE64, parts.rest);\r\n    }\r\n    else {\r\n        return percentEncodedBytes_(parts.rest);\r\n    }\r\n}\r\nfunction dataURLContentType_(dataUrl) {\r\n    var parts = new DataURLParts(dataUrl);\r\n    return parts.contentType;\r\n}\r\nfunction endsWith(s, end) {\r\n    var longEnough = s.length >= end.length;\r\n    if (!longEnough) {\r\n        return false;\r\n    }\r\n    return s.substring(s.length - end.length) === end;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An event that is triggered on a task.\r\n */\r\nvar TaskEvent = {\r\n    /**\r\n     * For this event,\r\n     * <ul>\r\n     *   <li>The `next` function is triggered on progress updates and when the\r\n     *       task is paused/resumed with an `UploadTaskSnapshot` as the first\r\n     *       argument.</li>\r\n     *   <li>The `error` function is triggered if the upload is canceled or fails\r\n     *       for another reason.</li>\r\n     *   <li>The `complete` function is triggered if the upload completes\r\n     *       successfully.</li>\r\n     * </ul>\r\n     */\r\n    STATE_CHANGED: 'state_changed'\r\n};\r\n/**\r\n * Represents the current state of a running upload.\r\n */\r\nvar TaskState = {\r\n    /** The task is currently transferring data. */\r\n    RUNNING: 'running',\r\n    /** The task was paused by the user. */\r\n    PAUSED: 'paused',\r\n    /** The task completed successfully. */\r\n    SUCCESS: 'success',\r\n    /** The task was canceled. */\r\n    CANCELED: 'canceled',\r\n    /** The task failed with an error. */\r\n    ERROR: 'error'\r\n};\r\nfunction taskStateFromInternalTaskState(state) {\r\n    switch (state) {\r\n        case \"running\" /* RUNNING */:\r\n        case \"pausing\" /* PAUSING */:\r\n        case \"canceling\" /* CANCELING */:\r\n            return TaskState.RUNNING;\r\n        case \"paused\" /* PAUSED */:\r\n            return TaskState.PAUSED;\r\n        case \"success\" /* SUCCESS */:\r\n            return TaskState.SUCCESS;\r\n        case \"canceled\" /* CANCELED */:\r\n            return TaskState.CANCELED;\r\n        case \"error\" /* ERROR */:\r\n            return TaskState.ERROR;\r\n        default:\r\n            // TODO(andysoto): assert(false);\r\n            return TaskState.ERROR;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Error codes for requests made by the the XhrIo wrapper.\r\n */\r\nvar ErrorCode;\r\n(function (ErrorCode) {\r\n    ErrorCode[ErrorCode[\"NO_ERROR\"] = 0] = \"NO_ERROR\";\r\n    ErrorCode[ErrorCode[\"NETWORK_ERROR\"] = 1] = \"NETWORK_ERROR\";\r\n    ErrorCode[ErrorCode[\"ABORT\"] = 2] = \"ABORT\";\r\n})(ErrorCode || (ErrorCode = {}));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Network layer for browsers. We use this instead of goog.net.XhrIo because\r\n * goog.net.XhrIo is hyuuuuge and doesn't work in React Native on Android.\r\n */\r\nvar XhrConnection = /** @class */ (function () {\r\n    function XhrConnection() {\r\n        var _this = this;\r\n        this.sent_ = false;\r\n        this.xhr_ = new XMLHttpRequest();\r\n        this.errorCode_ = ErrorCode.NO_ERROR;\r\n        this.sendPromise_ = new Promise(function (resolve) {\r\n            _this.xhr_.addEventListener('abort', function () {\r\n                _this.errorCode_ = ErrorCode.ABORT;\r\n                resolve();\r\n            });\r\n            _this.xhr_.addEventListener('error', function () {\r\n                _this.errorCode_ = ErrorCode.NETWORK_ERROR;\r\n                resolve();\r\n            });\r\n            _this.xhr_.addEventListener('load', function () {\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.send = function (url, method, body, headers) {\r\n        if (this.sent_) {\r\n            throw internalError('cannot .send() more than once');\r\n        }\r\n        this.sent_ = true;\r\n        this.xhr_.open(method, url, true);\r\n        if (headers !== undefined) {\r\n            for (var key in headers) {\r\n                if (headers.hasOwnProperty(key)) {\r\n                    this.xhr_.setRequestHeader(key, headers[key].toString());\r\n                }\r\n            }\r\n        }\r\n        if (body !== undefined) {\r\n            this.xhr_.send(body);\r\n        }\r\n        else {\r\n            this.xhr_.send();\r\n        }\r\n        return this.sendPromise_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getErrorCode = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getErrorCode() before sending');\r\n        }\r\n        return this.errorCode_;\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getStatus = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getStatus() before sending');\r\n        }\r\n        try {\r\n            return this.xhr_.status;\r\n        }\r\n        catch (e) {\r\n            return -1;\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getResponseText = function () {\r\n        if (!this.sent_) {\r\n            throw internalError('cannot .getResponseText() before sending');\r\n        }\r\n        return this.xhr_.responseText;\r\n    };\r\n    /**\r\n     * Aborts the request.\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.abort = function () {\r\n        this.xhr_.abort();\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.getResponseHeader = function (header) {\r\n        return this.xhr_.getResponseHeader(header);\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.addUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.addEventListener('progress', listener);\r\n        }\r\n    };\r\n    /**\r\n     * @override\r\n     */\r\n    XhrConnection.prototype.removeUploadProgressListener = function (listener) {\r\n        if (this.xhr_.upload != null) {\r\n            this.xhr_.upload.removeEventListener('progress', listener);\r\n        }\r\n    };\r\n    return XhrConnection;\r\n}());\r\nfunction newConnection() {\r\n    return new XhrConnection();\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Factory-like class for creating XhrIo instances.\r\n */\r\nvar ConnectionPool = /** @class */ (function () {\r\n    function ConnectionPool() {\r\n    }\r\n    ConnectionPool.prototype.createConnection = function () {\r\n        return newConnection();\r\n    };\r\n    return ConnectionPool;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Firebase Storage location data.\r\n *\r\n * @internal\r\n */\r\nvar Location = /** @class */ (function () {\r\n    function Location(bucket, path) {\r\n        this.bucket = bucket;\r\n        this.path_ = path;\r\n    }\r\n    Object.defineProperty(Location.prototype, \"path\", {\r\n        get: function () {\r\n            return this.path_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Location.prototype, \"isRoot\", {\r\n        get: function () {\r\n            return this.path.length === 0;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Location.prototype.fullServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o/' + encode(this.path);\r\n    };\r\n    Location.prototype.bucketOnlyServerUrl = function () {\r\n        var encode = encodeURIComponent;\r\n        return '/b/' + encode(this.bucket) + '/o';\r\n    };\r\n    Location.makeFromBucketSpec = function (bucketString, host) {\r\n        var bucketLocation;\r\n        try {\r\n            bucketLocation = Location.makeFromUrl(bucketString, host);\r\n        }\r\n        catch (e) {\r\n            // Not valid URL, use as-is. This lets you put bare bucket names in\r\n            // config.\r\n            return new Location(bucketString, '');\r\n        }\r\n        if (bucketLocation.path === '') {\r\n            return bucketLocation;\r\n        }\r\n        else {\r\n            throw invalidDefaultBucket(bucketString);\r\n        }\r\n    };\r\n    Location.makeFromUrl = function (url, host) {\r\n        var location = null;\r\n        var bucketDomain = '([A-Za-z0-9.\\\\-_]+)';\r\n        function gsModify(loc) {\r\n            if (loc.path.charAt(loc.path.length - 1) === '/') {\r\n                loc.path_ = loc.path_.slice(0, -1);\r\n            }\r\n        }\r\n        var gsPath = '(/(.*))?$';\r\n        var gsRegex = new RegExp('^gs://' + bucketDomain + gsPath, 'i');\r\n        var gsIndices = { bucket: 1, path: 3 };\r\n        function httpModify(loc) {\r\n            loc.path_ = decodeURIComponent(loc.path);\r\n        }\r\n        var version = 'v[A-Za-z0-9_]+';\r\n        var firebaseStorageHost = host.replace(/[.]/g, '\\\\.');\r\n        var firebaseStoragePath = '(/([^?#]*).*)?$';\r\n        var firebaseStorageRegExp = new RegExp(\"^https?://\" + firebaseStorageHost + \"/\" + version + \"/b/\" + bucketDomain + \"/o\" + firebaseStoragePath, 'i');\r\n        var firebaseStorageIndices = { bucket: 1, path: 3 };\r\n        var cloudStorageHost = host === DEFAULT_HOST\r\n            ? '(?:storage.googleapis.com|storage.cloud.google.com)'\r\n            : host;\r\n        var cloudStoragePath = '([^?#]*)';\r\n        var cloudStorageRegExp = new RegExp(\"^https?://\" + cloudStorageHost + \"/\" + bucketDomain + \"/\" + cloudStoragePath, 'i');\r\n        var cloudStorageIndices = { bucket: 1, path: 2 };\r\n        var groups = [\r\n            { regex: gsRegex, indices: gsIndices, postModify: gsModify },\r\n            {\r\n                regex: firebaseStorageRegExp,\r\n                indices: firebaseStorageIndices,\r\n                postModify: httpModify\r\n            },\r\n            {\r\n                regex: cloudStorageRegExp,\r\n                indices: cloudStorageIndices,\r\n                postModify: httpModify\r\n            }\r\n        ];\r\n        for (var i = 0; i < groups.length; i++) {\r\n            var group = groups[i];\r\n            var captures = group.regex.exec(url);\r\n            if (captures) {\r\n                var bucketValue = captures[group.indices.bucket];\r\n                var pathValue = captures[group.indices.path];\r\n                if (!pathValue) {\r\n                    pathValue = '';\r\n                }\r\n                location = new Location(bucketValue, pathValue);\r\n                group.postModify(location);\r\n                break;\r\n            }\r\n        }\r\n        if (location == null) {\r\n            throw invalidUrl(url);\r\n        }\r\n        return location;\r\n    };\r\n    return Location;\r\n}());\n\n/**\r\n * A request whose promise always fails.\r\n */\r\nvar FailRequest = /** @class */ (function () {\r\n    function FailRequest(error) {\r\n        this.promise_ = Promise.reject(error);\r\n    }\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    FailRequest.prototype.cancel = function (_appDelete) {\r\n    };\r\n    return FailRequest;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param f May be invoked\r\n *     before the function returns.\r\n * @param callback Get all the arguments passed to the function\r\n *     passed to f, including the initial boolean.\r\n */\r\nfunction start(f, \r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ncallback, timeout) {\r\n    // TODO(andysoto): make this code cleaner (probably refactor into an actual\r\n    // type instead of a bunch of functions with state shared in the closure)\r\n    var waitSeconds = 1;\r\n    // Would type this as \"number\" but that doesn't work for Node so ¯\\_(ツ)_/¯\r\n    // TODO: find a way to exclude Node type definition for storage because storage only works in browser\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    var timeoutId = null;\r\n    var hitTimeout = false;\r\n    var cancelState = 0;\r\n    function canceled() {\r\n        return cancelState === 2;\r\n    }\r\n    var triggeredCallback = false;\r\n    function triggerCallback() {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (!triggeredCallback) {\r\n            triggeredCallback = true;\r\n            callback.apply(null, args);\r\n        }\r\n    }\r\n    function callWithDelay(millis) {\r\n        timeoutId = setTimeout(function () {\r\n            timeoutId = null;\r\n            f(handler, canceled());\r\n        }, millis);\r\n    }\r\n    function handler(success) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (success) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\r\n            return;\r\n        }\r\n        var mustStop = canceled() || hitTimeout;\r\n        if (mustStop) {\r\n            triggerCallback.call.apply(triggerCallback, __spreadArray([null, success], args));\r\n            return;\r\n        }\r\n        if (waitSeconds < 64) {\r\n            /* TODO(andysoto): don't back off so quickly if we know we're offline. */\r\n            waitSeconds *= 2;\r\n        }\r\n        var waitMillis;\r\n        if (cancelState === 1) {\r\n            cancelState = 2;\r\n            waitMillis = 0;\r\n        }\r\n        else {\r\n            waitMillis = (waitSeconds + Math.random()) * 1000;\r\n        }\r\n        callWithDelay(waitMillis);\r\n    }\r\n    var stopped = false;\r\n    function stop(wasTimeout) {\r\n        if (stopped) {\r\n            return;\r\n        }\r\n        stopped = true;\r\n        if (triggeredCallback) {\r\n            return;\r\n        }\r\n        if (timeoutId !== null) {\r\n            if (!wasTimeout) {\r\n                cancelState = 2;\r\n            }\r\n            clearTimeout(timeoutId);\r\n            callWithDelay(0);\r\n        }\r\n        else {\r\n            if (!wasTimeout) {\r\n                cancelState = 1;\r\n            }\r\n        }\r\n    }\r\n    callWithDelay(0);\r\n    setTimeout(function () {\r\n        hitTimeout = true;\r\n        stop(true);\r\n    }, timeout);\r\n    return stop;\r\n}\r\n/**\r\n * Stops the retry loop from repeating.\r\n * If the function is currently \"in between\" retries, it is invoked immediately\r\n * with the second parameter as \"true\". Otherwise, it will be invoked once more\r\n * after the current invocation finishes iff the current invocation would have\r\n * triggered another retry.\r\n */\r\nfunction stop(id) {\r\n    id(false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isJustDef(p) {\r\n    return p !== void 0;\r\n}\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction isFunction(p) {\r\n    return typeof p === 'function';\r\n}\r\nfunction isNonArrayObject(p) {\r\n    return typeof p === 'object' && !Array.isArray(p);\r\n}\r\nfunction isString(p) {\r\n    return typeof p === 'string' || p instanceof String;\r\n}\r\nfunction isNativeBlob(p) {\r\n    return isNativeBlobDefined() && p instanceof Blob;\r\n}\r\nfunction isNativeBlobDefined() {\r\n    return typeof Blob !== 'undefined';\r\n}\r\nfunction validateNumber(argument, minValue, maxValue, value) {\r\n    if (value < minValue) {\r\n        throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + minValue + \" or greater.\");\r\n    }\r\n    if (value > maxValue) {\r\n        throw invalidArgument(\"Invalid value for '\" + argument + \"'. Expected \" + maxValue + \" or less.\");\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction makeUrl(urlPart, host) {\r\n    var protocolMatch = host.match(/^(\\w+):\\/\\/.+/);\r\n    var protocol = protocolMatch === null || protocolMatch === void 0 ? void 0 : protocolMatch[1];\r\n    var origin = host;\r\n    if (protocol == null) {\r\n        origin = \"https://\" + host;\r\n    }\r\n    return origin + \"/v0\" + urlPart;\r\n}\r\nfunction makeQueryString(params) {\r\n    var encode = encodeURIComponent;\r\n    var queryPart = '?';\r\n    for (var key in params) {\r\n        if (params.hasOwnProperty(key)) {\r\n            var nextPart = encode(key) + '=' + encode(params[key]);\r\n            queryPart = queryPart + nextPart + '&';\r\n        }\r\n    }\r\n    // Chop off the extra '&' or '?' on the end\r\n    queryPart = queryPart.slice(0, -1);\r\n    return queryPart;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar NetworkRequest = /** @class */ (function () {\r\n    function NetworkRequest(url, method, headers, body, successCodes, additionalRetryCodes, callback, errorCallback, timeout, progressCallback, pool) {\r\n        var _this = this;\r\n        this.pendingConnection_ = null;\r\n        this.backoffId_ = null;\r\n        this.canceled_ = false;\r\n        this.appDelete_ = false;\r\n        this.url_ = url;\r\n        this.method_ = method;\r\n        this.headers_ = headers;\r\n        this.body_ = body;\r\n        this.successCodes_ = successCodes.slice();\r\n        this.additionalRetryCodes_ = additionalRetryCodes.slice();\r\n        this.callback_ = callback;\r\n        this.errorCallback_ = errorCallback;\r\n        this.progressCallback_ = progressCallback;\r\n        this.timeout_ = timeout;\r\n        this.pool_ = pool;\r\n        this.promise_ = new Promise(function (resolve, reject) {\r\n            _this.resolve_ = resolve;\r\n            _this.reject_ = reject;\r\n            _this.start_();\r\n        });\r\n    }\r\n    /**\r\n     * Actually starts the retry loop.\r\n     */\r\n    NetworkRequest.prototype.start_ = function () {\r\n        var self = this;\r\n        function doTheRequest(backoffCallback, canceled) {\r\n            if (canceled) {\r\n                backoffCallback(false, new RequestEndStatus(false, null, true));\r\n                return;\r\n            }\r\n            var connection = self.pool_.createConnection();\r\n            self.pendingConnection_ = connection;\r\n            function progressListener(progressEvent) {\r\n                var loaded = progressEvent.loaded;\r\n                var total = progressEvent.lengthComputable ? progressEvent.total : -1;\r\n                if (self.progressCallback_ !== null) {\r\n                    self.progressCallback_(loaded, total);\r\n                }\r\n            }\r\n            if (self.progressCallback_ !== null) {\r\n                connection.addUploadProgressListener(progressListener);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            connection\r\n                .send(self.url_, self.method_, self.body_, self.headers_)\r\n                .then(function () {\r\n                if (self.progressCallback_ !== null) {\r\n                    connection.removeUploadProgressListener(progressListener);\r\n                }\r\n                self.pendingConnection_ = null;\r\n                var hitServer = connection.getErrorCode() === ErrorCode.NO_ERROR;\r\n                var status = connection.getStatus();\r\n                if (!hitServer || self.isRetryStatusCode_(status)) {\r\n                    var wasCanceled = connection.getErrorCode() === ErrorCode.ABORT;\r\n                    backoffCallback(false, new RequestEndStatus(false, null, wasCanceled));\r\n                    return;\r\n                }\r\n                var successCode = self.successCodes_.indexOf(status) !== -1;\r\n                backoffCallback(true, new RequestEndStatus(successCode, connection));\r\n            });\r\n        }\r\n        /**\r\n         * @param requestWentThrough - True if the request eventually went\r\n         *     through, false if it hit the retry limit or was canceled.\r\n         */\r\n        function backoffDone(requestWentThrough, status) {\r\n            var resolve = self.resolve_;\r\n            var reject = self.reject_;\r\n            var connection = status.connection;\r\n            if (status.wasSuccessCode) {\r\n                try {\r\n                    var result = self.callback_(connection, connection.getResponseText());\r\n                    if (isJustDef(result)) {\r\n                        resolve(result);\r\n                    }\r\n                    else {\r\n                        resolve();\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    reject(e);\r\n                }\r\n            }\r\n            else {\r\n                if (connection !== null) {\r\n                    var err = unknown();\r\n                    err.serverResponse = connection.getResponseText();\r\n                    if (self.errorCallback_) {\r\n                        reject(self.errorCallback_(connection, err));\r\n                    }\r\n                    else {\r\n                        reject(err);\r\n                    }\r\n                }\r\n                else {\r\n                    if (status.canceled) {\r\n                        var err = self.appDelete_ ? appDeleted() : canceled();\r\n                        reject(err);\r\n                    }\r\n                    else {\r\n                        var err = retryLimitExceeded();\r\n                        reject(err);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (this.canceled_) {\r\n            backoffDone(false, new RequestEndStatus(false, null, true));\r\n        }\r\n        else {\r\n            this.backoffId_ = start(doTheRequest, backoffDone, this.timeout_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.getPromise = function () {\r\n        return this.promise_;\r\n    };\r\n    /** @inheritDoc */\r\n    NetworkRequest.prototype.cancel = function (appDelete) {\r\n        this.canceled_ = true;\r\n        this.appDelete_ = appDelete || false;\r\n        if (this.backoffId_ !== null) {\r\n            stop(this.backoffId_);\r\n        }\r\n        if (this.pendingConnection_ !== null) {\r\n            this.pendingConnection_.abort();\r\n        }\r\n    };\r\n    NetworkRequest.prototype.isRetryStatusCode_ = function (status) {\r\n        // The codes for which to retry came from this page:\r\n        // https://cloud.google.com/storage/docs/exponential-backoff\r\n        var isFiveHundredCode = status >= 500 && status < 600;\r\n        var extraRetryCodes = [\r\n            // Request Timeout: web server didn't receive full request in time.\r\n            408,\r\n            // Too Many Requests: you're getting rate-limited, basically.\r\n            429\r\n        ];\r\n        var isExtraRetryCode = extraRetryCodes.indexOf(status) !== -1;\r\n        var isRequestSpecificRetryCode = this.additionalRetryCodes_.indexOf(status) !== -1;\r\n        return isFiveHundredCode || isExtraRetryCode || isRequestSpecificRetryCode;\r\n    };\r\n    return NetworkRequest;\r\n}());\r\n/**\r\n * A collection of information about the result of a network request.\r\n * @param opt_canceled - Defaults to false.\r\n */\r\nvar RequestEndStatus = /** @class */ (function () {\r\n    function RequestEndStatus(wasSuccessCode, connection, canceled) {\r\n        this.wasSuccessCode = wasSuccessCode;\r\n        this.connection = connection;\r\n        this.canceled = !!canceled;\r\n    }\r\n    return RequestEndStatus;\r\n}());\r\nfunction addAuthHeader_(headers, authToken) {\r\n    if (authToken !== null && authToken.length > 0) {\r\n        headers['Authorization'] = 'Firebase ' + authToken;\r\n    }\r\n}\r\nfunction addVersionHeader_(headers, firebaseVersion) {\r\n    headers['X-Firebase-Storage-Version'] =\r\n        'webjs/' + (firebaseVersion !== null && firebaseVersion !== void 0 ? firebaseVersion : 'AppManager');\r\n}\r\nfunction addGmpidHeader_(headers, appId) {\r\n    if (appId) {\r\n        headers['X-Firebase-GMPID'] = appId;\r\n    }\r\n}\r\nfunction addAppCheckHeader_(headers, appCheckToken) {\r\n    if (appCheckToken !== null) {\r\n        headers['X-Firebase-AppCheck'] = appCheckToken;\r\n    }\r\n}\r\nfunction makeRequest(requestInfo, appId, authToken, appCheckToken, pool, firebaseVersion) {\r\n    var queryPart = makeQueryString(requestInfo.urlParams);\r\n    var url = requestInfo.url + queryPart;\r\n    var headers = Object.assign({}, requestInfo.headers);\r\n    addGmpidHeader_(headers, appId);\r\n    addAuthHeader_(headers, authToken);\r\n    addVersionHeader_(headers, firebaseVersion);\r\n    addAppCheckHeader_(headers, appCheckToken);\r\n    return new NetworkRequest(url, requestInfo.method, headers, requestInfo.body, requestInfo.successCodes, requestInfo.additionalRetryCodes, requestInfo.handler, requestInfo.errorHandler, requestInfo.timeout, requestInfo.progressCallback, pool);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getBlobBuilder() {\r\n    if (typeof BlobBuilder !== 'undefined') {\r\n        return BlobBuilder;\r\n    }\r\n    else if (typeof WebKitBlobBuilder !== 'undefined') {\r\n        return WebKitBlobBuilder;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n/**\r\n * Concatenates one or more values together and converts them to a Blob.\r\n *\r\n * @param args The values that will make up the resulting blob.\r\n * @return The blob.\r\n */\r\nfunction getBlob() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var BlobBuilder = getBlobBuilder();\r\n    if (BlobBuilder !== undefined) {\r\n        var bb = new BlobBuilder();\r\n        for (var i = 0; i < args.length; i++) {\r\n            bb.append(args[i]);\r\n        }\r\n        return bb.getBlob();\r\n    }\r\n    else {\r\n        if (isNativeBlobDefined()) {\r\n            return new Blob(args);\r\n        }\r\n        else {\r\n            throw new FirebaseStorageError(\"unsupported-environment\" /* UNSUPPORTED_ENVIRONMENT */, \"This browser doesn't seem to support creating Blobs\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Slices the blob. The returned blob contains data from the start byte\r\n * (inclusive) till the end byte (exclusive). Negative indices cannot be used.\r\n *\r\n * @param blob The blob to be sliced.\r\n * @param start Index of the starting byte.\r\n * @param end Index of the ending byte.\r\n * @return The blob slice or null if not supported.\r\n */\r\nfunction sliceBlob(blob, start, end) {\r\n    if (blob.webkitSlice) {\r\n        return blob.webkitSlice(start, end);\r\n    }\r\n    else if (blob.mozSlice) {\r\n        return blob.mozSlice(start, end);\r\n    }\r\n    else if (blob.slice) {\r\n        return blob.slice(start, end);\r\n    }\r\n    return null;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param opt_elideCopy - If true, doesn't copy mutable input data\r\n *     (e.g. Uint8Arrays). Pass true only if you know the objects will not be\r\n *     modified after this blob's construction.\r\n *\r\n * @internal\r\n */\r\nvar FbsBlob = /** @class */ (function () {\r\n    function FbsBlob(data, elideCopy) {\r\n        var size = 0;\r\n        var blobType = '';\r\n        if (isNativeBlob(data)) {\r\n            this.data_ = data;\r\n            size = data.size;\r\n            blobType = data.type;\r\n        }\r\n        else if (data instanceof ArrayBuffer) {\r\n            if (elideCopy) {\r\n                this.data_ = new Uint8Array(data);\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.byteLength);\r\n                this.data_.set(new Uint8Array(data));\r\n            }\r\n            size = this.data_.length;\r\n        }\r\n        else if (data instanceof Uint8Array) {\r\n            if (elideCopy) {\r\n                this.data_ = data;\r\n            }\r\n            else {\r\n                this.data_ = new Uint8Array(data.length);\r\n                this.data_.set(data);\r\n            }\r\n            size = data.length;\r\n        }\r\n        this.size_ = size;\r\n        this.type_ = blobType;\r\n    }\r\n    FbsBlob.prototype.size = function () {\r\n        return this.size_;\r\n    };\r\n    FbsBlob.prototype.type = function () {\r\n        return this.type_;\r\n    };\r\n    FbsBlob.prototype.slice = function (startByte, endByte) {\r\n        if (isNativeBlob(this.data_)) {\r\n            var realBlob = this.data_;\r\n            var sliced = sliceBlob(realBlob, startByte, endByte);\r\n            if (sliced === null) {\r\n                return null;\r\n            }\r\n            return new FbsBlob(sliced);\r\n        }\r\n        else {\r\n            var slice = new Uint8Array(this.data_.buffer, startByte, endByte - startByte);\r\n            return new FbsBlob(slice, true);\r\n        }\r\n    };\r\n    FbsBlob.getBlob = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (isNativeBlobDefined()) {\r\n            var blobby = args.map(function (val) {\r\n                if (val instanceof FbsBlob) {\r\n                    return val.data_;\r\n                }\r\n                else {\r\n                    return val;\r\n                }\r\n            });\r\n            return new FbsBlob(getBlob.apply(null, blobby));\r\n        }\r\n        else {\r\n            var uint8Arrays = args.map(function (val) {\r\n                if (isString(val)) {\r\n                    return dataFromString(StringFormat.RAW, val).data;\r\n                }\r\n                else {\r\n                    // Blobs don't exist, so this has to be a Uint8Array.\r\n                    return val.data_;\r\n                }\r\n            });\r\n            var finalLength_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                finalLength_1 += array.byteLength;\r\n            });\r\n            var merged_1 = new Uint8Array(finalLength_1);\r\n            var index_1 = 0;\r\n            uint8Arrays.forEach(function (array) {\r\n                for (var i = 0; i < array.length; i++) {\r\n                    merged_1[index_1++] = array[i];\r\n                }\r\n            });\r\n            return new FbsBlob(merged_1, true);\r\n        }\r\n    };\r\n    FbsBlob.prototype.uploadData = function () {\r\n        return this.data_;\r\n    };\r\n    return FbsBlob;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the Object resulting from parsing the given JSON, or null if the\r\n * given string does not represent a JSON object.\r\n */\r\nfunction jsonObjectOrNull(s) {\r\n    var obj;\r\n    try {\r\n        obj = JSON.parse(s);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    if (isNonArrayObject(obj)) {\r\n        return obj;\r\n    }\r\n    else {\r\n        return null;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @fileoverview Contains helper methods for manipulating paths.\r\n */\r\n/**\r\n * @return Null if the path is already at the root.\r\n */\r\nfunction parent(path) {\r\n    if (path.length === 0) {\r\n        return null;\r\n    }\r\n    var index = path.lastIndexOf('/');\r\n    if (index === -1) {\r\n        return '';\r\n    }\r\n    var newPath = path.slice(0, index);\r\n    return newPath;\r\n}\r\nfunction child(path, childPath) {\r\n    var canonicalChildPath = childPath\r\n        .split('/')\r\n        .filter(function (component) { return component.length > 0; })\r\n        .join('/');\r\n    if (path.length === 0) {\r\n        return canonicalChildPath;\r\n    }\r\n    else {\r\n        return path + '/' + canonicalChildPath;\r\n    }\r\n}\r\n/**\r\n * Returns the last component of a path.\r\n * '/foo/bar' -> 'bar'\r\n * '/foo/bar/baz/' -> 'baz/'\r\n * '/a' -> 'a'\r\n */\r\nfunction lastComponent(path) {\r\n    var index = path.lastIndexOf('/', path.length - 2);\r\n    if (index === -1) {\r\n        return path;\r\n    }\r\n    else {\r\n        return path.slice(index + 1);\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction noXform_(metadata, value) {\r\n    return value;\r\n}\r\nvar Mapping = /** @class */ (function () {\r\n    function Mapping(server, local, writable, xform) {\r\n        this.server = server;\r\n        this.local = local || server;\r\n        this.writable = !!writable;\r\n        this.xform = xform || noXform_;\r\n    }\r\n    return Mapping;\r\n}());\r\nvar mappings_ = null;\r\nfunction xformPath(fullPath) {\r\n    if (!isString(fullPath) || fullPath.length < 2) {\r\n        return fullPath;\r\n    }\r\n    else {\r\n        return lastComponent(fullPath);\r\n    }\r\n}\r\nfunction getMappings() {\r\n    if (mappings_) {\r\n        return mappings_;\r\n    }\r\n    var mappings = [];\r\n    mappings.push(new Mapping('bucket'));\r\n    mappings.push(new Mapping('generation'));\r\n    mappings.push(new Mapping('metageneration'));\r\n    mappings.push(new Mapping('name', 'fullPath', true));\r\n    function mappingsXformPath(_metadata, fullPath) {\r\n        return xformPath(fullPath);\r\n    }\r\n    var nameMapping = new Mapping('name');\r\n    nameMapping.xform = mappingsXformPath;\r\n    mappings.push(nameMapping);\r\n    /**\r\n     * Coerces the second param to a number, if it is defined.\r\n     */\r\n    function xformSize(_metadata, size) {\r\n        if (size !== undefined) {\r\n            return Number(size);\r\n        }\r\n        else {\r\n            return size;\r\n        }\r\n    }\r\n    var sizeMapping = new Mapping('size');\r\n    sizeMapping.xform = xformSize;\r\n    mappings.push(sizeMapping);\r\n    mappings.push(new Mapping('timeCreated'));\r\n    mappings.push(new Mapping('updated'));\r\n    mappings.push(new Mapping('md5Hash', null, true));\r\n    mappings.push(new Mapping('cacheControl', null, true));\r\n    mappings.push(new Mapping('contentDisposition', null, true));\r\n    mappings.push(new Mapping('contentEncoding', null, true));\r\n    mappings.push(new Mapping('contentLanguage', null, true));\r\n    mappings.push(new Mapping('contentType', null, true));\r\n    mappings.push(new Mapping('metadata', 'customMetadata', true));\r\n    mappings_ = mappings;\r\n    return mappings_;\r\n}\r\nfunction addRef(metadata, service) {\r\n    function generateRef() {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var loc = new Location(bucket, path);\r\n        return service._makeStorageReference(loc);\r\n    }\r\n    Object.defineProperty(metadata, 'ref', { get: generateRef });\r\n}\r\nfunction fromResource(service, resource, mappings) {\r\n    var metadata = {};\r\n    metadata['type'] = 'file';\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        metadata[mapping.local] = mapping.xform(metadata, resource[mapping.server]);\r\n    }\r\n    addRef(metadata, service);\r\n    return metadata;\r\n}\r\nfunction fromResourceString(service, resourceString, mappings) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromResource(service, resource, mappings);\r\n}\r\nfunction downloadUrlFromResourceString(metadata, resourceString, host) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    if (!isString(obj['downloadTokens'])) {\r\n        // This can happen if objects are uploaded through GCS and retrieved\r\n        // through list, so we don't want to throw an Error.\r\n        return null;\r\n    }\r\n    var tokens = obj['downloadTokens'];\r\n    if (tokens.length === 0) {\r\n        return null;\r\n    }\r\n    var encode = encodeURIComponent;\r\n    var tokensList = tokens.split(',');\r\n    var urls = tokensList.map(function (token) {\r\n        var bucket = metadata['bucket'];\r\n        var path = metadata['fullPath'];\r\n        var urlPart = '/b/' + encode(bucket) + '/o/' + encode(path);\r\n        var base = makeUrl(urlPart, host);\r\n        var queryString = makeQueryString({\r\n            alt: 'media',\r\n            token: token\r\n        });\r\n        return base + queryString;\r\n    });\r\n    return urls[0];\r\n}\r\nfunction toResourceString(metadata, mappings) {\r\n    var resource = {};\r\n    var len = mappings.length;\r\n    for (var i = 0; i < len; i++) {\r\n        var mapping = mappings[i];\r\n        if (mapping.writable) {\r\n            resource[mapping.server] = metadata[mapping.local];\r\n        }\r\n    }\r\n    return JSON.stringify(resource);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PREFIXES_KEY = 'prefixes';\r\nvar ITEMS_KEY = 'items';\r\nfunction fromBackendResponse(service, bucket, resource) {\r\n    var listResult = {\r\n        prefixes: [],\r\n        items: [],\r\n        nextPageToken: resource['nextPageToken']\r\n    };\r\n    if (resource[PREFIXES_KEY]) {\r\n        for (var _i = 0, _a = resource[PREFIXES_KEY]; _i < _a.length; _i++) {\r\n            var path = _a[_i];\r\n            var pathWithoutTrailingSlash = path.replace(/\\/$/, '');\r\n            var reference = service._makeStorageReference(new Location(bucket, pathWithoutTrailingSlash));\r\n            listResult.prefixes.push(reference);\r\n        }\r\n    }\r\n    if (resource[ITEMS_KEY]) {\r\n        for (var _b = 0, _c = resource[ITEMS_KEY]; _b < _c.length; _b++) {\r\n            var item = _c[_b];\r\n            var reference = service._makeStorageReference(new Location(bucket, item['name']));\r\n            listResult.items.push(reference);\r\n        }\r\n    }\r\n    return listResult;\r\n}\r\nfunction fromResponseString(service, bucket, resourceString) {\r\n    var obj = jsonObjectOrNull(resourceString);\r\n    if (obj === null) {\r\n        return null;\r\n    }\r\n    var resource = obj;\r\n    return fromBackendResponse(service, bucket, resource);\r\n}\n\nvar RequestInfo = /** @class */ (function () {\r\n    function RequestInfo(url, method, \r\n    /**\r\n     * Returns the value with which to resolve the request's promise. Only called\r\n     * if the request is successful. Throw from this function to reject the\r\n     * returned Request's promise with the thrown error.\r\n     * Note: The XhrIo passed to this function may be reused after this callback\r\n     * returns. Do not keep a reference to it in any way.\r\n     */\r\n    handler, timeout) {\r\n        this.url = url;\r\n        this.method = method;\r\n        this.handler = handler;\r\n        this.timeout = timeout;\r\n        this.urlParams = {};\r\n        this.headers = {};\r\n        this.body = null;\r\n        this.errorHandler = null;\r\n        /**\r\n         * Called with the current number of bytes uploaded and total size (-1 if not\r\n         * computable) of the request body (i.e. used to report upload progress).\r\n         */\r\n        this.progressCallback = null;\r\n        this.successCodes = [200];\r\n        this.additionalRetryCodes = [];\r\n    }\r\n    return RequestInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Throws the UNKNOWN FirebaseStorageError if cndn is false.\r\n */\r\nfunction handlerCheck(cndn) {\r\n    if (!cndn) {\r\n        throw unknown();\r\n    }\r\n}\r\nfunction metadataHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return metadata;\r\n    }\r\n    return handler;\r\n}\r\nfunction listHandler(service, bucket) {\r\n    function handler(xhr, text) {\r\n        var listResult = fromResponseString(service, bucket, text);\r\n        handlerCheck(listResult !== null);\r\n        return listResult;\r\n    }\r\n    return handler;\r\n}\r\nfunction downloadUrlHandler(service, mappings) {\r\n    function handler(xhr, text) {\r\n        var metadata = fromResourceString(service, text, mappings);\r\n        handlerCheck(metadata !== null);\r\n        return downloadUrlFromResourceString(metadata, text, service.host);\r\n    }\r\n    return handler;\r\n}\r\nfunction sharedErrorHandler(location) {\r\n    function errorHandler(xhr, err) {\r\n        var newErr;\r\n        if (xhr.getStatus() === 401) {\r\n            if (\r\n            // This exact message string is the only consistent part of the\r\n            // server's error response that identifies it as an App Check error.\r\n            xhr.getResponseText().includes('Firebase App Check token is invalid')) {\r\n                newErr = unauthorizedApp();\r\n            }\r\n            else {\r\n                newErr = unauthenticated();\r\n            }\r\n        }\r\n        else {\r\n            if (xhr.getStatus() === 402) {\r\n                newErr = quotaExceeded(location.bucket);\r\n            }\r\n            else {\r\n                if (xhr.getStatus() === 403) {\r\n                    newErr = unauthorized(location.path);\r\n                }\r\n                else {\r\n                    newErr = err;\r\n                }\r\n            }\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction objectErrorHandler(location) {\r\n    var shared = sharedErrorHandler(location);\r\n    function errorHandler(xhr, err) {\r\n        var newErr = shared(xhr, err);\r\n        if (xhr.getStatus() === 404) {\r\n            newErr = objectNotFound(location.path);\r\n        }\r\n        newErr.serverResponse = err.serverResponse;\r\n        return newErr;\r\n    }\r\n    return errorHandler;\r\n}\r\nfunction getMetadata$2(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction list$2(service, location, delimiter, pageToken, maxResults) {\r\n    var urlParams = {};\r\n    if (location.isRoot) {\r\n        urlParams['prefix'] = '';\r\n    }\r\n    else {\r\n        urlParams['prefix'] = location.path + '/';\r\n    }\r\n    if (delimiter && delimiter.length > 0) {\r\n        urlParams['delimiter'] = delimiter;\r\n    }\r\n    if (pageToken) {\r\n        urlParams['pageToken'] = pageToken;\r\n    }\r\n    if (maxResults) {\r\n        urlParams['maxResults'] = maxResults;\r\n    }\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, listHandler(service, location.bucket), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction getDownloadUrl(service, location, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'GET';\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, downloadUrlHandler(service, mappings), timeout);\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction updateMetadata$2(service, location, metadata, mappings) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'PATCH';\r\n    var body = toResourceString(metadata, mappings);\r\n    var headers = { 'Content-Type': 'application/json; charset=utf-8' };\r\n    var timeout = service.maxOperationRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction deleteObject$2(service, location) {\r\n    var urlPart = location.fullServerUrl();\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'DELETE';\r\n    var timeout = service.maxOperationRetryTime;\r\n    function handler(_xhr, _text) { }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.successCodes = [200, 204];\r\n    requestInfo.errorHandler = objectErrorHandler(location);\r\n    return requestInfo;\r\n}\r\nfunction determineContentType_(metadata, blob) {\r\n    return ((metadata && metadata['contentType']) ||\r\n        (blob && blob.type()) ||\r\n        'application/octet-stream');\r\n}\r\nfunction metadataForUpload_(location, blob, metadata) {\r\n    var metadataClone = Object.assign({}, metadata);\r\n    metadataClone['fullPath'] = location.path;\r\n    metadataClone['size'] = blob.size();\r\n    if (!metadataClone['contentType']) {\r\n        metadataClone['contentType'] = determineContentType_(null, blob);\r\n    }\r\n    return metadataClone;\r\n}\r\n/**\r\n * Prepare RequestInfo for uploads as Content-Type: multipart.\r\n */\r\nfunction multipartUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'multipart'\r\n    };\r\n    function genBoundary() {\r\n        var str = '';\r\n        for (var i = 0; i < 2; i++) {\r\n            str = str + Math.random().toString().slice(2);\r\n        }\r\n        return str;\r\n    }\r\n    var boundary = genBoundary();\r\n    headers['Content-Type'] = 'multipart/related; boundary=' + boundary;\r\n    var metadata_ = metadataForUpload_(location, blob, metadata);\r\n    var metadataString = toResourceString(metadata_, mappings);\r\n    var preBlobPart = '--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: application/json; charset=utf-8\\r\\n\\r\\n' +\r\n        metadataString +\r\n        '\\r\\n--' +\r\n        boundary +\r\n        '\\r\\n' +\r\n        'Content-Type: ' +\r\n        metadata_['contentType'] +\r\n        '\\r\\n\\r\\n';\r\n    var postBlobPart = '\\r\\n--' + boundary + '--';\r\n    var body = FbsBlob.getBlob(preBlobPart, blob, postBlobPart);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    var urlParams = { name: metadata_['fullPath'] };\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, metadataHandler(service, mappings), timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param current The number of bytes that have been uploaded so far.\r\n * @param total The total number of bytes in the upload.\r\n * @param opt_finalized True if the server has finished the upload.\r\n * @param opt_metadata The upload metadata, should\r\n *     only be passed if opt_finalized is true.\r\n */\r\nvar ResumableUploadStatus = /** @class */ (function () {\r\n    function ResumableUploadStatus(current, total, finalized, metadata) {\r\n        this.current = current;\r\n        this.total = total;\r\n        this.finalized = !!finalized;\r\n        this.metadata = metadata || null;\r\n    }\r\n    return ResumableUploadStatus;\r\n}());\r\nfunction checkResumeHeader_(xhr, allowed) {\r\n    var status = null;\r\n    try {\r\n        status = xhr.getResponseHeader('X-Goog-Upload-Status');\r\n    }\r\n    catch (e) {\r\n        handlerCheck(false);\r\n    }\r\n    var allowedStatus = allowed || ['active'];\r\n    handlerCheck(!!status && allowedStatus.indexOf(status) !== -1);\r\n    return status;\r\n}\r\nfunction createResumableUpload(service, location, mappings, blob, metadata) {\r\n    var urlPart = location.bucketOnlyServerUrl();\r\n    var metadataForUpload = metadataForUpload_(location, blob, metadata);\r\n    var urlParams = { name: metadataForUpload['fullPath'] };\r\n    var url = makeUrl(urlPart, service.host);\r\n    var method = 'POST';\r\n    var headers = {\r\n        'X-Goog-Upload-Protocol': 'resumable',\r\n        'X-Goog-Upload-Command': 'start',\r\n        'X-Goog-Upload-Header-Content-Length': \"\" + blob.size(),\r\n        'X-Goog-Upload-Header-Content-Type': metadataForUpload['contentType'],\r\n        'Content-Type': 'application/json; charset=utf-8'\r\n    };\r\n    var body = toResourceString(metadataForUpload, mappings);\r\n    var timeout = service.maxUploadRetryTime;\r\n    function handler(xhr) {\r\n        checkResumeHeader_(xhr);\r\n        var url;\r\n        try {\r\n            url = xhr.getResponseHeader('X-Goog-Upload-URL');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        handlerCheck(isString(url));\r\n        return url;\r\n    }\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.urlParams = urlParams;\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n */\r\nfunction getResumableUploadStatus(service, location, url, blob) {\r\n    var headers = { 'X-Goog-Upload-Command': 'query' };\r\n    function handler(xhr) {\r\n        var status = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var sizeString = null;\r\n        try {\r\n            sizeString = xhr.getResponseHeader('X-Goog-Upload-Size-Received');\r\n        }\r\n        catch (e) {\r\n            handlerCheck(false);\r\n        }\r\n        if (!sizeString) {\r\n            // null or empty string\r\n            handlerCheck(false);\r\n        }\r\n        var size = Number(sizeString);\r\n        handlerCheck(!isNaN(size));\r\n        return new ResumableUploadStatus(size, blob.size(), status === 'final');\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\r\n/**\r\n * Any uploads via the resumable upload API must transfer a number of bytes\r\n * that is a multiple of this number.\r\n */\r\nvar RESUMABLE_UPLOAD_CHUNK_SIZE = 256 * 1024;\r\n/**\r\n * @param url From a call to fbs.requests.createResumableUpload.\r\n * @param chunkSize Number of bytes to upload.\r\n * @param status The previous status.\r\n *     If not passed or null, we start from the beginning.\r\n * @throws fbs.Error If the upload is already complete, the passed in status\r\n *     has a final size inconsistent with the blob, or the blob cannot be sliced\r\n *     for upload.\r\n */\r\nfunction continueResumableUpload(location, service, url, blob, chunkSize, mappings, status, progressCallback) {\r\n    // TODO(andysoto): standardize on internal asserts\r\n    // assert(!(opt_status && opt_status.finalized));\r\n    var status_ = new ResumableUploadStatus(0, 0);\r\n    if (status) {\r\n        status_.current = status.current;\r\n        status_.total = status.total;\r\n    }\r\n    else {\r\n        status_.current = 0;\r\n        status_.total = blob.size();\r\n    }\r\n    if (blob.size() !== status_.total) {\r\n        throw serverFileWrongSize();\r\n    }\r\n    var bytesLeft = status_.total - status_.current;\r\n    var bytesToUpload = bytesLeft;\r\n    if (chunkSize > 0) {\r\n        bytesToUpload = Math.min(bytesToUpload, chunkSize);\r\n    }\r\n    var startByte = status_.current;\r\n    var endByte = startByte + bytesToUpload;\r\n    var uploadCommand = bytesToUpload === bytesLeft ? 'upload, finalize' : 'upload';\r\n    var headers = {\r\n        'X-Goog-Upload-Command': uploadCommand,\r\n        'X-Goog-Upload-Offset': \"\" + status_.current\r\n    };\r\n    var body = blob.slice(startByte, endByte);\r\n    if (body === null) {\r\n        throw cannotSliceBlob();\r\n    }\r\n    function handler(xhr, text) {\r\n        // TODO(andysoto): Verify the MD5 of each uploaded range:\r\n        // the 'x-range-md5' header comes back with status code 308 responses.\r\n        // We'll only be able to bail out though, because you can't re-upload a\r\n        // range that you previously uploaded.\r\n        var uploadStatus = checkResumeHeader_(xhr, ['active', 'final']);\r\n        var newCurrent = status_.current + bytesToUpload;\r\n        var size = blob.size();\r\n        var metadata;\r\n        if (uploadStatus === 'final') {\r\n            metadata = metadataHandler(service, mappings)(xhr, text);\r\n        }\r\n        else {\r\n            metadata = null;\r\n        }\r\n        return new ResumableUploadStatus(newCurrent, size, uploadStatus === 'final', metadata);\r\n    }\r\n    var method = 'POST';\r\n    var timeout = service.maxUploadRetryTime;\r\n    var requestInfo = new RequestInfo(url, method, handler, timeout);\r\n    requestInfo.headers = headers;\r\n    requestInfo.body = body.uploadData();\r\n    requestInfo.progressCallback = progressCallback || null;\r\n    requestInfo.errorHandler = sharedErrorHandler(location);\r\n    return requestInfo;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Observer = /** @class */ (function () {\r\n    function Observer(nextOrObserver, error, complete) {\r\n        var asFunctions = isFunction(nextOrObserver) || error != null || complete != null;\r\n        if (asFunctions) {\r\n            this.next = nextOrObserver;\r\n            this.error = error;\r\n            this.complete = complete;\r\n        }\r\n        else {\r\n            var observer = nextOrObserver;\r\n            this.next = observer.next;\r\n            this.error = observer.error;\r\n            this.complete = observer.complete;\r\n        }\r\n    }\r\n    return Observer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a function that invokes f with its arguments asynchronously as a\r\n * microtask, i.e. as soon as possible after the current script returns back\r\n * into browser code.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/ban-types\r\nfunction async(f) {\r\n    return function () {\r\n        var argsToForward = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            argsToForward[_i] = arguments[_i];\r\n        }\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.resolve().then(function () { return f.apply(void 0, argsToForward); });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents a blob being uploaded. Can be used to pause/resume/cancel the\r\n * upload and manage callbacks for various events.\r\n * @internal\r\n */\r\nvar UploadTask = /** @class */ (function () {\r\n    /**\r\n     * @param ref - The firebaseStorage.Reference object this task came\r\n     *     from, untyped to avoid cyclic dependencies.\r\n     * @param blob - The blob to upload.\r\n     */\r\n    function UploadTask(ref, blob, metadata) {\r\n        var _this = this;\r\n        if (metadata === void 0) { metadata = null; }\r\n        /**\r\n         * Number of bytes transferred so far.\r\n         */\r\n        this._transferred = 0;\r\n        this._needToFetchStatus = false;\r\n        this._needToFetchMetadata = false;\r\n        this._observers = [];\r\n        this._error = undefined;\r\n        this._uploadUrl = undefined;\r\n        this._request = undefined;\r\n        this._chunkMultiplier = 1;\r\n        this._resolve = undefined;\r\n        this._reject = undefined;\r\n        this._ref = ref;\r\n        this._blob = blob;\r\n        this._metadata = metadata;\r\n        this._mappings = getMappings();\r\n        this._resumable = this._shouldDoResumable(this._blob);\r\n        this._state = \"running\" /* RUNNING */;\r\n        this._errorHandler = function (error) {\r\n            _this._request = undefined;\r\n            _this._chunkMultiplier = 1;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                _this._needToFetchStatus = true;\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._metadataErrorHandler = function (error) {\r\n            _this._request = undefined;\r\n            if (error._codeEquals(\"canceled\" /* CANCELED */)) {\r\n                _this.completeTransitions_();\r\n            }\r\n            else {\r\n                _this._error = error;\r\n                _this._transition(\"error\" /* ERROR */);\r\n            }\r\n        };\r\n        this._promise = new Promise(function (resolve, reject) {\r\n            _this._resolve = resolve;\r\n            _this._reject = reject;\r\n            _this._start();\r\n        });\r\n        // Prevent uncaught rejections on the internal promise from bubbling out\r\n        // to the top level with a dummy handler.\r\n        this._promise.then(null, function () { });\r\n    }\r\n    UploadTask.prototype._makeProgressCallback = function () {\r\n        var _this = this;\r\n        var sizeBefore = this._transferred;\r\n        return function (loaded) { return _this._updateProgress(sizeBefore + loaded); };\r\n    };\r\n    UploadTask.prototype._shouldDoResumable = function (blob) {\r\n        return blob.size() > 256 * 1024;\r\n    };\r\n    UploadTask.prototype._start = function () {\r\n        if (this._state !== \"running\" /* RUNNING */) {\r\n            // This can happen if someone pauses us in a resume callback, for example.\r\n            return;\r\n        }\r\n        if (this._request !== undefined) {\r\n            return;\r\n        }\r\n        if (this._resumable) {\r\n            if (this._uploadUrl === undefined) {\r\n                this._createResumable();\r\n            }\r\n            else {\r\n                if (this._needToFetchStatus) {\r\n                    this._fetchStatus();\r\n                }\r\n                else {\r\n                    if (this._needToFetchMetadata) {\r\n                        // Happens if we miss the metadata on upload completion.\r\n                        this._fetchMetadata();\r\n                    }\r\n                    else {\r\n                        this._continueUpload();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this._oneShotUpload();\r\n        }\r\n    };\r\n    UploadTask.prototype._resolveToken = function (callback) {\r\n        var _this = this;\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        Promise.all([\r\n            this._ref.storage._getAuthToken(),\r\n            this._ref.storage._getAppCheckToken()\r\n        ]).then(function (_a) {\r\n            var authToken = _a[0], appCheckToken = _a[1];\r\n            switch (_this._state) {\r\n                case \"running\" /* RUNNING */:\r\n                    callback(authToken, appCheckToken);\r\n                    break;\r\n                case \"canceling\" /* CANCELING */:\r\n                    _this._transition(\"canceled\" /* CANCELED */);\r\n                    break;\r\n                case \"pausing\" /* PAUSING */:\r\n                    _this._transition(\"paused\" /* PAUSED */);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    // TODO(andysoto): assert false\r\n    UploadTask.prototype._createResumable = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = createResumableUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var createRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = createRequest;\r\n            createRequest.getPromise().then(function (url) {\r\n                _this._request = undefined;\r\n                _this._uploadUrl = url;\r\n                _this._needToFetchStatus = false;\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._fetchStatus = function () {\r\n        var _this = this;\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = getResumableUploadStatus(_this._ref.storage, _this._ref._location, url, _this._blob);\r\n            var statusRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = statusRequest;\r\n            statusRequest.getPromise().then(function (status) {\r\n                status = status;\r\n                _this._request = undefined;\r\n                _this._updateProgress(status.current);\r\n                _this._needToFetchStatus = false;\r\n                if (status.finalized) {\r\n                    _this._needToFetchMetadata = true;\r\n                }\r\n                _this.completeTransitions_();\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._continueUpload = function () {\r\n        var _this = this;\r\n        var chunkSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        var status = new ResumableUploadStatus(this._transferred, this._blob.size());\r\n        // TODO(andysoto): assert(this.uploadUrl_ !== null);\r\n        var url = this._uploadUrl;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo;\r\n            try {\r\n                requestInfo = continueResumableUpload(_this._ref._location, _this._ref.storage, url, _this._blob, chunkSize, _this._mappings, status, _this._makeProgressCallback());\r\n            }\r\n            catch (e) {\r\n                _this._error = e;\r\n                _this._transition(\"error\" /* ERROR */);\r\n                return;\r\n            }\r\n            var uploadRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = uploadRequest;\r\n            uploadRequest.getPromise().then(function (newStatus) {\r\n                _this._increaseMultiplier();\r\n                _this._request = undefined;\r\n                _this._updateProgress(newStatus.current);\r\n                if (newStatus.finalized) {\r\n                    _this._metadata = newStatus.metadata;\r\n                    _this._transition(\"success\" /* SUCCESS */);\r\n                }\r\n                else {\r\n                    _this.completeTransitions_();\r\n                }\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._increaseMultiplier = function () {\r\n        var currentSize = RESUMABLE_UPLOAD_CHUNK_SIZE * this._chunkMultiplier;\r\n        // Max chunk size is 32M.\r\n        if (currentSize < 32 * 1024 * 1024) {\r\n            this._chunkMultiplier *= 2;\r\n        }\r\n    };\r\n    UploadTask.prototype._fetchMetadata = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = getMetadata$2(_this._ref.storage, _this._ref._location, _this._mappings);\r\n            var metadataRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = metadataRequest;\r\n            metadataRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._transition(\"success\" /* SUCCESS */);\r\n            }, _this._metadataErrorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._oneShotUpload = function () {\r\n        var _this = this;\r\n        this._resolveToken(function (authToken, appCheckToken) {\r\n            var requestInfo = multipartUpload(_this._ref.storage, _this._ref._location, _this._mappings, _this._blob, _this._metadata);\r\n            var multipartRequest = _this._ref.storage._makeRequest(requestInfo, authToken, appCheckToken);\r\n            _this._request = multipartRequest;\r\n            multipartRequest.getPromise().then(function (metadata) {\r\n                _this._request = undefined;\r\n                _this._metadata = metadata;\r\n                _this._updateProgress(_this._blob.size());\r\n                _this._transition(\"success\" /* SUCCESS */);\r\n            }, _this._errorHandler);\r\n        });\r\n    };\r\n    UploadTask.prototype._updateProgress = function (transferred) {\r\n        var old = this._transferred;\r\n        this._transferred = transferred;\r\n        // A progress update can make the \"transferred\" value smaller (e.g. a\r\n        // partial upload not completed by server, after which the \"transferred\"\r\n        // value may reset to the value at the beginning of the request).\r\n        if (this._transferred !== old) {\r\n            this._notifyObservers();\r\n        }\r\n    };\r\n    UploadTask.prototype._transition = function (state) {\r\n        if (this._state === state) {\r\n            return;\r\n        }\r\n        switch (state) {\r\n            case \"canceling\" /* CANCELING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"pausing\" /* PAUSING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING);\r\n                this._state = state;\r\n                if (this._request !== undefined) {\r\n                    this._request.cancel();\r\n                }\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.PAUSING);\r\n                var wasPaused = this._state === \"paused\" /* PAUSED */;\r\n                this._state = state;\r\n                if (wasPaused) {\r\n                    this._notifyObservers();\r\n                    this._start();\r\n                }\r\n                break;\r\n            case \"paused\" /* PAUSED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"canceled\" /* CANCELED */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.PAUSED ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._error = canceled();\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"error\" /* ERROR */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n            case \"success\" /* SUCCESS */:\r\n                // TODO(andysoto):\r\n                // assert(this.state_ === InternalTaskState.RUNNING ||\r\n                //        this.state_ === InternalTaskState.PAUSING ||\r\n                //        this.state_ === InternalTaskState.CANCELING);\r\n                this._state = state;\r\n                this._notifyObservers();\r\n                break;\r\n        }\r\n    };\r\n    UploadTask.prototype.completeTransitions_ = function () {\r\n        switch (this._state) {\r\n            case \"pausing\" /* PAUSING */:\r\n                this._transition(\"paused\" /* PAUSED */);\r\n                break;\r\n            case \"canceling\" /* CANCELING */:\r\n                this._transition(\"canceled\" /* CANCELED */);\r\n                break;\r\n            case \"running\" /* RUNNING */:\r\n                this._start();\r\n                break;\r\n        }\r\n    };\r\n    Object.defineProperty(UploadTask.prototype, \"snapshot\", {\r\n        /**\r\n         * A snapshot of the current task state.\r\n         */\r\n        get: function () {\r\n            var externalState = taskStateFromInternalTaskState(this._state);\r\n            return {\r\n                bytesTransferred: this._transferred,\r\n                totalBytes: this._blob.size(),\r\n                state: externalState,\r\n                metadata: this._metadata,\r\n                task: this,\r\n                ref: this._ref\r\n            };\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Adds a callback for an event.\r\n     * @param type - The type of event to listen for.\r\n     * @param nextOrObserver -\r\n     *     The `next` function, which gets called for each item in\r\n     *     the event stream, or an observer object with some or all of these three\r\n     *     properties (`next`, `error`, `complete`).\r\n     * @param error - A function that gets called with a `FirebaseStorageError`\r\n     *     if the event stream ends due to an error.\r\n     * @param completed - A function that gets called if the\r\n     *     event stream ends normally.\r\n     * @returns\r\n     *     If only the event argument is passed, returns a function you can use to\r\n     *     add callbacks (see the examples above). If more than just the event\r\n     *     argument is passed, returns a function you can call to unregister the\r\n     *     callbacks.\r\n     */\r\n    UploadTask.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var observer = new Observer(nextOrObserver, error, completed);\r\n        this._addObserver(observer);\r\n        return function () {\r\n            _this._removeObserver(observer);\r\n        };\r\n    };\r\n    /**\r\n     * This object behaves like a Promise, and resolves with its snapshot data\r\n     * when the upload completes.\r\n     * @param onFulfilled - The fulfillment callback. Promise chaining works as normal.\r\n     * @param onRejected - The rejection callback.\r\n     */\r\n    UploadTask.prototype.then = function (onFulfilled, onRejected) {\r\n        // These casts are needed so that TypeScript can infer the types of the\r\n        // resulting Promise.\r\n        return this._promise.then(onFulfilled, onRejected);\r\n    };\r\n    /**\r\n     * Equivalent to calling `then(null, onRejected)`.\r\n     */\r\n    UploadTask.prototype.catch = function (onRejected) {\r\n        return this.then(null, onRejected);\r\n    };\r\n    /**\r\n     * Adds the given observer.\r\n     */\r\n    UploadTask.prototype._addObserver = function (observer) {\r\n        this._observers.push(observer);\r\n        this._notifyObserver(observer);\r\n    };\r\n    /**\r\n     * Removes the given observer.\r\n     */\r\n    UploadTask.prototype._removeObserver = function (observer) {\r\n        var i = this._observers.indexOf(observer);\r\n        if (i !== -1) {\r\n            this._observers.splice(i, 1);\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObservers = function () {\r\n        var _this = this;\r\n        this._finishPromise();\r\n        var observers = this._observers.slice();\r\n        observers.forEach(function (observer) {\r\n            _this._notifyObserver(observer);\r\n        });\r\n    };\r\n    UploadTask.prototype._finishPromise = function () {\r\n        if (this._resolve !== undefined) {\r\n            var triggered = true;\r\n            switch (taskStateFromInternalTaskState(this._state)) {\r\n                case TaskState.SUCCESS:\r\n                    async(this._resolve.bind(null, this.snapshot))();\r\n                    break;\r\n                case TaskState.CANCELED:\r\n                case TaskState.ERROR:\r\n                    var toCall = this._reject;\r\n                    async(toCall.bind(null, this._error))();\r\n                    break;\r\n                default:\r\n                    triggered = false;\r\n                    break;\r\n            }\r\n            if (triggered) {\r\n                this._resolve = undefined;\r\n                this._reject = undefined;\r\n            }\r\n        }\r\n    };\r\n    UploadTask.prototype._notifyObserver = function (observer) {\r\n        var externalState = taskStateFromInternalTaskState(this._state);\r\n        switch (externalState) {\r\n            case TaskState.RUNNING:\r\n            case TaskState.PAUSED:\r\n                if (observer.next) {\r\n                    async(observer.next.bind(observer, this.snapshot))();\r\n                }\r\n                break;\r\n            case TaskState.SUCCESS:\r\n                if (observer.complete) {\r\n                    async(observer.complete.bind(observer))();\r\n                }\r\n                break;\r\n            case TaskState.CANCELED:\r\n            case TaskState.ERROR:\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n                break;\r\n            default:\r\n                // TODO(andysoto): assert(false);\r\n                if (observer.error) {\r\n                    async(observer.error.bind(observer, this._error))();\r\n                }\r\n        }\r\n    };\r\n    /**\r\n     * Resumes a paused task. Has no effect on a currently running or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.resume = function () {\r\n        var valid = this._state === \"paused\" /* PAUSED */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"running\" /* RUNNING */);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Pauses a currently running task. Has no effect on a paused or failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.pause = function () {\r\n        var valid = this._state === \"running\" /* RUNNING */;\r\n        if (valid) {\r\n            this._transition(\"pausing\" /* PAUSING */);\r\n        }\r\n        return valid;\r\n    };\r\n    /**\r\n     * Cancels a currently running or paused task. Has no effect on a complete or\r\n     * failed task.\r\n     * @returns True if the operation took effect, false if ignored.\r\n     */\r\n    UploadTask.prototype.cancel = function () {\r\n        var valid = this._state === \"running\" /* RUNNING */ ||\r\n            this._state === \"pausing\" /* PAUSING */;\r\n        if (valid) {\r\n            this._transition(\"canceling\" /* CANCELING */);\r\n        }\r\n        return valid;\r\n    };\r\n    return UploadTask;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Provides methods to interact with a bucket in the Firebase Storage service.\r\n * @internal\r\n * @param _location - An fbs.location, or the URL at\r\n *     which to base this object, in one of the following forms:\r\n *         gs://<bucket>/<object-path>\r\n *         http[s]://firebasestorage.googleapis.com/\r\n *                     <api-version>/b/<bucket>/o/<object-path>\r\n *     Any query or fragment strings will be ignored in the http[s]\r\n *     format. If no value is passed, the storage object will use a URL based on\r\n *     the project ID of the base firebase.App instance.\r\n */\r\nvar Reference = /** @class */ (function () {\r\n    function Reference(_service, location) {\r\n        this._service = _service;\r\n        if (location instanceof Location) {\r\n            this._location = location;\r\n        }\r\n        else {\r\n            this._location = Location.makeFromUrl(location, _service.host);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the URL for the bucket and path this object references,\r\n     *     in the form gs://<bucket>/<object-path>\r\n     * @override\r\n     */\r\n    Reference.prototype.toString = function () {\r\n        return 'gs://' + this._location.bucket + '/' + this._location.path;\r\n    };\r\n    Reference.prototype._newRef = function (service, location) {\r\n        return new Reference(service, location);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        /**\r\n         * A reference to the root of this object's bucket.\r\n         */\r\n        get: function () {\r\n            var location = new Location(this._location.bucket, '');\r\n            return this._newRef(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"bucket\", {\r\n        /**\r\n         * The name of the bucket containing this reference's object.\r\n         */\r\n        get: function () {\r\n            return this._location.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"fullPath\", {\r\n        /**\r\n         * The full path of this object.\r\n         */\r\n        get: function () {\r\n            return this._location.path;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"name\", {\r\n        /**\r\n         * The short name of this object, which is the last component of the full path.\r\n         * For example, if fullPath is 'full/path/image.png', name is 'image.png'.\r\n         */\r\n        get: function () {\r\n            return lastComponent(this._location.path);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"storage\", {\r\n        /**\r\n         * The `StorageService` instance this `StorageReference` is associated with.\r\n         */\r\n        get: function () {\r\n            return this._service;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        /**\r\n         * A `StorageReference` pointing to the parent location of this `StorageReference`, or null if\r\n         * this reference is the root.\r\n         */\r\n        get: function () {\r\n            var newPath = parent(this._location.path);\r\n            if (newPath === null) {\r\n                return null;\r\n            }\r\n            var location = new Location(this._location.bucket, newPath);\r\n            return new Reference(this._service, location);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Utility function to throw an error in methods that do not accept a root reference.\r\n     */\r\n    Reference.prototype._throwIfRoot = function (name) {\r\n        if (this._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return Reference;\r\n}());\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the newly uploaded data.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable$1(ref, data, metadata) {\r\n    ref._throwIfRoot('uploadBytesResumable');\r\n    return new UploadTask(ref, new FbsBlob(data), metadata);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: listAll may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - StorageReference to get list from.\r\n *\r\n * @returns A Promise that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll$1(ref) {\r\n    var accumulator = {\r\n        prefixes: [],\r\n        items: []\r\n    };\r\n    return listAllHelper(ref, accumulator).then(function () { return accumulator; });\r\n}\r\n/**\r\n * Separated from listAll because async functions can't use \"arguments\".\r\n * @param ref\r\n * @param accumulator\r\n * @param pageToken\r\n */\r\nfunction listAllHelper(ref, accumulator, pageToken) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var opt, nextPage;\r\n        var _a, _b;\r\n        return __generator(this, function (_c) {\r\n            switch (_c.label) {\r\n                case 0:\r\n                    opt = {\r\n                        // maxResults is 1000 by default.\r\n                        pageToken: pageToken\r\n                    };\r\n                    return [4 /*yield*/, list$1(ref, opt)];\r\n                case 1:\r\n                    nextPage = _c.sent();\r\n                    (_a = accumulator.prefixes).push.apply(_a, nextPage.prefixes);\r\n                    (_b = accumulator.items).push.apply(_b, nextPage.items);\r\n                    if (!(nextPage.nextPageToken != null)) return [3 /*break*/, 3];\r\n                    return [4 /*yield*/, listAllHelper(ref, accumulator, nextPage.nextPageToken)];\r\n                case 2:\r\n                    _c.sent();\r\n                    _c.label = 3;\r\n                case 3: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - StorageReference to get list from.\r\n * @param options - See ListOptions for details.\r\n * @returns A Promise that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list$1(ref, options) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var op, requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (options != null) {\r\n                        if (typeof options.maxResults === 'number') {\r\n                            validateNumber('options.maxResults', \r\n                            /* minValue= */ 1, \r\n                            /* maxValue= */ 1000, options.maxResults);\r\n                        }\r\n                    }\r\n                    op = options || {};\r\n                    requestInfo = list$2(ref.storage, ref._location, \r\n                    /*delimiter= */ '/', op.pageToken, op.maxResults);\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - StorageReference to get metadata from.\r\n */\r\nfunction getMetadata$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getMetadata');\r\n                    requestInfo = getMetadata$2(ref.storage, ref._location, getMappings());\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - StorageReference to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves\r\n *     with the new metadata for this object.\r\n *     See `firebaseStorage.Reference.prototype.getMetadata`\r\n */\r\nfunction updateMetadata$1(ref, metadata) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('updateMetadata');\r\n                    requestInfo = updateMetadata$2(ref.storage, ref._location, metadata, getMappings());\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns the download URL for the given Reference.\r\n * @public\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('getDownloadURL');\r\n                    requestInfo = getDownloadUrl(ref.storage, ref._location, getMappings());\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent())\r\n                        .getPromise()\r\n                        .then(function (url) {\r\n                        if (url === null) {\r\n                            throw noDownloadURL();\r\n                        }\r\n                        return url;\r\n                    })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - StorageReference for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject$1(ref) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var requestInfo;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ref._throwIfRoot('deleteObject');\r\n                    requestInfo = deleteObject$2(ref.storage, ref._location);\r\n                    return [4 /*yield*/, ref.storage.makeRequestWithTokens(requestInfo)];\r\n                case 1: return [2 /*return*/, (_a.sent()).getPromise()];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns reference for object obtained by appending `childPath` to `ref`.\r\n *\r\n * @param ref - StorageReference to get child of.\r\n * @param childPath - Child path from provided ref.\r\n * @returns A reference to the object obtained by\r\n * appending childPath, removing any duplicate, beginning, or trailing\r\n * slashes.\r\n *\r\n */\r\nfunction _getChild$1(ref, childPath) {\r\n    var newPath = child(ref._location.path, childPath);\r\n    var location = new Location(ref._location.bucket, newPath);\r\n    return new Reference(ref.storage, location);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isUrl(path) {\r\n    return /^[A-Za-z]+:\\/\\//.test(path);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given url.\r\n */\r\nfunction refFromURL(service, url) {\r\n    return new Reference(service, url);\r\n}\r\n/**\r\n * Returns a firebaseStorage.Reference for the given path in the default\r\n * bucket.\r\n */\r\nfunction refFromPath(ref, path) {\r\n    if (ref instanceof FirebaseStorageImpl) {\r\n        var service = ref;\r\n        if (service._bucket == null) {\r\n            throw noDefaultBucket();\r\n        }\r\n        var reference = new Reference(service, service._bucket);\r\n        if (path != null) {\r\n            return refFromPath(reference, path);\r\n        }\r\n        else {\r\n            return reference;\r\n        }\r\n    }\r\n    else {\r\n        // ref is a Reference\r\n        if (path !== undefined) {\r\n            return _getChild$1(ref, path);\r\n        }\r\n        else {\r\n            return ref;\r\n        }\r\n    }\r\n}\r\nfunction ref$1(serviceOrRef, pathOrUrl) {\r\n    if (pathOrUrl && isUrl(pathOrUrl)) {\r\n        if (serviceOrRef instanceof FirebaseStorageImpl) {\r\n            return refFromURL(serviceOrRef, pathOrUrl);\r\n        }\r\n        else {\r\n            throw invalidArgument('To use ref(service, url), the first argument must be a Storage instance.');\r\n        }\r\n    }\r\n    else {\r\n        return refFromPath(serviceOrRef, pathOrUrl);\r\n    }\r\n}\r\nfunction extractBucket(host, config) {\r\n    var bucketString = config === null || config === void 0 ? void 0 : config[CONFIG_STORAGE_BUCKET_KEY];\r\n    if (bucketString == null) {\r\n        return null;\r\n    }\r\n    return Location.makeFromBucketSpec(bucketString, host);\r\n}\r\nfunction connectStorageEmulator$1(storage, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    storage.host = \"http://\" + host + \":\" + port;\r\n    var mockUserToken = options.mockUserToken;\r\n    if (mockUserToken) {\r\n        storage._overrideAuthToken =\r\n            typeof mockUserToken === 'string'\r\n                ? mockUserToken\r\n                : createMockUserToken(mockUserToken, storage.app.options.projectId);\r\n    }\r\n}\r\n/**\r\n * A service that provides Firebase Storage Reference instances.\r\n * @public\r\n * @param opt_url - gs:// url to a custom Storage Bucket\r\n */\r\nvar FirebaseStorageImpl = /** @class */ (function () {\r\n    function FirebaseStorageImpl(\r\n    /**\r\n     * FirebaseApp associated with this StorageService instance.\r\n     */\r\n    app, _authProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _appCheckProvider, \r\n    /**\r\n     * @internal\r\n     */\r\n    _pool, _url, _firebaseVersion) {\r\n        this.app = app;\r\n        this._authProvider = _authProvider;\r\n        this._appCheckProvider = _appCheckProvider;\r\n        this._pool = _pool;\r\n        this._url = _url;\r\n        this._firebaseVersion = _firebaseVersion;\r\n        this._bucket = null;\r\n        /**\r\n         * This string can be in the formats:\r\n         * - host\r\n         * - host:port\r\n         * - protocol://host:port\r\n         */\r\n        this._host = DEFAULT_HOST;\r\n        this._appId = null;\r\n        this._deleted = false;\r\n        this._maxOperationRetryTime = DEFAULT_MAX_OPERATION_RETRY_TIME;\r\n        this._maxUploadRetryTime = DEFAULT_MAX_UPLOAD_RETRY_TIME;\r\n        this._requests = new Set();\r\n        if (_url != null) {\r\n            this._bucket = Location.makeFromBucketSpec(_url, this._host);\r\n        }\r\n        else {\r\n            this._bucket = extractBucket(this._host, this.app.options);\r\n        }\r\n    }\r\n    Object.defineProperty(FirebaseStorageImpl.prototype, \"host\", {\r\n        get: function () {\r\n            return this._host;\r\n        },\r\n        /**\r\n         * Set host string for this service.\r\n         * @param host - host string in the form of host, host:port,\r\n         * or protocol://host:port\r\n         */\r\n        set: function (host) {\r\n            this._host = host;\r\n            if (this._url != null) {\r\n                this._bucket = Location.makeFromBucketSpec(this._url, host);\r\n            }\r\n            else {\r\n                this._bucket = extractBucket(host, this.app.options);\r\n            }\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageImpl.prototype, \"maxUploadRetryTime\", {\r\n        /**\r\n         * The maximum time to retry uploads in milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._maxUploadRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxUploadRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FirebaseStorageImpl.prototype, \"maxOperationRetryTime\", {\r\n        /**\r\n         * The maximum time to retry operations other than uploads or downloads in\r\n         * milliseconds.\r\n         */\r\n        get: function () {\r\n            return this._maxOperationRetryTime;\r\n        },\r\n        set: function (time) {\r\n            validateNumber('time', \r\n            /* minValue=*/ 0, \r\n            /* maxValue= */ Number.POSITIVE_INFINITY, time);\r\n            this._maxOperationRetryTime = time;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    FirebaseStorageImpl.prototype._getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var auth, tokenData;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this._overrideAuthToken) {\r\n                            return [2 /*return*/, this._overrideAuthToken];\r\n                        }\r\n                        auth = this._authProvider.getImmediate({ optional: true });\r\n                        if (!auth) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, auth.getToken()];\r\n                    case 1:\r\n                        tokenData = _a.sent();\r\n                        if (tokenData !== null) {\r\n                            return [2 /*return*/, tokenData.accessToken];\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    FirebaseStorageImpl.prototype._getAppCheckToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var appCheck, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        appCheck = this._appCheckProvider.getImmediate({ optional: true });\r\n                        if (!appCheck) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, appCheck.getToken()];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        // TODO: What do we want to do if there is an error getting the token?\r\n                        // Context: appCheck.getToken() will never throw even if an error happened. In the error case, a dummy token will be\r\n                        // returned along with an error field describing the error. In general, we shouldn't care about the error condition and just use\r\n                        // the token (actual or dummy) to send requests.\r\n                        return [2 /*return*/, result.token];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Stop running requests and prevent more from being created.\r\n     */\r\n    FirebaseStorageImpl.prototype._delete = function () {\r\n        if (!this._deleted) {\r\n            this._deleted = true;\r\n            this._requests.forEach(function (request) { return request.cancel(); });\r\n            this._requests.clear();\r\n        }\r\n        return Promise.resolve();\r\n    };\r\n    /**\r\n     * Returns a new firebaseStorage.Reference object referencing this StorageService\r\n     * at the given Location.\r\n     */\r\n    FirebaseStorageImpl.prototype._makeStorageReference = function (loc) {\r\n        return new Reference(this, loc);\r\n    };\r\n    /**\r\n     * @param requestInfo - HTTP RequestInfo object\r\n     * @param authToken - Firebase auth token\r\n     */\r\n    FirebaseStorageImpl.prototype._makeRequest = function (requestInfo, authToken, appCheckToken) {\r\n        var _this = this;\r\n        if (!this._deleted) {\r\n            var request_1 = makeRequest(requestInfo, this._appId, authToken, appCheckToken, this._pool, this._firebaseVersion);\r\n            this._requests.add(request_1);\r\n            // Request removes itself from set when complete.\r\n            request_1.getPromise().then(function () { return _this._requests.delete(request_1); }, function () { return _this._requests.delete(request_1); });\r\n            return request_1;\r\n        }\r\n        else {\r\n            return new FailRequest(appDeleted());\r\n        }\r\n    };\r\n    FirebaseStorageImpl.prototype.makeRequestWithTokens = function (requestInfo) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, authToken, appCheckToken;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this._getAuthToken(),\r\n                            this._getAppCheckToken()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), authToken = _a[0], appCheckToken = _a[1];\r\n                        return [2 /*return*/, this._makeRequest(requestInfo, authToken, appCheckToken)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return FirebaseStorageImpl;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Uploads data to this object's location.\r\n * The upload can be paused and resumed, and exposes progress updates.\r\n * @public\r\n * @param ref - StorageReference where data should be uploaded.\r\n * @param data - The data to upload.\r\n * @param metadata - Metadata for the data to upload.\r\n * @returns An UploadTask\r\n */\r\nfunction uploadBytesResumable(ref, data, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return uploadBytesResumable$1(ref, data, metadata);\r\n}\r\n/**\r\n * A `Promise` that resolves with the metadata for this object. If this\r\n * object doesn't exist or metadata cannot be retreived, the promise is\r\n * rejected.\r\n * @public\r\n * @param ref - {@link StorageReference} to get metadata from.\r\n */\r\nfunction getMetadata(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getMetadata$1(ref);\r\n}\r\n/**\r\n * Updates the metadata for this object.\r\n * @public\r\n * @param ref - {@link StorageReference} to update metadata for.\r\n * @param metadata - The new metadata for the object.\r\n *     Only values that have been explicitly set will be changed. Explicitly\r\n *     setting a value to null will remove the metadata.\r\n * @returns A `Promise` that resolves with the new metadata for this object.\r\n */\r\nfunction updateMetadata(ref, metadata) {\r\n    ref = getModularInstance(ref);\r\n    return updateMetadata$1(ref, metadata);\r\n}\r\n/**\r\n * List items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * List API is only available for Firebase Rules Version 2.\r\n *\r\n * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n * delimited folder structure.\r\n * Refer to GCS's List API if you want to learn more.\r\n *\r\n * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n * support objects whose paths end with \"/\" or contain two consecutive\r\n * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n * list() may fail if there are too many unsupported objects in the bucket.\r\n * @public\r\n *\r\n * @param ref - {@link StorageReference} to get list from.\r\n * @param options - See {@link ListOptions} for details.\r\n * @returns A `Promise` that resolves with the items and prefixes.\r\n *      `prefixes` contains references to sub-folders and `items`\r\n *      contains references to objects in this folder. `nextPageToken`\r\n *      can be used to get the rest of the results.\r\n */\r\nfunction list(ref, options) {\r\n    ref = getModularInstance(ref);\r\n    return list$1(ref, options);\r\n}\r\n/**\r\n * List all items (files) and prefixes (folders) under this storage reference.\r\n *\r\n * This is a helper method for calling list() repeatedly until there are\r\n * no more results. The default pagination size is 1000.\r\n *\r\n * Note: The results may not be consistent if objects are changed while this\r\n * operation is running.\r\n *\r\n * Warning: `listAll` may potentially consume too many resources if there are\r\n * too many results.\r\n * @public\r\n * @param ref - {@link StorageReference} to get list from.\r\n *\r\n * @returns A `Promise` that resolves with all the items and prefixes under\r\n *      the current storage reference. `prefixes` contains references to\r\n *      sub-directories and `items` contains references to objects in this\r\n *      folder. `nextPageToken` is never returned.\r\n */\r\nfunction listAll(ref) {\r\n    ref = getModularInstance(ref);\r\n    return listAll$1(ref);\r\n}\r\n/**\r\n * Returns the download URL for the given {@link StorageReference}.\r\n * @public\r\n * @param ref - {@link StorageReference} to get the download URL for.\r\n * @returns A `Promise` that resolves with the download\r\n *     URL for this object.\r\n */\r\nfunction getDownloadURL(ref) {\r\n    ref = getModularInstance(ref);\r\n    return getDownloadURL$1(ref);\r\n}\r\n/**\r\n * Deletes the object at this location.\r\n * @public\r\n * @param ref - {@link StorageReference} for object to delete.\r\n * @returns A `Promise` that resolves if the deletion succeeds.\r\n */\r\nfunction deleteObject(ref) {\r\n    ref = getModularInstance(ref);\r\n    return deleteObject$1(ref);\r\n}\r\nfunction ref(serviceOrRef, pathOrUrl) {\r\n    serviceOrRef = getModularInstance(serviceOrRef);\r\n    return ref$1(serviceOrRef, pathOrUrl);\r\n}\r\n/**\r\n * @internal\r\n */\r\nfunction _getChild(ref, childPath) {\r\n    return _getChild$1(ref, childPath);\r\n}\r\n/**\r\n * Modify this {@link FirebaseStorage} instance to communicate with the Cloud Storage emulator.\r\n *\r\n * @param storage - The {@link FirebaseStorage} instance\r\n * @param host - The emulator host (ex: localhost)\r\n * @param port - The emulator port (ex: 5001)\r\n * @param options.mockUserToken - the mock auth token to use for unit testing Security Rules.\r\n * @public\r\n */\r\nfunction connectStorageEmulator(storage, host, port, options) {\r\n    if (options === void 0) { options = {}; }\r\n    connectStorageEmulator$1(storage, host, port, options);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskSnapshotCompat = /** @class */ (function () {\r\n    function UploadTaskSnapshotCompat(_delegate, task, ref) {\r\n        this._delegate = _delegate;\r\n        this.task = task;\r\n        this.ref = ref;\r\n    }\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"bytesTransferred\", {\r\n        get: function () {\r\n            return this._delegate.bytesTransferred;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"metadata\", {\r\n        get: function () {\r\n            return this._delegate.metadata;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"state\", {\r\n        get: function () {\r\n            return this._delegate.state;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(UploadTaskSnapshotCompat.prototype, \"totalBytes\", {\r\n        get: function () {\r\n            return this._delegate.totalBytes;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return UploadTaskSnapshotCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar UploadTaskCompat = /** @class */ (function () {\r\n    function UploadTaskCompat(_delegate, _ref) {\r\n        this._delegate = _delegate;\r\n        this._ref = _ref;\r\n        this.cancel = this._delegate.cancel.bind(this._delegate);\r\n        this.catch = this._delegate.catch.bind(this._delegate);\r\n        this.pause = this._delegate.pause.bind(this._delegate);\r\n        this.resume = this._delegate.resume.bind(this._delegate);\r\n    }\r\n    Object.defineProperty(UploadTaskCompat.prototype, \"snapshot\", {\r\n        get: function () {\r\n            return new UploadTaskSnapshotCompat(this._delegate.snapshot, this, this._ref);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    UploadTaskCompat.prototype.then = function (onFulfilled, onRejected) {\r\n        var _this = this;\r\n        return this._delegate.then(function (snapshot) {\r\n            if (onFulfilled) {\r\n                return onFulfilled(new UploadTaskSnapshotCompat(snapshot, _this, _this._ref));\r\n            }\r\n        }, onRejected);\r\n    };\r\n    UploadTaskCompat.prototype.on = function (type, nextOrObserver, error, completed) {\r\n        var _this = this;\r\n        var wrappedNextOrObserver = undefined;\r\n        if (!!nextOrObserver) {\r\n            if (typeof nextOrObserver === 'function') {\r\n                wrappedNextOrObserver = function (taskSnapshot) {\r\n                    return nextOrObserver(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                };\r\n            }\r\n            else {\r\n                wrappedNextOrObserver = {\r\n                    next: !!nextOrObserver.next\r\n                        ? function (taskSnapshot) {\r\n                            return nextOrObserver.next(new UploadTaskSnapshotCompat(taskSnapshot, _this, _this._ref));\r\n                        }\r\n                        : undefined,\r\n                    complete: nextOrObserver.complete || undefined,\r\n                    error: nextOrObserver.error || undefined\r\n                };\r\n            }\r\n        }\r\n        return this._delegate.on(type, wrappedNextOrObserver, error || undefined, completed || undefined);\r\n    };\r\n    return UploadTaskCompat;\r\n}());\n\nvar ListResultCompat = /** @class */ (function () {\r\n    function ListResultCompat(_delegate, _service) {\r\n        this._delegate = _delegate;\r\n        this._service = _service;\r\n    }\r\n    Object.defineProperty(ListResultCompat.prototype, \"prefixes\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.prefixes.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"items\", {\r\n        get: function () {\r\n            var _this = this;\r\n            return this._delegate.items.map(function (ref) { return new ReferenceCompat(ref, _this._service); });\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ListResultCompat.prototype, \"nextPageToken\", {\r\n        get: function () {\r\n            return this._delegate.nextPageToken || null;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return ListResultCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *  http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ReferenceCompat = /** @class */ (function () {\r\n    function ReferenceCompat(_delegate, storage) {\r\n        this._delegate = _delegate;\r\n        this.storage = storage;\r\n    }\r\n    Object.defineProperty(ReferenceCompat.prototype, \"name\", {\r\n        get: function () {\r\n            return this._delegate.name;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"bucket\", {\r\n        get: function () {\r\n            return this._delegate.bucket;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"fullPath\", {\r\n        get: function () {\r\n            return this._delegate.fullPath;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    ReferenceCompat.prototype.toString = function () {\r\n        return this._delegate.toString();\r\n    };\r\n    /**\r\n     * @returns A reference to the object obtained by\r\n     * appending childPath, removing any duplicate, beginning, or trailing\r\n     * slashes.\r\n     */\r\n    ReferenceCompat.prototype.child = function (childPath) {\r\n        var reference = _getChild(this._delegate, childPath);\r\n        return new ReferenceCompat(reference, this.storage);\r\n    };\r\n    Object.defineProperty(ReferenceCompat.prototype, \"root\", {\r\n        get: function () {\r\n            return new ReferenceCompat(this._delegate.root, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReferenceCompat.prototype, \"parent\", {\r\n        /**\r\n         * @returns A reference to the parent of the\r\n         * current object, or null if the current object is the root.\r\n         */\r\n        get: function () {\r\n            var reference = this._delegate.parent;\r\n            if (reference == null) {\r\n                return null;\r\n            }\r\n            return new ReferenceCompat(reference, this.storage);\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Uploads a blob to this object's location.\r\n     * @param data - The blob to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.put = function (data, metadata) {\r\n        this._throwIfRoot('put');\r\n        return new UploadTaskCompat(uploadBytesResumable(this._delegate, data, metadata), this);\r\n    };\r\n    /**\r\n     * Uploads a string to this object's location.\r\n     * @param value - The string to upload.\r\n     * @param format - The format of the string to upload.\r\n     * @returns An UploadTask that lets you control and\r\n     * observe the upload.\r\n     */\r\n    ReferenceCompat.prototype.putString = function (value, format, metadata) {\r\n        if (format === void 0) { format = StringFormat.RAW; }\r\n        this._throwIfRoot('putString');\r\n        var data = dataFromString(format, value);\r\n        var metadataClone = __assign({}, metadata);\r\n        if (metadataClone['contentType'] == null && data.contentType != null) {\r\n            metadataClone['contentType'] = data.contentType;\r\n        }\r\n        return new UploadTaskCompat(new UploadTask(this._delegate, new FbsBlob(data.data, true), metadataClone), this);\r\n    };\r\n    /**\r\n     * List all items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * This is a helper method for calling list() repeatedly until there are\r\n     * no more results. The default pagination size is 1000.\r\n     *\r\n     * Note: The results may not be consistent if objects are changed while this\r\n     * operation is running.\r\n     *\r\n     * Warning: listAll may potentially consume too many resources if there are\r\n     * too many results.\r\n     *\r\n     * @returns A Promise that resolves with all the items and prefixes under\r\n     *  the current storage reference. `prefixes` contains references to\r\n     *  sub-directories and `items` contains references to objects in this\r\n     *  folder. `nextPageToken` is never returned.\r\n     */\r\n    ReferenceCompat.prototype.listAll = function () {\r\n        var _this = this;\r\n        return listAll(this._delegate).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * List items (files) and prefixes (folders) under this storage reference.\r\n     *\r\n     * List API is only available for Firebase Rules Version 2.\r\n     *\r\n     * GCS is a key-blob store. Firebase Storage imposes the semantic of '/'\r\n     * delimited folder structure. Refer to GCS's List API if you want to learn more.\r\n     *\r\n     * To adhere to Firebase Rules's Semantics, Firebase Storage does not\r\n     * support objects whose paths end with \"/\" or contain two consecutive\r\n     * \"/\"s. Firebase Storage List API will filter these unsupported objects.\r\n     * list() may fail if there are too many unsupported objects in the bucket.\r\n     *\r\n     * @param options - See ListOptions for details.\r\n     * @returns A Promise that resolves with the items and prefixes.\r\n     * `prefixes` contains references to sub-folders and `items`\r\n     * contains references to objects in this folder. `nextPageToken`\r\n     * can be used to get the rest of the results.\r\n     */\r\n    ReferenceCompat.prototype.list = function (options) {\r\n        var _this = this;\r\n        return list(this._delegate, options || undefined).then(function (r) { return new ListResultCompat(r, _this.storage); });\r\n    };\r\n    /**\r\n     * A `Promise` that resolves with the metadata for this object. If this\r\n     * object doesn't exist or metadata cannot be retreived, the promise is\r\n     * rejected.\r\n     */\r\n    ReferenceCompat.prototype.getMetadata = function () {\r\n        return getMetadata(this._delegate);\r\n    };\r\n    /**\r\n     * Updates the metadata for this object.\r\n     * @param metadata - The new metadata for the object.\r\n     * Only values that have been explicitly set will be changed. Explicitly\r\n     * setting a value to null will remove the metadata.\r\n     * @returns A `Promise` that resolves\r\n     * with the new metadata for this object.\r\n     * @see firebaseStorage.Reference.prototype.getMetadata\r\n     */\r\n    ReferenceCompat.prototype.updateMetadata = function (metadata) {\r\n        return updateMetadata(this._delegate, metadata);\r\n    };\r\n    /**\r\n     * @returns A `Promise` that resolves with the download\r\n     * URL for this object.\r\n     */\r\n    ReferenceCompat.prototype.getDownloadURL = function () {\r\n        return getDownloadURL(this._delegate);\r\n    };\r\n    /**\r\n     * Deletes the object at this location.\r\n     * @returns A `Promise` that resolves if the deletion succeeds.\r\n     */\r\n    ReferenceCompat.prototype.delete = function () {\r\n        this._throwIfRoot('delete');\r\n        return deleteObject(this._delegate);\r\n    };\r\n    ReferenceCompat.prototype._throwIfRoot = function (name) {\r\n        if (this._delegate._location.path === '') {\r\n            throw invalidRootOperation(name);\r\n        }\r\n    };\r\n    return ReferenceCompat;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A service that provides firebaseStorage.Reference instances.\r\n * @param opt_url gs:// url to a custom Storage Bucket\r\n */\r\nvar StorageServiceCompat = /** @class */ (function () {\r\n    function StorageServiceCompat(app, _delegate) {\r\n        this.app = app;\r\n        this._delegate = _delegate;\r\n    }\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxOperationRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxOperationRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(StorageServiceCompat.prototype, \"maxUploadRetryTime\", {\r\n        get: function () {\r\n            return this._delegate.maxUploadRetryTime;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns a firebaseStorage.Reference for the given path in the default\r\n     * bucket.\r\n     */\r\n    StorageServiceCompat.prototype.ref = function (path) {\r\n        if (isUrl(path)) {\r\n            throw invalidArgument('ref() expected a child path but got a URL, use refFromURL instead.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, path), this);\r\n    };\r\n    /**\r\n     * Returns a firebaseStorage.Reference object for the given absolute URL,\r\n     * which must be a gs:// or http[s]:// URL.\r\n     */\r\n    StorageServiceCompat.prototype.refFromURL = function (url) {\r\n        if (!isUrl(url)) {\r\n            throw invalidArgument('refFromURL() expected a full URL but got a child path, use ref() instead.');\r\n        }\r\n        try {\r\n            Location.makeFromUrl(url, this._delegate.host);\r\n        }\r\n        catch (e) {\r\n            throw invalidArgument('refFromUrl() expected a valid full URL but got an invalid one.');\r\n        }\r\n        return new ReferenceCompat(ref(this._delegate, url), this);\r\n    };\r\n    StorageServiceCompat.prototype.setMaxUploadRetryTime = function (time) {\r\n        this._delegate.maxUploadRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.setMaxOperationRetryTime = function (time) {\r\n        this._delegate.maxOperationRetryTime = time;\r\n    };\r\n    StorageServiceCompat.prototype.useEmulator = function (host, port, options) {\r\n        if (options === void 0) { options = {}; }\r\n        connectStorageEmulator(this._delegate, host, port, options);\r\n    };\r\n    return StorageServiceCompat;\r\n}());\n\nvar name = \"@firebase/storage\";\nvar version = \"0.7.1\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Storage.\r\n */\r\nvar STORAGE_TYPE = 'storage';\r\nfunction factory(container, _a) {\r\n    var url = _a.instanceIdentifier;\r\n    // Dependencies\r\n    // TODO: This should eventually be 'app-compat'\r\n    var app = container.getProvider('app').getImmediate();\r\n    var authProvider = container.getProvider('auth-internal');\r\n    var appCheckProvider = container.getProvider('app-check-internal');\r\n    // TODO: get StorageService instance from component framework instead\r\n    // of creating a new one.\r\n    var storageServiceCompat = new StorageServiceCompat(app, new FirebaseStorageImpl(app, authProvider, appCheckProvider, new ConnectionPool(), url, firebase.SDK_VERSION));\r\n    return storageServiceCompat;\r\n}\r\nfunction registerStorage(instance) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        TaskState: TaskState,\r\n        TaskEvent: TaskEvent,\r\n        StringFormat: StringFormat,\r\n        Storage: FirebaseStorageImpl,\r\n        Reference: ReferenceCompat\r\n    };\r\n    instance.INTERNAL.registerComponent(new Component(STORAGE_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterStorage(firebase);\n\nexport { registerStorage };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}