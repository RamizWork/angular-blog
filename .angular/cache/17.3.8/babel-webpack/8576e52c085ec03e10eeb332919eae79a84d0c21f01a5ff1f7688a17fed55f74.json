{"ast":null,"code":"import { UntypedFormControl, UntypedFormGroup, Validators } from \"@angular/forms\";\nimport { tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../shared/services/auth.service\";\nimport * as i4 from \"@angular/material/legacy-dialog\";\nimport * as i5 from \"ngx-toastr\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/legacy-button\";\nconst _c0 = a0 => ({\n  \"bat__invalid\": a0\n});\nfunction ChangePasswordComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"small\", 9);\n    i0.ɵɵtext(2, \"Full name not be empty\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ChangePasswordComponent_ng_container_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nexport class ChangePasswordComponent {\n  constructor(userService, router, authService, dialog, toastrService) {\n    this.userService = userService;\n    this.router = router;\n    this.authService = authService;\n    this.dialog = dialog;\n    this.toastrService = toastrService;\n  }\n  ngOnInit() {\n    this.formInitialize();\n  }\n  formInitialize() {\n    this.form = new UntypedFormGroup({\n      newPassword: new UntypedFormControl('', Validators.required)\n    });\n  }\n  modalClose() {\n    this.dialog.closeAll();\n  }\n  submit() {\n    if (this.form.invalid) {\n      return;\n    }\n    const newPassword = this.form.value.newPassword;\n    this.changePassword$ = this.userService.changePassword(newPassword).pipe(tap(() => {\n      this.form.reset();\n      this.modalClose();\n      this.toastrService.success('Password changed');\n      this.toastrService.error('Login again');\n      this.router.navigate(['/admin/login']);\n      this.authService.logout();\n    }));\n  }\n  static #_ = this.ɵfac = function ChangePasswordComponent_Factory(t) {\n    return new (t || ChangePasswordComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.MatLegacyDialog), i0.ɵɵdirectiveInject(i5.ToastrService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChangePasswordComponent,\n    selectors: [[\"app-change-password\"]],\n    decls: 15,\n    vars: 9,\n    consts: [[\"mat-dialog-title\", \"\", 1, \"change__password_title\"], [\"action\", \"\", 3, \"ngSubmit\", \"formGroup\"], [1, \"input__change\"], [\"for\", \"inputPassword\", 1, \"label__password\"], [\"id\", \"inputPassword\", \"type\", \"text\", \"formControlName\", \"newPassword\", 1, \"input__password\"], [4, \"ngIf\"], [\"mat-dialog-actions\", \"\", 1, \"btns\"], [\"mat-raised-button\", \"\", \"mat-button\", \"\", \"mat-dialog-close\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"mat-button\", \"\", \"type\", \"submit\", 1, \"btn__change_password\", 3, \"ngClass\", \"disabled\"], [2, \"color\", \"red\"]],\n    template: function ChangePasswordComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Change password modal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function ChangePasswordComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.submit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"label\", 3);\n        i0.ɵɵtext(5, \"New password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, ChangePasswordComponent_div_7_Template, 3, 0, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"button\", 7);\n        i0.ɵɵtext(10, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵtext(12, \"Ok \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(13, ChangePasswordComponent_ng_container_13_Template, 1, 0, \"ng-container\", 5);\n        i0.ɵɵpipe(14, \"async\");\n      }\n      if (rf & 2) {\n        let tmp_1_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.form);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"newPassword\").touched && ((tmp_1_0 = ctx.form.get(\"newPassword\").errors) == null ? null : tmp_1_0.required));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c0, ctx.form.invalid))(\"disabled\", ctx.form.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(14, 5, ctx.changePassword$));\n      }\n    },\n    dependencies: [i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i7.NgClass, i7.NgIf, i6.FormGroupDirective, i6.FormControlName, i8.MatLegacyButton, i4.MatLegacyDialogClose, i4.MatLegacyDialogTitle, i4.MatLegacyDialogActions, i7.AsyncPipe],\n    styles: [\".change__password_title[_ngcontent-%COMP%] {\\n  color: black;\\n}\\n\\n.btns[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n.btns[_ngcontent-%COMP%]   .btn__change_password[_ngcontent-%COMP%] {\\n  background-color: #4351a9;\\n}\\n.btns[_ngcontent-%COMP%]   .bat__invalid[_ngcontent-%COMP%] {\\n  background-color: #888888;\\n  color: white;\\n}\\n\\n.input__change[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.input__change[_ngcontent-%COMP%]   .label__password[_ngcontent-%COMP%] {\\n  color: black;\\n}\\n.input__change[_ngcontent-%COMP%]   .input__password[_ngcontent-%COMP%] {\\n  all: unset;\\n  color: black;\\n  border-bottom: 1px solid black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vY2hhbmdlLXBhc3N3b3JkL2NoYW5nZS1wYXNzd29yZC5jb21wb25lbnQuc2NzcyIsIndlYnBhY2s6Ly8uLy4uLy4uL1Byb2dlY3QlMjBmb3IlMjBsZWFybmluZy9hbmd1bGFyLWJsb2cvc3JjL2FwcC9hZG1pbi9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBQTtBQ0NGOztBREVBO0VBQ0UsYUFBQTtFQUNBLHlCQUFBO0FDQ0Y7QURBRTtFQUNFLHlCQUFBO0FDRUo7QURBRTtFQUNFLHlCQUFBO0VBQ0EsWUFBQTtBQ0VKOztBREVBO0VBQ0UsYUFBQTtFQUNBLHNCQUFBO0FDQ0Y7QURDRTtFQUNFLFlBQUE7QUNDSjtBREVFO0VBQ0UsVUFBQTtFQUNBLFlBQUE7RUFDQSw4QkFBQTtBQ0FKIiwic291cmNlc0NvbnRlbnQiOlsiLmNoYW5nZV9fcGFzc3dvcmRfdGl0bGUge1xyXG4gIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLmJ0bnMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICAuYnRuX19jaGFuZ2VfcGFzc3dvcmQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzQzNTFhOTtcclxuICB9XHJcbiAgLmJhdF9faW52YWxpZHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM4ODg4ODg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG59XHJcblxyXG4uaW5wdXRfX2NoYW5nZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG5cclxuICAubGFiZWxfX3Bhc3N3b3Jke1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gIH1cclxuXHJcbiAgLmlucHV0X19wYXNzd29yZCB7XHJcbiAgICBhbGw6IHVuc2V0O1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGJsYWNrO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbiIsIi5jaGFuZ2VfX3Bhc3N3b3JkX3RpdGxlIHtcbiAgY29sb3I6IGJsYWNrO1xufVxuXG4uYnRucyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7XG59XG4uYnRucyAuYnRuX19jaGFuZ2VfcGFzc3dvcmQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDM1MWE5O1xufVxuLmJ0bnMgLmJhdF9faW52YWxpZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICM4ODg4ODg7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cblxuLmlucHV0X19jaGFuZ2Uge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmlucHV0X19jaGFuZ2UgLmxhYmVsX19wYXNzd29yZCB7XG4gIGNvbG9yOiBibGFjaztcbn1cbi5pbnB1dF9fY2hhbmdlIC5pbnB1dF9fcGFzc3dvcmQge1xuICBhbGw6IHVuc2V0O1xuICBjb2xvcjogYmxhY2s7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCBibGFjaztcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["UntypedFormControl","UntypedFormGroup","Validators","tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainer","ChangePasswordComponent","constructor","userService","router","authService","dialog","toastrService","ngOnInit","formInitialize","form","newPassword","required","modalClose","closeAll","submit","invalid","value","changePassword$","changePassword","pipe","reset","success","error","navigate","logout","_","ɵɵdirectiveInject","i1","UserService","i2","Router","i3","AuthService","i4","MatLegacyDialog","i5","ToastrService","_2","selectors","decls","vars","consts","template","ChangePasswordComponent_Template","rf","ctx","ɵɵlistener","ChangePasswordComponent_Template_form_ngSubmit_2_listener","ɵɵelement","ɵɵtemplate","ChangePasswordComponent_div_7_Template","ChangePasswordComponent_ng_container_13_Template","ɵɵadvance","ɵɵproperty","get","touched","tmp_1_0","errors","ɵɵpureFunction1","_c0","ɵɵpipeBind1"],"sources":["C:\\Progect for learning\\angular-blog\\src\\app\\admin\\change-password\\change-password.component.ts","C:\\Progect for learning\\angular-blog\\src\\app\\admin\\change-password\\change-password.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {UntypedFormControl, UntypedFormGroup, Validators} from \"@angular/forms\";\r\nimport {Observable} from \"rxjs\";\r\nimport {UserService} from \"../shared/services/user.service\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthService} from \"../shared/services/auth.service\";\r\nimport {MatLegacyDialog as MatDialog} from \"@angular/material/legacy-dialog\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.scss']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n  form: UntypedFormGroup | any;\r\n  changePassword$: Observable<any> | undefined;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private dialog: MatDialog,\r\n    private toastrService: ToastrService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formInitialize();\r\n  }\r\n\r\n  formInitialize() {\r\n    this.form = new UntypedFormGroup({\r\n        newPassword: new UntypedFormControl('', Validators.required)\r\n      }\r\n    )\r\n  }\r\n\r\n  modalClose() {\r\n    this.dialog.closeAll();\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      return\r\n    }\r\n\r\n    const newPassword = this.form.value.newPassword;\r\n\r\n    this.changePassword$ = this.userService.changePassword(newPassword).pipe(\r\n      tap(() => {\r\n          this.form.reset();\r\n          this.modalClose();\r\n          this.toastrService.success('Password changed');\r\n          this.toastrService.error('Login again');\r\n          this.router.navigate(['/admin/login']);\r\n          this.authService.logout();\r\n        }\r\n      )\r\n    );\r\n\r\n  }\r\n}\r\n","<h1 class=\"change__password_title\" mat-dialog-title>Change password modal</h1>\r\n<form action=\"\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n  <div class=\"input__change\">\r\n    <label for=\"inputPassword\" class=\"label__password\">New password</label>\r\n    <input id=\"inputPassword\" class=\"input__password\" type=\"text\" formControlName=\"newPassword\">\r\n  </div>\r\n  <div *ngIf=\"form.get('newPassword').touched && form.get('newPassword').errors?.required\">\r\n    <small style=\"color: red\">Full name not be empty</small>\r\n  </div>\r\n  <div class=\"btns\" mat-dialog-actions>\r\n    <button mat-raised-button mat-button mat-dialog-close>Cancel</button>\r\n    <button [ngClass]=\"{'bat__invalid': form.invalid}\"\r\n            class=\"btn__change_password\"\r\n            mat-raised-button color=\"primary\"\r\n            mat-button type=\"submit\"\r\n            [disabled]=\"form.invalid\">Ok\r\n    </button>\r\n  </div>\r\n</form>\r\n\r\n<ng-container *ngIf=\"changePassword$ | async\"></ng-container>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}