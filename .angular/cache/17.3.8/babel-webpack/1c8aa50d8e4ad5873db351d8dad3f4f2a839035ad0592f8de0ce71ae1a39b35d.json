{"ast":null,"code":"import { tap } from \"rxjs/operators\";\nimport { environment } from \"../../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./auth.service\";\nexport class UserService {\n  constructor(http, authService) {\n    this.http = http;\n    this.authService = authService;\n  }\n  getUserData() {\n    const idToken = localStorage.getItem('id-token');\n    return this.http.post(`https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${environment.apiKey}`, {\n      idToken\n    }).pipe(tap(value => {\n      const userData = {\n        displayName: value.users[0].displayName,\n        photoUrl: value.users[0].photoUrl,\n        userEmail: value.users[0].email\n      };\n      this.authService.setProfileData(userData);\n    }));\n  }\n  updateProfile(userPhotoUrl, fullName) {\n    const idToken = localStorage.getItem('id-token');\n    const data = {\n      photoUrl: userPhotoUrl,\n      displayName: fullName,\n      returnSecureToken: true,\n      idToken: idToken\n    };\n    return this.http.post(`https://identitytoolkit.googleapis.com/v1/accounts:update?key=${environment.apiKey}`, data).pipe(tap(value => {\n      const profileData = {\n        displayName: value.displayName,\n        photoUrl: value.photoUrl,\n        userEmail: value.email\n      };\n      this.authService.setProfileData(profileData);\n    }));\n  }\n  changePassword(newPassword) {\n    const idToken = localStorage.getItem('id-token');\n    const data = {\n      idToken: idToken,\n      returnSecureToken: true,\n      password: newPassword\n    };\n    return this.http.post(`https://identitytoolkit.googleapis.com/v1/accounts:update?key=${environment.apiKey}`, data);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac\n  });\n}","map":{"version":3,"names":["tap","environment","UserService","constructor","http","authService","getUserData","idToken","localStorage","getItem","post","apiKey","pipe","value","userData","displayName","users","photoUrl","userEmail","email","setProfileData","updateProfile","userPhotoUrl","fullName","data","returnSecureToken","profileData","changePassword","newPassword","password","_","i0","ɵɵinject","i1","HttpClient","i2","AuthService","_2","factory","ɵfac"],"sources":["C:\\Progect for learning\\angular-blog\\src\\app\\admin\\shared\\services\\user.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {tap} from \"rxjs/operators\";\r\n\r\nimport {ResponseForIdentificatedEmailInterface} from \"../interfaces/responseForIdentificatedEmail.interface\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {environment} from \"../../../../environments/environment\";\r\nimport {ProfileDataInterface} from \"../interfaces/profileData.intarface\";\r\nimport {ResponseEditProfileInterface} from \"../interfaces/responseEditProfile.interface\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  constructor(private http: HttpClient, private authService: AuthService) {\r\n  }\r\n\r\n  getUserData(): Observable<ResponseForIdentificatedEmailInterface> {\r\n    const idToken: string | null = localStorage.getItem('id-token');\r\n\r\n    return this.http.post<ResponseForIdentificatedEmailInterface>(`https://identitytoolkit.googleapis.com/v1/accounts:lookup?key=${environment.apiKey}`, {idToken})\r\n      .pipe(\r\n        tap(value => {\r\n          const userData: ProfileDataInterface = {\r\n            displayName: value.users[0].displayName,\r\n            photoUrl: value.users[0].photoUrl,\r\n            userEmail: value.users[0].email\r\n          }\r\n          this.authService.setProfileData(userData);\r\n        })\r\n      )\r\n  }\r\n\r\n  updateProfile(userPhotoUrl: string, fullName: string): Observable<ResponseEditProfileInterface> {\r\n    const idToken: string | null = localStorage.getItem('id-token');\r\n    const data = {\r\n      photoUrl: userPhotoUrl,\r\n      displayName: fullName,\r\n      returnSecureToken: true,\r\n      idToken: idToken\r\n    }\r\n\r\n    return this.http.post<ResponseEditProfileInterface>(`https://identitytoolkit.googleapis.com/v1/accounts:update?key=${environment.apiKey}`, data)\r\n      .pipe(\r\n        tap((value) => {\r\n          const profileData: ProfileDataInterface = {\r\n            displayName: value.displayName,\r\n            photoUrl: value.photoUrl,\r\n            userEmail: value.email\r\n          }\r\n          this.authService.setProfileData(profileData);\r\n        })\r\n      );\r\n  }\r\n\r\n  changePassword(newPassword: string): Observable<any> {\r\n    const idToken: string | null = localStorage.getItem('id-token');\r\n\r\n    const data = {\r\n      idToken: idToken,\r\n      returnSecureToken: true,\r\n      password: newPassword\r\n    }\r\n\r\n    return this.http.post(`https://identitytoolkit.googleapis.com/v1/accounts:update?key=${environment.apiKey}`, data);\r\n  }\r\n\r\n}\r\n"],"mappings":"AAGA,SAAQA,GAAG,QAAO,gBAAgB;AAIlC,SAAQC,WAAW,QAAO,sCAAsC;;;;AAOhE,OAAM,MAAOC,WAAW;EACtBC,YAAoBC,IAAgB,EAAUC,WAAwB;IAAlD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,WAAW,GAAXA,WAAW;EACzD;EAEAC,WAAWA,CAAA;IACT,MAAMC,OAAO,GAAkBC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAE/D,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAyC,iEAAiET,WAAW,CAACU,MAAM,EAAE,EAAE;MAACJ;IAAO,CAAC,CAAC,CAC5JK,IAAI,CACHZ,GAAG,CAACa,KAAK,IAAG;MACV,MAAMC,QAAQ,GAAyB;QACrCC,WAAW,EAAEF,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAACD,WAAW;QACvCE,QAAQ,EAAEJ,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,QAAQ;QACjCC,SAAS,EAAEL,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAACG;OAC3B;MACD,IAAI,CAACd,WAAW,CAACe,cAAc,CAACN,QAAQ,CAAC;IAC3C,CAAC,CAAC,CACH;EACL;EAEAO,aAAaA,CAACC,YAAoB,EAAEC,QAAgB;IAClD,MAAMhB,OAAO,GAAkBC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAC/D,MAAMe,IAAI,GAAG;MACXP,QAAQ,EAAEK,YAAY;MACtBP,WAAW,EAAEQ,QAAQ;MACrBE,iBAAiB,EAAE,IAAI;MACvBlB,OAAO,EAAEA;KACV;IAED,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAA+B,iEAAiET,WAAW,CAACU,MAAM,EAAE,EAAEa,IAAI,CAAC,CAC7IZ,IAAI,CACHZ,GAAG,CAAEa,KAAK,IAAI;MACZ,MAAMa,WAAW,GAAyB;QACxCX,WAAW,EAAEF,KAAK,CAACE,WAAW;QAC9BE,QAAQ,EAAEJ,KAAK,CAACI,QAAQ;QACxBC,SAAS,EAAEL,KAAK,CAACM;OAClB;MACD,IAAI,CAACd,WAAW,CAACe,cAAc,CAACM,WAAW,CAAC;IAC9C,CAAC,CAAC,CACH;EACL;EAEAC,cAAcA,CAACC,WAAmB;IAChC,MAAMrB,OAAO,GAAkBC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAE/D,MAAMe,IAAI,GAAG;MACXjB,OAAO,EAAEA,OAAO;MAChBkB,iBAAiB,EAAE,IAAI;MACvBI,QAAQ,EAAED;KACX;IAED,OAAO,IAAI,CAACxB,IAAI,CAACM,IAAI,CAAC,iEAAiET,WAAW,CAACU,MAAM,EAAE,EAAEa,IAAI,CAAC;EACpH;EAAC,QAAAM,CAAA,G;qBApDU5B,WAAW,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnC,WAAW;IAAAoC,OAAA,EAAXpC,WAAW,CAAAqC;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}