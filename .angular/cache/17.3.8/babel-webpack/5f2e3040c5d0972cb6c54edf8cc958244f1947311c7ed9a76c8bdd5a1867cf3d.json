{"ast":null,"code":"'use strict';\n\nvar firebase = require('@firebase/app');\nvar component = require('@firebase/component');\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _a;\nvar ERRORS = (_a = {}, _a[\"already-activated\" /* ALREADY_ACTIVATED */] = 'You are trying to activate AppCheck for FirebaseApp {$appName}, ' + 'while it is already activated. ' + 'AppCheck can only be activated once.', _a[\"use-before-activation\" /* USE_BEFORE_ACTIVATION */] = 'AppCheck is being used before activate() is called for FirebaseApp {$appName}. ' + 'Please make sure you call activate() before instantiating other Firebase services.', _a[\"fetch-network-error\" /* FETCH_NETWORK_ERROR */] = 'Fetch failed to connect to a network. Check Internet connection. ' + 'Original error: {$originalErrorMessage}.', _a[\"fetch-parse-error\" /* FETCH_PARSE_ERROR */] = 'Fetch client could not parse response.' + ' Original error: {$originalErrorMessage}.', _a[\"fetch-status-error\" /* FETCH_STATUS_ERROR */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.', _a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.', _a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.', _a[\"storage-set\" /* STORAGE_WRITE */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.', _a[\"recaptcha-error\" /* RECAPTCHA_ERROR */] = 'ReCAPTCHA error.', _a);\nvar ERROR_FACTORY = new util.ErrorFactory('appCheck', 'AppCheck', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar APP_CHECK_STATES = new Map();\nvar DEFAULT_STATE = {\n  activated: false,\n  tokenObservers: []\n};\nvar DEBUG_STATE = {\n  enabled: false\n};\nfunction getState(app) {\n  return APP_CHECK_STATES.get(app) || DEFAULT_STATE;\n}\nfunction setState(app, state) {\n  APP_CHECK_STATES.set(app, state);\n}\nfunction getDebugState() {\n  return DEBUG_STATE;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar BASE_ENDPOINT = 'https://content-firebaseappcheck.googleapis.com/v1beta';\nvar EXCHANGE_RECAPTCHA_TOKEN_METHOD = 'exchangeRecaptchaToken';\nvar EXCHANGE_DEBUG_TOKEN_METHOD = 'exchangeDebugToken';\nvar TOKEN_REFRESH_TIME = {\n  /**\r\n   * The offset time before token natural expiration to run the refresh.\r\n   * This is currently 5 minutes.\r\n   */\n  OFFSET_DURATION: 5 * 60 * 1000,\n  /**\r\n   * This is the first retrial wait after an error. This is currently\r\n   * 30 seconds.\r\n   */\n  RETRIAL_MIN_WAIT: 30 * 1000,\n  /**\r\n   * This is the maximum retrial wait, currently 16 minutes.\r\n   */\n  RETRIAL_MAX_WAIT: 16 * 60 * 1000\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Port from auth proactiverefresh.js\r\n *\r\n */\n// TODO: move it to @firebase/util?\n// TODO: allow to config whether refresh should happen in the background\nvar Refresher = /** @class */function () {\n  function Refresher(operation, retryPolicy, getWaitDuration, lowerBound, upperBound) {\n    this.operation = operation;\n    this.retryPolicy = retryPolicy;\n    this.getWaitDuration = getWaitDuration;\n    this.lowerBound = lowerBound;\n    this.upperBound = upperBound;\n    this.pending = null;\n    this.nextErrorWaitInterval = lowerBound;\n    if (lowerBound > upperBound) {\n      throw new Error('Proactive refresh lower bound greater than upper bound!');\n    }\n  }\n  Refresher.prototype.start = function () {\n    this.nextErrorWaitInterval = this.lowerBound;\n    this.process(true).catch(function () {\n      /* we don't care about the result */\n    });\n  };\n  Refresher.prototype.stop = function () {\n    if (this.pending) {\n      this.pending.reject('cancelled');\n      this.pending = null;\n    }\n  };\n  Refresher.prototype.isRunning = function () {\n    return !!this.pending;\n  };\n  Refresher.prototype.process = function (hasSucceeded) {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var error_1;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            this.stop();\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n            this.pending = new util.Deferred();\n            return [4 /*yield*/, sleep(this.getNextRun(hasSucceeded))];\n          case 2:\n            _a.sent();\n            // Why do we resolve a promise, then immediate wait for it?\n            // We do it to make the promise chain cancellable.\n            // We can call stop() which rejects the promise before the following line execute, which makes\n            // the code jump to the catch block.\n            // TODO: unit test this\n            this.pending.resolve();\n            return [4 /*yield*/, this.pending.promise];\n          case 3:\n            _a.sent();\n            this.pending = new util.Deferred();\n            return [4 /*yield*/, this.operation()];\n          case 4:\n            _a.sent();\n            this.pending.resolve();\n            return [4 /*yield*/, this.pending.promise];\n          case 5:\n            _a.sent();\n            this.process(true).catch(function () {\n              /* we don't care about the result */\n            });\n            return [3 /*break*/, 7];\n          case 6:\n            error_1 = _a.sent();\n            if (this.retryPolicy(error_1)) {\n              this.process(false).catch(function () {\n                /* we don't care about the result */\n              });\n            } else {\n              this.stop();\n            }\n            return [3 /*break*/, 7];\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  Refresher.prototype.getNextRun = function (hasSucceeded) {\n    if (hasSucceeded) {\n      // If last operation succeeded, reset next error wait interval and return\n      // the default wait duration.\n      this.nextErrorWaitInterval = this.lowerBound;\n      // Return typical wait duration interval after a successful operation.\n      return this.getWaitDuration();\n    } else {\n      // Get next error wait interval.\n      var currentErrorWaitInterval = this.nextErrorWaitInterval;\n      // Double interval for next consecutive error.\n      this.nextErrorWaitInterval *= 2;\n      // Make sure next wait interval does not exceed the maximum upper bound.\n      if (this.nextErrorWaitInterval > this.upperBound) {\n        this.nextErrorWaitInterval = this.upperBound;\n      }\n      return currentErrorWaitInterval;\n    }\n  };\n  return Refresher;\n}();\nfunction sleep(ms) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction getRecaptcha() {\n  return self.grecaptcha;\n}\nfunction ensureActivated(app) {\n  if (!getState(app).activated) {\n    throw ERROR_FACTORY.create(\"use-before-activation\" /* USE_BEFORE_ACTIVATION */, {\n      appName: app.name\n    });\n  }\n}\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n */\nfunction uuidv4() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16 | 0,\n      v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n}\n/**\r\n * Stringify and base64 encode token error data.\r\n *\r\n * @param tokenError Error data, currently hardcoded.\r\n */\nfunction formatDummyToken(tokenErrorData) {\n  return util.base64.encodeString(JSON.stringify(tokenErrorData), /* webSafe= */false);\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction exchangeToken(_a, platformLoggerProvider) {\n  var url = _a.url,\n    body = _a.body;\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var headers, platformLogger, options, response, originalError_1, responseBody, originalError_2, match, timeToLiveAsNumber, now;\n    return tslib.__generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          headers = {\n            'Content-Type': 'application/json'\n          };\n          platformLogger = platformLoggerProvider.getImmediate({\n            optional: true\n          });\n          if (platformLogger) {\n            headers['X-Firebase-Client'] = platformLogger.getPlatformInfoString();\n          }\n          options = {\n            method: 'POST',\n            body: JSON.stringify(body),\n            headers: headers\n          };\n          _b.label = 1;\n        case 1:\n          _b.trys.push([1, 3,, 4]);\n          return [4 /*yield*/, fetch(url, options)];\n        case 2:\n          response = _b.sent();\n          return [3 /*break*/, 4];\n        case 3:\n          originalError_1 = _b.sent();\n          throw ERROR_FACTORY.create(\"fetch-network-error\" /* FETCH_NETWORK_ERROR */, {\n            originalErrorMessage: originalError_1.message\n          });\n        case 4:\n          if (response.status !== 200) {\n            throw ERROR_FACTORY.create(\"fetch-status-error\" /* FETCH_STATUS_ERROR */, {\n              httpStatus: response.status\n            });\n          }\n          _b.label = 5;\n        case 5:\n          _b.trys.push([5, 7,, 8]);\n          return [4 /*yield*/, response.json()];\n        case 6:\n          // JSON parsing throws SyntaxError if the response body isn't a JSON string.\n          responseBody = _b.sent();\n          return [3 /*break*/, 8];\n        case 7:\n          originalError_2 = _b.sent();\n          throw ERROR_FACTORY.create(\"fetch-parse-error\" /* FETCH_PARSE_ERROR */, {\n            originalErrorMessage: originalError_2.message\n          });\n        case 8:\n          match = responseBody.ttl.match(/^([\\d.]+)(s)$/);\n          if (!match || !match[2] || isNaN(Number(match[1]))) {\n            throw ERROR_FACTORY.create(\"fetch-parse-error\" /* FETCH_PARSE_ERROR */, {\n              originalErrorMessage: \"ttl field (timeToLive) is not in standard Protobuf Duration \" + (\"format: \" + responseBody.ttl)\n            });\n          }\n          timeToLiveAsNumber = Number(match[1]) * 1000;\n          now = Date.now();\n          return [2 /*return*/, {\n            token: responseBody.attestationToken,\n            expireTimeMillis: now + timeToLiveAsNumber,\n            issuedAtTimeMillis: now\n          }];\n      }\n    });\n  });\n}\nfunction getExchangeRecaptchaTokenRequest(app, reCAPTCHAToken) {\n  var _a = app.options,\n    projectId = _a.projectId,\n    appId = _a.appId,\n    apiKey = _a.apiKey;\n  return {\n    url: BASE_ENDPOINT + \"/projects/\" + projectId + \"/apps/\" + appId + \":\" + EXCHANGE_RECAPTCHA_TOKEN_METHOD + \"?key=\" + apiKey,\n    body: {\n      // eslint-disable-next-line\n      recaptcha_token: reCAPTCHAToken\n    }\n  };\n}\nfunction getExchangeDebugTokenRequest(app, debugToken) {\n  var _a = app.options,\n    projectId = _a.projectId,\n    appId = _a.appId,\n    apiKey = _a.apiKey;\n  return {\n    url: BASE_ENDPOINT + \"/projects/\" + projectId + \"/apps/\" + appId + \":\" + EXCHANGE_DEBUG_TOKEN_METHOD + \"?key=\" + apiKey,\n    body: {\n      // eslint-disable-next-line\n      debug_token: debugToken\n    }\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DB_NAME = 'firebase-app-check-database';\nvar DB_VERSION = 1;\nvar STORE_NAME = 'firebase-app-check-store';\nvar DEBUG_TOKEN_KEY = 'debug-token';\nvar dbPromise = null;\nfunction getDBPromise() {\n  if (dbPromise) {\n    return dbPromise;\n  }\n  dbPromise = new Promise(function (resolve, reject) {\n    try {\n      var request = indexedDB.open(DB_NAME, DB_VERSION);\n      request.onsuccess = function (event) {\n        resolve(event.target.result);\n      };\n      request.onerror = function (event) {\n        var _a;\n        reject(ERROR_FACTORY.create(\"storage-open\" /* STORAGE_OPEN */, {\n          originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n        }));\n      };\n      request.onupgradeneeded = function (event) {\n        var db = event.target.result;\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (event.oldVersion) {\n          case 0:\n            db.createObjectStore(STORE_NAME, {\n              keyPath: 'compositeKey'\n            });\n        }\n      };\n    } catch (e) {\n      reject(ERROR_FACTORY.create(\"storage-open\" /* STORAGE_OPEN */, {\n        originalErrorMessage: e.message\n      }));\n    }\n  });\n  return dbPromise;\n}\nfunction readTokenFromIndexedDB(app) {\n  return read(computeKey(app));\n}\nfunction writeTokenToIndexedDB(app, token) {\n  return write(computeKey(app), token);\n}\nfunction writeDebugTokenToIndexedDB(token) {\n  return write(DEBUG_TOKEN_KEY, token);\n}\nfunction readDebugTokenFromIndexedDB() {\n  return read(DEBUG_TOKEN_KEY);\n}\nfunction write(key, value) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var db, transaction, store, request;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, getDBPromise()];\n        case 1:\n          db = _a.sent();\n          transaction = db.transaction(STORE_NAME, 'readwrite');\n          store = transaction.objectStore(STORE_NAME);\n          request = store.put({\n            compositeKey: key,\n            value: value\n          });\n          return [2 /*return*/, new Promise(function (resolve, reject) {\n            request.onsuccess = function (_event) {\n              resolve();\n            };\n            transaction.onerror = function (event) {\n              var _a;\n              reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_WRITE */, {\n                originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n              }));\n            };\n          })];\n      }\n    });\n  });\n}\nfunction read(key) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var db, transaction, store, request;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, getDBPromise()];\n        case 1:\n          db = _a.sent();\n          transaction = db.transaction(STORE_NAME, 'readonly');\n          store = transaction.objectStore(STORE_NAME);\n          request = store.get(key);\n          return [2 /*return*/, new Promise(function (resolve, reject) {\n            request.onsuccess = function (event) {\n              var result = event.target.result;\n              if (result) {\n                resolve(result.value);\n              } else {\n                resolve(undefined);\n              }\n            };\n            transaction.onerror = function (event) {\n              var _a;\n              reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\n                originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\n              }));\n            };\n          })];\n      }\n    });\n  });\n}\nfunction computeKey(app) {\n  return app.options.appId + \"-\" + app.name;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar logger = new logger$1.Logger('@firebase/app-check');\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Always resolves. In case of an error reading from indexeddb, resolve with undefined\r\n */\nfunction readTokenFromStorage(app) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var token, e_1;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!util.isIndexedDBAvailable()) return [3 /*break*/, 5];\n          token = undefined;\n          _a.label = 1;\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n          return [4 /*yield*/, readTokenFromIndexedDB(app)];\n        case 2:\n          token = _a.sent();\n          return [3 /*break*/, 4];\n        case 3:\n          e_1 = _a.sent();\n          // swallow the error and return undefined\n          logger.warn(\"Failed to read token from indexeddb. Error: \" + e_1);\n          return [3 /*break*/, 4];\n        case 4:\n          return [2 /*return*/, token];\n        case 5:\n          return [2 /*return*/, undefined];\n      }\n    });\n  });\n}\n/**\r\n * Always resolves. In case of an error writing to indexeddb, print a warning and resolve the promise\r\n */\nfunction writeTokenToStorage(app, token) {\n  if (util.isIndexedDBAvailable()) {\n    return writeTokenToIndexedDB(app, token).catch(function (e) {\n      // swallow the error and resolve the promise\n      logger.warn(\"Failed to write token to indexeddb. Error: \" + e);\n    });\n  }\n  return Promise.resolve();\n}\nfunction readOrCreateDebugTokenFromStorage() {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var existingDebugToken, newToken;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          existingDebugToken = undefined;\n          _a.label = 1;\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n          return [4 /*yield*/, readDebugTokenFromIndexedDB()];\n        case 2:\n          existingDebugToken = _a.sent();\n          return [3 /*break*/, 4];\n        case 3:\n          _a.sent();\n          return [3 /*break*/, 4];\n        case 4:\n          if (!existingDebugToken) {\n            newToken = uuidv4();\n            // We don't need to block on writing to indexeddb\n            // In case persistence failed, a new debug token will be generated everytime the page is refreshed.\n            // It renders the debug token useless because you have to manually register(whitelist) the new token in the firebase console again and again.\n            // If you see this error trying to use debug token, it probably means you are using a browser that doesn't support indexeddb.\n            // You should switch to a different browser that supports indexeddb\n            writeDebugTokenToIndexedDB(newToken).catch(function (e) {\n              return logger.warn(\"Failed to persist debug token to indexeddb. Error: \" + e);\n            });\n            // Not using logger because I don't think we ever want this accidentally hidden?\n            console.log(\"AppCheck debug token: \" + newToken + \". You will need to whitelist it in the Firebase console for it to work\");\n            return [2 /*return*/, newToken];\n          } else {\n            return [2 /*return*/, existingDebugToken];\n          }\n      }\n    });\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction isDebugMode() {\n  var debugState = getDebugState();\n  return debugState.enabled;\n}\nfunction getDebugToken() {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var state;\n    return tslib.__generator(this, function (_a) {\n      state = getDebugState();\n      if (state.enabled && state.token) {\n        return [2 /*return*/, state.token.promise];\n      } else {\n        // should not happen!\n        throw Error(\"\\n            Can't get debug token in production mode.\\n        \");\n      }\n    });\n  });\n}\nfunction initializeDebugMode() {\n  var globals = util.getGlobal();\n  if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== 'string' && globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== true) {\n    return;\n  }\n  var debugState = getDebugState();\n  debugState.enabled = true;\n  var deferredToken = new util.Deferred();\n  debugState.token = deferredToken;\n  if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN === 'string') {\n    deferredToken.resolve(globals.FIREBASE_APPCHECK_DEBUG_TOKEN);\n  } else {\n    deferredToken.resolve(readOrCreateDebugTokenFromStorage());\n  }\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// Initial hardcoded value agreed upon across platforms for initial launch.\n// Format left open for possible dynamic error values and other fields in the future.\nvar defaultTokenErrorData = {\n  error: 'UNKNOWN_ERROR'\n};\n/**\r\n * This function will always resolve.\r\n * The result will contain an error field if there is any error.\r\n * In case there is an error, the token field in the result will be populated with a dummy value\r\n */\nfunction getToken$2(app, platformLoggerProvider, forceRefresh) {\n  if (forceRefresh === void 0) {\n    forceRefresh = false;\n  }\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var state, token, error, cachedToken, tokenFromDebugExchange, _a, _b, _c, e_1, interopTokenResult;\n    return tslib.__generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          ensureActivated(app);\n          state = getState(app);\n          token = state.token;\n          error = undefined;\n          if (!!token) return [3 /*break*/, 2];\n          return [4 /*yield*/, state.cachedTokenPromise];\n        case 1:\n          cachedToken = _d.sent();\n          if (cachedToken && isValid(cachedToken)) {\n            token = cachedToken;\n            setState(app, tslib.__assign(tslib.__assign({}, state), {\n              token: token\n            }));\n            // notify all listeners with the cached token\n            notifyTokenListeners(app, {\n              token: token.token\n            });\n          }\n          _d.label = 2;\n        case 2:\n          // Return the cached token (from either memory or indexedDB) if it's valid\n          if (!forceRefresh && token && isValid(token)) {\n            return [2 /*return*/, {\n              token: token.token\n            }];\n          }\n          if (!isDebugMode()) return [3 /*break*/, 6];\n          _a = exchangeToken;\n          _b = getExchangeDebugTokenRequest;\n          _c = [app];\n          return [4 /*yield*/, getDebugToken()];\n        case 3:\n          return [4 /*yield*/, _a.apply(void 0, [_b.apply(void 0, _c.concat([_d.sent()])), platformLoggerProvider])];\n        case 4:\n          tokenFromDebugExchange = _d.sent();\n          // Write debug token to indexedDB.\n          return [4 /*yield*/, writeTokenToStorage(app, tokenFromDebugExchange)];\n        case 5:\n          // Write debug token to indexedDB.\n          _d.sent();\n          // Write debug token to state.\n          setState(app, tslib.__assign(tslib.__assign({}, state), {\n            token: tokenFromDebugExchange\n          }));\n          return [2 /*return*/, {\n            token: tokenFromDebugExchange.token\n          }];\n        case 6:\n          _d.trys.push([6, 8,, 9]);\n          return [4 /*yield*/, state.provider.getToken()];\n        case 7:\n          // state.provider is populated in initializeAppCheck()\n          // ensureActivated() at the top of this function checks that\n          // initializeAppCheck() has been called.\n          token = _d.sent();\n          return [3 /*break*/, 9];\n        case 8:\n          e_1 = _d.sent();\n          // `getToken()` should never throw, but logging error text to console will aid debugging.\n          logger.error(e_1);\n          error = e_1;\n          return [3 /*break*/, 9];\n        case 9:\n          if (!!token) return [3 /*break*/, 10];\n          // if token is undefined, there must be an error.\n          // we return a dummy token along with the error\n          interopTokenResult = makeDummyTokenResult(error);\n          return [3 /*break*/, 12];\n        case 10:\n          interopTokenResult = {\n            token: token.token\n          };\n          // write the new token to the memory state as well as the persistent storage.\n          // Only do it if we got a valid new token\n          setState(app, tslib.__assign(tslib.__assign({}, state), {\n            token: token\n          }));\n          return [4 /*yield*/, writeTokenToStorage(app, token)];\n        case 11:\n          _d.sent();\n          _d.label = 12;\n        case 12:\n          notifyTokenListeners(app, interopTokenResult);\n          return [2 /*return*/, interopTokenResult];\n      }\n    });\n  });\n}\nfunction addTokenListener(app, platformLoggerProvider, type, listener, onError) {\n  var state = getState(app);\n  var tokenListener = {\n    next: listener,\n    error: onError,\n    type: type\n  };\n  var newState = tslib.__assign(tslib.__assign({}, state), {\n    tokenObservers: tslib.__spreadArray(tslib.__spreadArray([], state.tokenObservers), [tokenListener])\n  });\n  /**\r\n   * Invoke the listener with the valid token, then start the token refresher\r\n   */\n  if (!newState.tokenRefresher) {\n    var tokenRefresher = createTokenRefresher(app, platformLoggerProvider);\n    newState.tokenRefresher = tokenRefresher;\n  }\n  // Create the refresher but don't start it if `isTokenAutoRefreshEnabled`\n  // is not true.\n  if (!newState.tokenRefresher.isRunning() && state.isTokenAutoRefreshEnabled) {\n    newState.tokenRefresher.start();\n  }\n  // Invoke the listener async immediately if there is a valid token\n  // in memory.\n  if (state.token && isValid(state.token)) {\n    var validToken_1 = state.token;\n    Promise.resolve().then(function () {\n      return listener({\n        token: validToken_1.token\n      });\n    }).catch(function () {\n      /** Ignore errors in listeners. */\n    });\n  } else if (state.token == null) {\n    // Only check cache if there was no token. If the token was invalid,\n    // skip this and rely on exchange endpoint.\n    void state.cachedTokenPromise // Storage token promise. Always populated in `activate()`.\n    .then(function (cachedToken) {\n      if (cachedToken && isValid(cachedToken)) {\n        listener({\n          token: cachedToken.token\n        });\n      }\n    }).catch(function () {\n      /** Ignore errors in listeners. */\n    });\n  }\n  setState(app, newState);\n}\nfunction removeTokenListener(app, listener) {\n  var state = getState(app);\n  var newObservers = state.tokenObservers.filter(function (tokenObserver) {\n    return tokenObserver.next !== listener;\n  });\n  if (newObservers.length === 0 && state.tokenRefresher && state.tokenRefresher.isRunning()) {\n    state.tokenRefresher.stop();\n  }\n  setState(app, tslib.__assign(tslib.__assign({}, state), {\n    tokenObservers: newObservers\n  }));\n}\nfunction createTokenRefresher(app, platformLoggerProvider) {\n  var _this = this;\n  return new Refresher(\n  // Keep in mind when this fails for any reason other than the ones\n  // for which we should retry, it will effectively stop the proactive refresh.\n  function () {\n    return tslib.__awaiter(_this, void 0, void 0, function () {\n      var state, result;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            state = getState(app);\n            if (!!state.token) return [3 /*break*/, 2];\n            return [4 /*yield*/, getToken$2(app, platformLoggerProvider)];\n          case 1:\n            result = _a.sent();\n            return [3 /*break*/, 4];\n          case 2:\n            return [4 /*yield*/, getToken$2(app, platformLoggerProvider, true)];\n          case 3:\n            result = _a.sent();\n            _a.label = 4;\n          case 4:\n            // getToken() always resolves. In case the result has an error field defined, it means the operation failed, and we should retry.\n            if (result.error) {\n              throw result.error;\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  }, function () {\n    // TODO: when should we retry?\n    return true;\n  }, function () {\n    var state = getState(app);\n    if (state.token) {\n      // issuedAtTime + (50% * total TTL) + 5 minutes\n      var nextRefreshTimeMillis = state.token.issuedAtTimeMillis + (state.token.expireTimeMillis - state.token.issuedAtTimeMillis) * 0.5 + 5 * 60 * 1000;\n      // Do not allow refresh time to be past (expireTime - 5 minutes)\n      var latestAllowableRefresh = state.token.expireTimeMillis - 5 * 60 * 1000;\n      nextRefreshTimeMillis = Math.min(nextRefreshTimeMillis, latestAllowableRefresh);\n      return Math.max(0, nextRefreshTimeMillis - Date.now());\n    } else {\n      return 0;\n    }\n  }, TOKEN_REFRESH_TIME.RETRIAL_MIN_WAIT, TOKEN_REFRESH_TIME.RETRIAL_MAX_WAIT);\n}\nfunction notifyTokenListeners(app, token) {\n  var observers = getState(app).tokenObservers;\n  for (var _i = 0, observers_1 = observers; _i < observers_1.length; _i++) {\n    var observer = observers_1[_i];\n    try {\n      if (observer.type === \"EXTERNAL\" /* EXTERNAL */ && token.error != null) {\n        // If this listener was added by a 3P call, send any token error to\n        // the supplied error handler. A 3P observer always has an error\n        // handler.\n        observer.error(token.error);\n      } else {\n        // If the token has no error field, always return the token.\n        // If this is a 2P listener, return the token, whether or not it\n        // has an error field.\n        observer.next(token);\n      }\n    } catch (ignored) {\n      // Errors in the listener function itself are always ignored.\n    }\n  }\n}\nfunction isValid(token) {\n  return token.expireTimeMillis - Date.now() > 0;\n}\nfunction makeDummyTokenResult(error) {\n  return {\n    token: formatDummyToken(defaultTokenErrorData),\n    error: error\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar RECAPTCHA_URL = 'https://www.google.com/recaptcha/api.js';\nfunction initialize(app, siteKey) {\n  var state = getState(app);\n  var initialized = new util.Deferred();\n  setState(app, tslib.__assign(tslib.__assign({}, state), {\n    reCAPTCHAState: {\n      initialized: initialized\n    }\n  }));\n  var divId = \"fire_app_check_\" + app.name;\n  var invisibleDiv = document.createElement('div');\n  invisibleDiv.id = divId;\n  invisibleDiv.style.display = 'none';\n  document.body.appendChild(invisibleDiv);\n  var grecaptcha = getRecaptcha();\n  if (!grecaptcha) {\n    loadReCAPTCHAScript(function () {\n      var grecaptcha = getRecaptcha();\n      if (!grecaptcha) {\n        // it shouldn't happen.\n        throw new Error('no recaptcha');\n      }\n      grecaptcha.ready(function () {\n        // Invisible widgets allow us to set a different siteKey for each widget, so we use them to support multiple apps\n        renderInvisibleWidget(app, siteKey, grecaptcha, divId);\n        initialized.resolve(grecaptcha);\n      });\n    });\n  } else {\n    grecaptcha.ready(function () {\n      renderInvisibleWidget(app, siteKey, grecaptcha, divId);\n      initialized.resolve(grecaptcha);\n    });\n  }\n  return initialized.promise;\n}\nfunction getToken$1(app) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var reCAPTCHAState, recaptcha;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          ensureActivated(app);\n          reCAPTCHAState = getState(app).reCAPTCHAState;\n          return [4 /*yield*/, reCAPTCHAState.initialized.promise];\n        case 1:\n          recaptcha = _a.sent();\n          return [2 /*return*/, new Promise(function (resolve, _reject) {\n            // Updated after initialization is complete.\n            var reCAPTCHAState = getState(app).reCAPTCHAState;\n            recaptcha.ready(function () {\n              resolve(\n              // widgetId is guaranteed to be available if reCAPTCHAState.initialized.promise resolved.\n              recaptcha.execute(reCAPTCHAState.widgetId, {\n                action: 'fire_app_check'\n              }));\n            });\n          })];\n      }\n    });\n  });\n}\n/**\r\n *\r\n * @param app\r\n * @param container - Id of a HTML element.\r\n */\nfunction renderInvisibleWidget(app, siteKey, grecaptcha, container) {\n  var widgetId = grecaptcha.render(container, {\n    sitekey: siteKey,\n    size: 'invisible'\n  });\n  var state = getState(app);\n  setState(app, tslib.__assign(tslib.__assign({}, state), {\n    reCAPTCHAState: tslib.__assign(tslib.__assign({}, state.reCAPTCHAState), {\n      // state.reCAPTCHAState is set in the initialize()\n      widgetId: widgetId\n    })\n  }));\n}\nfunction loadReCAPTCHAScript(onload) {\n  var script = document.createElement('script');\n  script.src = \"\" + RECAPTCHA_URL;\n  script.onload = onload;\n  document.head.appendChild(script);\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * App Check provider that can obtain a reCAPTCHA V3 token and exchange it\r\n * for an App Check token.\r\n */\nvar ReCaptchaV3Provider = /** @class */function () {\n  /**\r\n   * Create a ReCaptchaV3Provider instance.\r\n   * @param siteKey - ReCAPTCHA V3 siteKey.\r\n   */\n  function ReCaptchaV3Provider(_siteKey) {\n    this._siteKey = _siteKey;\n  }\n  /**\r\n   * Returns an App Check token.\r\n   * @internal\r\n   */\n  ReCaptchaV3Provider.prototype.getToken = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var attestedClaimsToken;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._app || !this._platformLoggerProvider) {\n              // This should only occur if user has not called initializeAppCheck().\n              // We don't have an appName to provide if so.\n              // This should already be caught in the top level `getToken()` function.\n              throw ERROR_FACTORY.create(\"use-before-activation\" /* USE_BEFORE_ACTIVATION */, {\n                appName: ''\n              });\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, getToken$1(this._app)];\n          case 2:\n            attestedClaimsToken = _a.sent();\n            return [3 /*break*/, 4];\n          case 3:\n            _a.sent();\n            // reCaptcha.execute() throws null which is not very descriptive.\n            throw ERROR_FACTORY.create(\"recaptcha-error\" /* RECAPTCHA_ERROR */);\n          case 4:\n            return [2 /*return*/, exchangeToken(getExchangeRecaptchaTokenRequest(this._app, attestedClaimsToken), this._platformLoggerProvider)];\n        }\n      });\n    });\n  };\n  ReCaptchaV3Provider.prototype.initialize = function (app, platformLoggerProvider) {\n    this._app = app;\n    this._platformLoggerProvider = platformLoggerProvider;\n    initialize(app, this._siteKey).catch(function () {\n      /* we don't care about the initialization result */\n    });\n  };\n  return ReCaptchaV3Provider;\n}();\n/**\r\n * Custom provider class.\r\n */\nvar CustomProvider = /** @class */function () {\n  function CustomProvider(_customProviderOptions) {\n    this._customProviderOptions = _customProviderOptions;\n  }\n  /**\r\n   * @internal\r\n   */\n  CustomProvider.prototype.getToken = function () {\n    return tslib.__awaiter(this, void 0, void 0, function () {\n      var customToken, issuedAtTimeSeconds, issuedAtTimeMillis;\n      return tslib.__generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this._app) {\n              // This should only occur if user has not called initializeAppCheck().\n              // We don't have an appName to provide if so.\n              // This should already be caught in the top level `getToken()` function.\n              throw ERROR_FACTORY.create(\"use-before-activation\" /* USE_BEFORE_ACTIVATION */, {\n                appName: ''\n              });\n            }\n            return [4 /*yield*/, this._customProviderOptions.getToken()];\n          case 1:\n            customToken = _a.sent();\n            issuedAtTimeSeconds = util.issuedAtTime(customToken.token);\n            issuedAtTimeMillis = issuedAtTimeSeconds !== null && issuedAtTimeSeconds < Date.now() && issuedAtTimeSeconds > 0 ? issuedAtTimeSeconds * 1000 : Date.now();\n            return [2 /*return*/, tslib.__assign(tslib.__assign({}, customToken), {\n              issuedAtTimeMillis: issuedAtTimeMillis\n            })];\n        }\n      });\n    });\n  };\n  /**\r\n   * @internal\r\n   */\n  CustomProvider.prototype.initialize = function (app) {\n    this._app = app;\n  };\n  return CustomProvider;\n}();\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n *\r\n * @param app\r\n * @param siteKeyOrProvider - optional custom attestation provider\r\n * or reCAPTCHA provider\r\n * @param isTokenAutoRefreshEnabled - if true, enables auto refresh\r\n * of appCheck token.\r\n */\nfunction activate(app, siteKeyOrProvider, platformLoggerProvider, isTokenAutoRefreshEnabled) {\n  var state = getState(app);\n  if (state.activated) {\n    throw ERROR_FACTORY.create(\"already-activated\" /* ALREADY_ACTIVATED */, {\n      appName: app.name\n    });\n  }\n  var newState = tslib.__assign(tslib.__assign({}, state), {\n    activated: true\n  });\n  // Read cached token from storage if it exists and store it in memory.\n  newState.cachedTokenPromise = readTokenFromStorage(app).then(function (cachedToken) {\n    if (cachedToken && isValid(cachedToken)) {\n      setState(app, tslib.__assign(tslib.__assign({}, getState(app)), {\n        token: cachedToken\n      }));\n    }\n    return cachedToken;\n  });\n  if (typeof siteKeyOrProvider === 'string') {\n    newState.provider = new ReCaptchaV3Provider(siteKeyOrProvider);\n  } else if (siteKeyOrProvider instanceof ReCaptchaV3Provider || siteKeyOrProvider instanceof CustomProvider) {\n    newState.provider = siteKeyOrProvider;\n  } else {\n    // Process \"old\" custom provider to avoid breaking previous users.\n    // This was defined at beta release as simply an object with a\n    // getToken() method.\n    newState.provider = new CustomProvider({\n      getToken: siteKeyOrProvider.getToken\n    });\n  }\n  // Use value of global `automaticDataCollectionEnabled` (which\n  // itself defaults to false if not specified in config) if\n  // `isTokenAutoRefreshEnabled` param was not provided by user.\n  newState.isTokenAutoRefreshEnabled = isTokenAutoRefreshEnabled === undefined ? app.automaticDataCollectionEnabled : isTokenAutoRefreshEnabled;\n  setState(app, newState);\n  newState.provider.initialize(app, platformLoggerProvider);\n}\nfunction setTokenAutoRefreshEnabled(app, isTokenAutoRefreshEnabled) {\n  var state = getState(app);\n  // This will exist if any product libraries have called\n  // `addTokenListener()`\n  if (state.tokenRefresher) {\n    if (isTokenAutoRefreshEnabled === true) {\n      state.tokenRefresher.start();\n    } else {\n      state.tokenRefresher.stop();\n    }\n  }\n  setState(app, tslib.__assign(tslib.__assign({}, state), {\n    isTokenAutoRefreshEnabled: isTokenAutoRefreshEnabled\n  }));\n}\n/**\r\n * Differs from internal getToken in that it throws the error.\r\n */\nfunction getToken(app, platformLoggerProvider, forceRefresh) {\n  return tslib.__awaiter(this, void 0, void 0, function () {\n    var result;\n    return tslib.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, getToken$2(app, platformLoggerProvider, forceRefresh)];\n        case 1:\n          result = _a.sent();\n          if (result.error) {\n            throw result.error;\n          }\n          return [2 /*return*/, {\n            token: result.token\n          }];\n      }\n    });\n  });\n}\nfunction onTokenChanged(app, platformLoggerProvider, onNextOrObserver, onError,\n/**\r\n * NOTE: Although an `onCompletion` callback can be provided, it will\r\n * never be called because the token stream is never-ending.\r\n * It is added only for API consistency with the observer pattern, which\r\n * we follow in JS APIs.\r\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nonCompletion) {\n  var nextFn = function () {};\n  var errorFn = function () {};\n  if (onNextOrObserver.next != null) {\n    nextFn = onNextOrObserver.next.bind(onNextOrObserver);\n  } else {\n    nextFn = onNextOrObserver;\n  }\n  if (onNextOrObserver.error != null) {\n    errorFn = onNextOrObserver.error.bind(onNextOrObserver);\n  } else if (onError) {\n    errorFn = onError;\n  }\n  addTokenListener(app, platformLoggerProvider, \"EXTERNAL\" /* EXTERNAL */, nextFn, errorFn);\n  return function () {\n    return removeTokenListener(app, nextFn);\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction factory(app, platformLoggerProvider) {\n  return {\n    app: app,\n    activate: function (siteKeyOrProvider, isTokenAutoRefreshEnabled) {\n      return activate(app,\n      // Public types of ReCaptchaV3Provider/CustomProvider don't\n      // expose getToken() and aren't recognized as the internal\n      // class version of themselves.\n      siteKeyOrProvider, platformLoggerProvider, isTokenAutoRefreshEnabled);\n    },\n    setTokenAutoRefreshEnabled: function (isTokenAutoRefreshEnabled) {\n      return setTokenAutoRefreshEnabled(app, isTokenAutoRefreshEnabled);\n    },\n    getToken: function (forceRefresh) {\n      return getToken(app, platformLoggerProvider, forceRefresh);\n    },\n    onTokenChanged: function (onNextOrObserver, onError, onCompletion) {\n      return onTokenChanged(app, platformLoggerProvider,\n      /**\r\n       * This can still be an observer. Need to do this casting because\r\n       * according to Typescript: \"Implementation signatures of overloads\r\n       * are not externally visible\"\r\n       */\n      onNextOrObserver, onError);\n    },\n    INTERNAL: {\n      delete: function () {\n        var tokenObservers = getState(app).tokenObservers;\n        for (var _i = 0, tokenObservers_1 = tokenObservers; _i < tokenObservers_1.length; _i++) {\n          var tokenObserver = tokenObservers_1[_i];\n          removeTokenListener(app, tokenObserver.next);\n        }\n        return Promise.resolve();\n      }\n    }\n  };\n}\nfunction internalFactory(app, platformLoggerProvider) {\n  return {\n    getToken: function (forceRefresh) {\n      return getToken$2(app, platformLoggerProvider, forceRefresh);\n    },\n    addTokenListener: function (listener) {\n      return addTokenListener(app, platformLoggerProvider, \"INTERNAL\" /* INTERNAL */, listener);\n    },\n    removeTokenListener: function (listener) {\n      return removeTokenListener(app, listener);\n    }\n  };\n}\nvar name = \"@firebase/app-check\";\nvar version = \"0.3.2\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar APP_CHECK_NAME = 'appCheck';\nvar APP_CHECK_NAME_INTERNAL = 'app-check-internal';\nfunction registerAppCheck(firebase) {\n  // The public interface\n  firebase.INTERNAL.registerComponent(new component.Component(APP_CHECK_NAME, function (container) {\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var platformLoggerProvider = container.getProvider('platform-logger');\n    return factory(app, platformLoggerProvider);\n  }, \"PUBLIC\" /* PUBLIC */).setServiceProps({\n    ReCaptchaV3Provider: ReCaptchaV3Provider,\n    CustomProvider: CustomProvider\n  })\n  /**\r\n   * AppCheck can only be initialized by explicitly calling firebase.appCheck()\r\n   * We don't want firebase products that consume AppCheck to gate on AppCheck\r\n   * if the user doesn't intend them to, just because the AppCheck component\r\n   * is registered.\r\n   */.setInstantiationMode(\"EXPLICIT\" /* EXPLICIT */)\n  /**\r\n   * Because all firebase products that depend on app-check depend on app-check-internal directly,\r\n   * we need to initialize app-check-internal after app-check is initialized to make it\r\n   * available to other firebase products.\r\n   */.setInstanceCreatedCallback(function (container, _instanceIdentifier, _instance) {\n    var appCheckInternalProvider = container.getProvider(APP_CHECK_NAME_INTERNAL);\n    appCheckInternalProvider.initialize();\n  }));\n  // The internal interface used by other Firebase products\n  firebase.INTERNAL.registerComponent(new component.Component(APP_CHECK_NAME_INTERNAL, function (container) {\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    var platformLoggerProvider = container.getProvider('platform-logger');\n    return internalFactory(app, platformLoggerProvider);\n  }, \"PUBLIC\" /* PUBLIC */).setInstantiationMode(\"EXPLICIT\" /* EXPLICIT */));\n  firebase.registerVersion(name, version);\n}\nregisterAppCheck(firebase__default['default']);\ninitializeDebugMode();","map":{"version":3,"names":["firebase","require","component","tslib","util","logger$1","_interopDefaultLegacy","e","firebase__default","_a","ERRORS","ERROR_FACTORY","ErrorFactory","APP_CHECK_STATES","Map","DEFAULT_STATE","activated","tokenObservers","DEBUG_STATE","enabled","getState","app","get","setState","state","set","getDebugState","BASE_ENDPOINT","EXCHANGE_RECAPTCHA_TOKEN_METHOD","EXCHANGE_DEBUG_TOKEN_METHOD","TOKEN_REFRESH_TIME","OFFSET_DURATION","RETRIAL_MIN_WAIT","RETRIAL_MAX_WAIT","Refresher","operation","retryPolicy","getWaitDuration","lowerBound","upperBound","pending","nextErrorWaitInterval","Error","prototype","start","process","catch","stop","reject","isRunning","hasSucceeded","__awaiter","error_1","__generator","label","trys","push","Deferred","sleep","getNextRun","sent","resolve","promise","currentErrorWaitInterval","ms","Promise","setTimeout","getRecaptcha","self","grecaptcha","ensureActivated","create","appName","name","uuidv4","replace","c","r","Math","random","v","toString","formatDummyToken","tokenErrorData","base64","encodeString","JSON","stringify","exchangeToken","platformLoggerProvider","url","body","headers","platformLogger","options","response","originalError_1","responseBody","originalError_2","match","timeToLiveAsNumber","now","_b","getImmediate","optional","getPlatformInfoString","method","fetch","originalErrorMessage","message","status","httpStatus","json","ttl","isNaN","Number","Date","token","attestationToken","expireTimeMillis","issuedAtTimeMillis","getExchangeRecaptchaTokenRequest","reCAPTCHAToken","projectId","appId","apiKey","recaptcha_token","getExchangeDebugTokenRequest","debugToken","debug_token","DB_NAME","DB_VERSION","STORE_NAME","DEBUG_TOKEN_KEY","dbPromise","getDBPromise","request","indexedDB","open","onsuccess","event","target","result","onerror","error","onupgradeneeded","db","oldVersion","createObjectStore","keyPath","readTokenFromIndexedDB","read","computeKey","writeTokenToIndexedDB","write","writeDebugTokenToIndexedDB","readDebugTokenFromIndexedDB","key","value","transaction","store","objectStore","put","compositeKey","_event","undefined","logger","Logger","readTokenFromStorage","e_1","isIndexedDBAvailable","warn","writeTokenToStorage","readOrCreateDebugTokenFromStorage","existingDebugToken","newToken","console","log","isDebugMode","debugState","getDebugToken","initializeDebugMode","globals","getGlobal","FIREBASE_APPCHECK_DEBUG_TOKEN","deferredToken","defaultTokenErrorData","getToken$2","forceRefresh","cachedToken","tokenFromDebugExchange","_c","interopTokenResult","_d","cachedTokenPromise","isValid","__assign","notifyTokenListeners","apply","concat","provider","getToken","makeDummyTokenResult","addTokenListener","type","listener","onError","tokenListener","next","newState","__spreadArray","tokenRefresher","createTokenRefresher","isTokenAutoRefreshEnabled","validToken_1","then","removeTokenListener","newObservers","filter","tokenObserver","length","_this","nextRefreshTimeMillis","latestAllowableRefresh","min","max","observers","_i","observers_1","observer","ignored","RECAPTCHA_URL","initialize","siteKey","initialized","reCAPTCHAState","divId","invisibleDiv","document","createElement","id","style","display","appendChild","loadReCAPTCHAScript","ready","renderInvisibleWidget","getToken$1","recaptcha","_reject","execute","widgetId","action","container","render","sitekey","size","onload","script","src","head","ReCaptchaV3Provider","_siteKey","attestedClaimsToken","_app","_platformLoggerProvider","CustomProvider","_customProviderOptions","customToken","issuedAtTimeSeconds","issuedAtTime","activate","siteKeyOrProvider","automaticDataCollectionEnabled","setTokenAutoRefreshEnabled","onTokenChanged","onNextOrObserver","onCompletion","nextFn","errorFn","bind","factory","INTERNAL","delete","tokenObservers_1","internalFactory","version","APP_CHECK_NAME","APP_CHECK_NAME_INTERNAL","registerAppCheck","registerComponent","Component","getProvider","setServiceProps","setInstantiationMode","setInstanceCreatedCallback","_instanceIdentifier","_instance","appCheckInternalProvider","registerVersion"],"sources":["C:/Progect for learning/angular-blog/node_modules/@firebase/app-check/dist/index.cjs.js"],"sourcesContent":["'use strict';\n\nvar firebase = require('@firebase/app');\nvar component = require('@firebase/component');\nvar tslib = require('tslib');\nvar util = require('@firebase/util');\nvar logger$1 = require('@firebase/logger');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar firebase__default = /*#__PURE__*/_interopDefaultLegacy(firebase);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERRORS = (_a = {},\r\n    _a[\"already-activated\" /* ALREADY_ACTIVATED */] = 'You are trying to activate AppCheck for FirebaseApp {$appName}, ' +\r\n        'while it is already activated. ' +\r\n        'AppCheck can only be activated once.',\r\n    _a[\"use-before-activation\" /* USE_BEFORE_ACTIVATION */] = 'AppCheck is being used before activate() is called for FirebaseApp {$appName}. ' +\r\n        'Please make sure you call activate() before instantiating other Firebase services.',\r\n    _a[\"fetch-network-error\" /* FETCH_NETWORK_ERROR */] = 'Fetch failed to connect to a network. Check Internet connection. ' +\r\n        'Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-parse-error\" /* FETCH_PARSE_ERROR */] = 'Fetch client could not parse response.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-status-error\" /* FETCH_STATUS_ERROR */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\r\n    _a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-set\" /* STORAGE_WRITE */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"recaptcha-error\" /* RECAPTCHA_ERROR */] = 'ReCAPTCHA error.',\r\n    _a);\r\nvar ERROR_FACTORY = new util.ErrorFactory('appCheck', 'AppCheck', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar APP_CHECK_STATES = new Map();\r\nvar DEFAULT_STATE = {\r\n    activated: false,\r\n    tokenObservers: []\r\n};\r\nvar DEBUG_STATE = {\r\n    enabled: false\r\n};\r\nfunction getState(app) {\r\n    return APP_CHECK_STATES.get(app) || DEFAULT_STATE;\r\n}\r\nfunction setState(app, state) {\r\n    APP_CHECK_STATES.set(app, state);\r\n}\r\nfunction getDebugState() {\r\n    return DEBUG_STATE;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar BASE_ENDPOINT = 'https://content-firebaseappcheck.googleapis.com/v1beta';\r\nvar EXCHANGE_RECAPTCHA_TOKEN_METHOD = 'exchangeRecaptchaToken';\r\nvar EXCHANGE_DEBUG_TOKEN_METHOD = 'exchangeDebugToken';\r\nvar TOKEN_REFRESH_TIME = {\r\n    /**\r\n     * The offset time before token natural expiration to run the refresh.\r\n     * This is currently 5 minutes.\r\n     */\r\n    OFFSET_DURATION: 5 * 60 * 1000,\r\n    /**\r\n     * This is the first retrial wait after an error. This is currently\r\n     * 30 seconds.\r\n     */\r\n    RETRIAL_MIN_WAIT: 30 * 1000,\r\n    /**\r\n     * This is the maximum retrial wait, currently 16 minutes.\r\n     */\r\n    RETRIAL_MAX_WAIT: 16 * 60 * 1000\r\n};\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Port from auth proactiverefresh.js\r\n *\r\n */\r\n// TODO: move it to @firebase/util?\r\n// TODO: allow to config whether refresh should happen in the background\r\nvar Refresher = /** @class */ (function () {\r\n    function Refresher(operation, retryPolicy, getWaitDuration, lowerBound, upperBound) {\r\n        this.operation = operation;\r\n        this.retryPolicy = retryPolicy;\r\n        this.getWaitDuration = getWaitDuration;\r\n        this.lowerBound = lowerBound;\r\n        this.upperBound = upperBound;\r\n        this.pending = null;\r\n        this.nextErrorWaitInterval = lowerBound;\r\n        if (lowerBound > upperBound) {\r\n            throw new Error('Proactive refresh lower bound greater than upper bound!');\r\n        }\r\n    }\r\n    Refresher.prototype.start = function () {\r\n        this.nextErrorWaitInterval = this.lowerBound;\r\n        this.process(true).catch(function () {\r\n            /* we don't care about the result */\r\n        });\r\n    };\r\n    Refresher.prototype.stop = function () {\r\n        if (this.pending) {\r\n            this.pending.reject('cancelled');\r\n            this.pending = null;\r\n        }\r\n    };\r\n    Refresher.prototype.isRunning = function () {\r\n        return !!this.pending;\r\n    };\r\n    Refresher.prototype.process = function (hasSucceeded) {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var error_1;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        this.stop();\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 6, , 7]);\r\n                        this.pending = new util.Deferred();\r\n                        return [4 /*yield*/, sleep(this.getNextRun(hasSucceeded))];\r\n                    case 2:\r\n                        _a.sent();\r\n                        // Why do we resolve a promise, then immediate wait for it?\r\n                        // We do it to make the promise chain cancellable.\r\n                        // We can call stop() which rejects the promise before the following line execute, which makes\r\n                        // the code jump to the catch block.\r\n                        // TODO: unit test this\r\n                        this.pending.resolve();\r\n                        return [4 /*yield*/, this.pending.promise];\r\n                    case 3:\r\n                        _a.sent();\r\n                        this.pending = new util.Deferred();\r\n                        return [4 /*yield*/, this.operation()];\r\n                    case 4:\r\n                        _a.sent();\r\n                        this.pending.resolve();\r\n                        return [4 /*yield*/, this.pending.promise];\r\n                    case 5:\r\n                        _a.sent();\r\n                        this.process(true).catch(function () {\r\n                            /* we don't care about the result */\r\n                        });\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        error_1 = _a.sent();\r\n                        if (this.retryPolicy(error_1)) {\r\n                            this.process(false).catch(function () {\r\n                                /* we don't care about the result */\r\n                            });\r\n                        }\r\n                        else {\r\n                            this.stop();\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Refresher.prototype.getNextRun = function (hasSucceeded) {\r\n        if (hasSucceeded) {\r\n            // If last operation succeeded, reset next error wait interval and return\r\n            // the default wait duration.\r\n            this.nextErrorWaitInterval = this.lowerBound;\r\n            // Return typical wait duration interval after a successful operation.\r\n            return this.getWaitDuration();\r\n        }\r\n        else {\r\n            // Get next error wait interval.\r\n            var currentErrorWaitInterval = this.nextErrorWaitInterval;\r\n            // Double interval for next consecutive error.\r\n            this.nextErrorWaitInterval *= 2;\r\n            // Make sure next wait interval does not exceed the maximum upper bound.\r\n            if (this.nextErrorWaitInterval > this.upperBound) {\r\n                this.nextErrorWaitInterval = this.upperBound;\r\n            }\r\n            return currentErrorWaitInterval;\r\n        }\r\n    };\r\n    return Refresher;\r\n}());\r\nfunction sleep(ms) {\r\n    return new Promise(function (resolve) {\r\n        setTimeout(resolve, ms);\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction getRecaptcha() {\r\n    return self.grecaptcha;\r\n}\r\nfunction ensureActivated(app) {\r\n    if (!getState(app).activated) {\r\n        throw ERROR_FACTORY.create(\"use-before-activation\" /* USE_BEFORE_ACTIVATION */, {\r\n            appName: app.name\r\n        });\r\n    }\r\n}\r\n/**\r\n * Copied from https://stackoverflow.com/a/2117523\r\n */\r\nfunction uuidv4() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        var r = (Math.random() * 16) | 0, v = c === 'x' ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n    });\r\n}\r\n/**\r\n * Stringify and base64 encode token error data.\r\n *\r\n * @param tokenError Error data, currently hardcoded.\r\n */\r\nfunction formatDummyToken(tokenErrorData) {\r\n    return util.base64.encodeString(JSON.stringify(tokenErrorData), \r\n    /* webSafe= */ false);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction exchangeToken(_a, platformLoggerProvider) {\r\n    var url = _a.url, body = _a.body;\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var headers, platformLogger, options, response, originalError_1, responseBody, originalError_2, match, timeToLiveAsNumber, now;\r\n        return tslib.__generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    headers = {\r\n                        'Content-Type': 'application/json'\r\n                    };\r\n                    platformLogger = platformLoggerProvider.getImmediate({\r\n                        optional: true\r\n                    });\r\n                    if (platformLogger) {\r\n                        headers['X-Firebase-Client'] = platformLogger.getPlatformInfoString();\r\n                    }\r\n                    options = {\r\n                        method: 'POST',\r\n                        body: JSON.stringify(body),\r\n                        headers: headers\r\n                    };\r\n                    _b.label = 1;\r\n                case 1:\r\n                    _b.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, fetch(url, options)];\r\n                case 2:\r\n                    response = _b.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    originalError_1 = _b.sent();\r\n                    throw ERROR_FACTORY.create(\"fetch-network-error\" /* FETCH_NETWORK_ERROR */, {\r\n                        originalErrorMessage: originalError_1.message\r\n                    });\r\n                case 4:\r\n                    if (response.status !== 200) {\r\n                        throw ERROR_FACTORY.create(\"fetch-status-error\" /* FETCH_STATUS_ERROR */, {\r\n                            httpStatus: response.status\r\n                        });\r\n                    }\r\n                    _b.label = 5;\r\n                case 5:\r\n                    _b.trys.push([5, 7, , 8]);\r\n                    return [4 /*yield*/, response.json()];\r\n                case 6:\r\n                    // JSON parsing throws SyntaxError if the response body isn't a JSON string.\r\n                    responseBody = _b.sent();\r\n                    return [3 /*break*/, 8];\r\n                case 7:\r\n                    originalError_2 = _b.sent();\r\n                    throw ERROR_FACTORY.create(\"fetch-parse-error\" /* FETCH_PARSE_ERROR */, {\r\n                        originalErrorMessage: originalError_2.message\r\n                    });\r\n                case 8:\r\n                    match = responseBody.ttl.match(/^([\\d.]+)(s)$/);\r\n                    if (!match || !match[2] || isNaN(Number(match[1]))) {\r\n                        throw ERROR_FACTORY.create(\"fetch-parse-error\" /* FETCH_PARSE_ERROR */, {\r\n                            originalErrorMessage: \"ttl field (timeToLive) is not in standard Protobuf Duration \" +\r\n                                (\"format: \" + responseBody.ttl)\r\n                        });\r\n                    }\r\n                    timeToLiveAsNumber = Number(match[1]) * 1000;\r\n                    now = Date.now();\r\n                    return [2 /*return*/, {\r\n                            token: responseBody.attestationToken,\r\n                            expireTimeMillis: now + timeToLiveAsNumber,\r\n                            issuedAtTimeMillis: now\r\n                        }];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction getExchangeRecaptchaTokenRequest(app, reCAPTCHAToken) {\r\n    var _a = app.options, projectId = _a.projectId, appId = _a.appId, apiKey = _a.apiKey;\r\n    return {\r\n        url: BASE_ENDPOINT + \"/projects/\" + projectId + \"/apps/\" + appId + \":\" + EXCHANGE_RECAPTCHA_TOKEN_METHOD + \"?key=\" + apiKey,\r\n        body: {\r\n            // eslint-disable-next-line\r\n            recaptcha_token: reCAPTCHAToken\r\n        }\r\n    };\r\n}\r\nfunction getExchangeDebugTokenRequest(app, debugToken) {\r\n    var _a = app.options, projectId = _a.projectId, appId = _a.appId, apiKey = _a.apiKey;\r\n    return {\r\n        url: BASE_ENDPOINT + \"/projects/\" + projectId + \"/apps/\" + appId + \":\" + EXCHANGE_DEBUG_TOKEN_METHOD + \"?key=\" + apiKey,\r\n        body: {\r\n            // eslint-disable-next-line\r\n            debug_token: debugToken\r\n        }\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DB_NAME = 'firebase-app-check-database';\r\nvar DB_VERSION = 1;\r\nvar STORE_NAME = 'firebase-app-check-store';\r\nvar DEBUG_TOKEN_KEY = 'debug-token';\r\nvar dbPromise = null;\r\nfunction getDBPromise() {\r\n    if (dbPromise) {\r\n        return dbPromise;\r\n    }\r\n    dbPromise = new Promise(function (resolve, reject) {\r\n        try {\r\n            var request = indexedDB.open(DB_NAME, DB_VERSION);\r\n            request.onsuccess = function (event) {\r\n                resolve(event.target.result);\r\n            };\r\n            request.onerror = function (event) {\r\n                var _a;\r\n                reject(ERROR_FACTORY.create(\"storage-open\" /* STORAGE_OPEN */, {\r\n                    originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\r\n                }));\r\n            };\r\n            request.onupgradeneeded = function (event) {\r\n                var db = event.target.result;\r\n                // We don't use 'break' in this switch statement, the fall-through\r\n                // behavior is what we want, because if there are multiple versions between\r\n                // the old version and the current version, we want ALL the migrations\r\n                // that correspond to those versions to run, not only the last one.\r\n                // eslint-disable-next-line default-case\r\n                switch (event.oldVersion) {\r\n                    case 0:\r\n                        db.createObjectStore(STORE_NAME, {\r\n                            keyPath: 'compositeKey'\r\n                        });\r\n                }\r\n            };\r\n        }\r\n        catch (e) {\r\n            reject(ERROR_FACTORY.create(\"storage-open\" /* STORAGE_OPEN */, {\r\n                originalErrorMessage: e.message\r\n            }));\r\n        }\r\n    });\r\n    return dbPromise;\r\n}\r\nfunction readTokenFromIndexedDB(app) {\r\n    return read(computeKey(app));\r\n}\r\nfunction writeTokenToIndexedDB(app, token) {\r\n    return write(computeKey(app), token);\r\n}\r\nfunction writeDebugTokenToIndexedDB(token) {\r\n    return write(DEBUG_TOKEN_KEY, token);\r\n}\r\nfunction readDebugTokenFromIndexedDB() {\r\n    return read(DEBUG_TOKEN_KEY);\r\n}\r\nfunction write(key, value) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var db, transaction, store, request;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getDBPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    transaction = db.transaction(STORE_NAME, 'readwrite');\r\n                    store = transaction.objectStore(STORE_NAME);\r\n                    request = store.put({\r\n                        compositeKey: key,\r\n                        value: value\r\n                    });\r\n                    return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            request.onsuccess = function (_event) {\r\n                                resolve();\r\n                            };\r\n                            transaction.onerror = function (event) {\r\n                                var _a;\r\n                                reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_WRITE */, {\r\n                                    originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\r\n                                }));\r\n                            };\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction read(key) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var db, transaction, store, request;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getDBPromise()];\r\n                case 1:\r\n                    db = _a.sent();\r\n                    transaction = db.transaction(STORE_NAME, 'readonly');\r\n                    store = transaction.objectStore(STORE_NAME);\r\n                    request = store.get(key);\r\n                    return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                            request.onsuccess = function (event) {\r\n                                var result = event.target.result;\r\n                                if (result) {\r\n                                    resolve(result.value);\r\n                                }\r\n                                else {\r\n                                    resolve(undefined);\r\n                                }\r\n                            };\r\n                            transaction.onerror = function (event) {\r\n                                var _a;\r\n                                reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n                                    originalErrorMessage: (_a = event.target.error) === null || _a === void 0 ? void 0 : _a.message\r\n                                }));\r\n                            };\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction computeKey(app) {\r\n    return app.options.appId + \"-\" + app.name;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logger = new logger$1.Logger('@firebase/app-check');\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Always resolves. In case of an error reading from indexeddb, resolve with undefined\r\n */\r\nfunction readTokenFromStorage(app) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var token, e_1;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    if (!util.isIndexedDBAvailable()) return [3 /*break*/, 5];\r\n                    token = undefined;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, readTokenFromIndexedDB(app)];\r\n                case 2:\r\n                    token = _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    e_1 = _a.sent();\r\n                    // swallow the error and return undefined\r\n                    logger.warn(\"Failed to read token from indexeddb. Error: \" + e_1);\r\n                    return [3 /*break*/, 4];\r\n                case 4: return [2 /*return*/, token];\r\n                case 5: return [2 /*return*/, undefined];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * Always resolves. In case of an error writing to indexeddb, print a warning and resolve the promise\r\n */\r\nfunction writeTokenToStorage(app, token) {\r\n    if (util.isIndexedDBAvailable()) {\r\n        return writeTokenToIndexedDB(app, token).catch(function (e) {\r\n            // swallow the error and resolve the promise\r\n            logger.warn(\"Failed to write token to indexeddb. Error: \" + e);\r\n        });\r\n    }\r\n    return Promise.resolve();\r\n}\r\nfunction readOrCreateDebugTokenFromStorage() {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var existingDebugToken, newToken;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    existingDebugToken = undefined;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 3, , 4]);\r\n                    return [4 /*yield*/, readDebugTokenFromIndexedDB()];\r\n                case 2:\r\n                    existingDebugToken = _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 4:\r\n                    if (!existingDebugToken) {\r\n                        newToken = uuidv4();\r\n                        // We don't need to block on writing to indexeddb\r\n                        // In case persistence failed, a new debug token will be generated everytime the page is refreshed.\r\n                        // It renders the debug token useless because you have to manually register(whitelist) the new token in the firebase console again and again.\r\n                        // If you see this error trying to use debug token, it probably means you are using a browser that doesn't support indexeddb.\r\n                        // You should switch to a different browser that supports indexeddb\r\n                        writeDebugTokenToIndexedDB(newToken).catch(function (e) {\r\n                            return logger.warn(\"Failed to persist debug token to indexeddb. Error: \" + e);\r\n                        });\r\n                        // Not using logger because I don't think we ever want this accidentally hidden?\r\n                        console.log(\"AppCheck debug token: \" + newToken + \". You will need to whitelist it in the Firebase console for it to work\");\r\n                        return [2 /*return*/, newToken];\r\n                    }\r\n                    else {\r\n                        return [2 /*return*/, existingDebugToken];\r\n                    }\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction isDebugMode() {\r\n    var debugState = getDebugState();\r\n    return debugState.enabled;\r\n}\r\nfunction getDebugToken() {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var state;\r\n        return tslib.__generator(this, function (_a) {\r\n            state = getDebugState();\r\n            if (state.enabled && state.token) {\r\n                return [2 /*return*/, state.token.promise];\r\n            }\r\n            else {\r\n                // should not happen!\r\n                throw Error(\"\\n            Can't get debug token in production mode.\\n        \");\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction initializeDebugMode() {\r\n    var globals = util.getGlobal();\r\n    if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== 'string' &&\r\n        globals.FIREBASE_APPCHECK_DEBUG_TOKEN !== true) {\r\n        return;\r\n    }\r\n    var debugState = getDebugState();\r\n    debugState.enabled = true;\r\n    var deferredToken = new util.Deferred();\r\n    debugState.token = deferredToken;\r\n    if (typeof globals.FIREBASE_APPCHECK_DEBUG_TOKEN === 'string') {\r\n        deferredToken.resolve(globals.FIREBASE_APPCHECK_DEBUG_TOKEN);\r\n    }\r\n    else {\r\n        deferredToken.resolve(readOrCreateDebugTokenFromStorage());\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Initial hardcoded value agreed upon across platforms for initial launch.\r\n// Format left open for possible dynamic error values and other fields in the future.\r\nvar defaultTokenErrorData = { error: 'UNKNOWN_ERROR' };\r\n/**\r\n * This function will always resolve.\r\n * The result will contain an error field if there is any error.\r\n * In case there is an error, the token field in the result will be populated with a dummy value\r\n */\r\nfunction getToken$2(app, platformLoggerProvider, forceRefresh) {\r\n    if (forceRefresh === void 0) { forceRefresh = false; }\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var state, token, error, cachedToken, tokenFromDebugExchange, _a, _b, _c, e_1, interopTokenResult;\r\n        return tslib.__generator(this, function (_d) {\r\n            switch (_d.label) {\r\n                case 0:\r\n                    ensureActivated(app);\r\n                    state = getState(app);\r\n                    token = state.token;\r\n                    error = undefined;\r\n                    if (!!token) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, state.cachedTokenPromise];\r\n                case 1:\r\n                    cachedToken = _d.sent();\r\n                    if (cachedToken && isValid(cachedToken)) {\r\n                        token = cachedToken;\r\n                        setState(app, tslib.__assign(tslib.__assign({}, state), { token: token }));\r\n                        // notify all listeners with the cached token\r\n                        notifyTokenListeners(app, { token: token.token });\r\n                    }\r\n                    _d.label = 2;\r\n                case 2:\r\n                    // Return the cached token (from either memory or indexedDB) if it's valid\r\n                    if (!forceRefresh && token && isValid(token)) {\r\n                        return [2 /*return*/, {\r\n                                token: token.token\r\n                            }];\r\n                    }\r\n                    if (!isDebugMode()) return [3 /*break*/, 6];\r\n                    _a = exchangeToken;\r\n                    _b = getExchangeDebugTokenRequest;\r\n                    _c = [app];\r\n                    return [4 /*yield*/, getDebugToken()];\r\n                case 3: return [4 /*yield*/, _a.apply(void 0, [_b.apply(void 0, _c.concat([_d.sent()])), platformLoggerProvider])];\r\n                case 4:\r\n                    tokenFromDebugExchange = _d.sent();\r\n                    // Write debug token to indexedDB.\r\n                    return [4 /*yield*/, writeTokenToStorage(app, tokenFromDebugExchange)];\r\n                case 5:\r\n                    // Write debug token to indexedDB.\r\n                    _d.sent();\r\n                    // Write debug token to state.\r\n                    setState(app, tslib.__assign(tslib.__assign({}, state), { token: tokenFromDebugExchange }));\r\n                    return [2 /*return*/, { token: tokenFromDebugExchange.token }];\r\n                case 6:\r\n                    _d.trys.push([6, 8, , 9]);\r\n                    return [4 /*yield*/, state.provider.getToken()];\r\n                case 7:\r\n                    // state.provider is populated in initializeAppCheck()\r\n                    // ensureActivated() at the top of this function checks that\r\n                    // initializeAppCheck() has been called.\r\n                    token = _d.sent();\r\n                    return [3 /*break*/, 9];\r\n                case 8:\r\n                    e_1 = _d.sent();\r\n                    // `getToken()` should never throw, but logging error text to console will aid debugging.\r\n                    logger.error(e_1);\r\n                    error = e_1;\r\n                    return [3 /*break*/, 9];\r\n                case 9:\r\n                    if (!!token) return [3 /*break*/, 10];\r\n                    // if token is undefined, there must be an error.\r\n                    // we return a dummy token along with the error\r\n                    interopTokenResult = makeDummyTokenResult(error);\r\n                    return [3 /*break*/, 12];\r\n                case 10:\r\n                    interopTokenResult = {\r\n                        token: token.token\r\n                    };\r\n                    // write the new token to the memory state as well as the persistent storage.\r\n                    // Only do it if we got a valid new token\r\n                    setState(app, tslib.__assign(tslib.__assign({}, state), { token: token }));\r\n                    return [4 /*yield*/, writeTokenToStorage(app, token)];\r\n                case 11:\r\n                    _d.sent();\r\n                    _d.label = 12;\r\n                case 12:\r\n                    notifyTokenListeners(app, interopTokenResult);\r\n                    return [2 /*return*/, interopTokenResult];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction addTokenListener(app, platformLoggerProvider, type, listener, onError) {\r\n    var state = getState(app);\r\n    var tokenListener = {\r\n        next: listener,\r\n        error: onError,\r\n        type: type\r\n    };\r\n    var newState = tslib.__assign(tslib.__assign({}, state), { tokenObservers: tslib.__spreadArray(tslib.__spreadArray([], state.tokenObservers), [tokenListener]) });\r\n    /**\r\n     * Invoke the listener with the valid token, then start the token refresher\r\n     */\r\n    if (!newState.tokenRefresher) {\r\n        var tokenRefresher = createTokenRefresher(app, platformLoggerProvider);\r\n        newState.tokenRefresher = tokenRefresher;\r\n    }\r\n    // Create the refresher but don't start it if `isTokenAutoRefreshEnabled`\r\n    // is not true.\r\n    if (!newState.tokenRefresher.isRunning() && state.isTokenAutoRefreshEnabled) {\r\n        newState.tokenRefresher.start();\r\n    }\r\n    // Invoke the listener async immediately if there is a valid token\r\n    // in memory.\r\n    if (state.token && isValid(state.token)) {\r\n        var validToken_1 = state.token;\r\n        Promise.resolve()\r\n            .then(function () { return listener({ token: validToken_1.token }); })\r\n            .catch(function () {\r\n            /** Ignore errors in listeners. */\r\n        });\r\n    }\r\n    else if (state.token == null) {\r\n        // Only check cache if there was no token. If the token was invalid,\r\n        // skip this and rely on exchange endpoint.\r\n        void state\r\n            .cachedTokenPromise // Storage token promise. Always populated in `activate()`.\r\n            .then(function (cachedToken) {\r\n            if (cachedToken && isValid(cachedToken)) {\r\n                listener({ token: cachedToken.token });\r\n            }\r\n        })\r\n            .catch(function () {\r\n            /** Ignore errors in listeners. */\r\n        });\r\n    }\r\n    setState(app, newState);\r\n}\r\nfunction removeTokenListener(app, listener) {\r\n    var state = getState(app);\r\n    var newObservers = state.tokenObservers.filter(function (tokenObserver) { return tokenObserver.next !== listener; });\r\n    if (newObservers.length === 0 &&\r\n        state.tokenRefresher &&\r\n        state.tokenRefresher.isRunning()) {\r\n        state.tokenRefresher.stop();\r\n    }\r\n    setState(app, tslib.__assign(tslib.__assign({}, state), { tokenObservers: newObservers }));\r\n}\r\nfunction createTokenRefresher(app, platformLoggerProvider) {\r\n    var _this = this;\r\n    return new Refresher(\r\n    // Keep in mind when this fails for any reason other than the ones\r\n    // for which we should retry, it will effectively stop the proactive refresh.\r\n    function () { return tslib.__awaiter(_this, void 0, void 0, function () {\r\n        var state, result;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    state = getState(app);\r\n                    if (!!state.token) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, getToken$2(app, platformLoggerProvider)];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 2: return [4 /*yield*/, getToken$2(app, platformLoggerProvider, true)];\r\n                case 3:\r\n                    result = _a.sent();\r\n                    _a.label = 4;\r\n                case 4:\r\n                    // getToken() always resolves. In case the result has an error field defined, it means the operation failed, and we should retry.\r\n                    if (result.error) {\r\n                        throw result.error;\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    }); }, function () {\r\n        // TODO: when should we retry?\r\n        return true;\r\n    }, function () {\r\n        var state = getState(app);\r\n        if (state.token) {\r\n            // issuedAtTime + (50% * total TTL) + 5 minutes\r\n            var nextRefreshTimeMillis = state.token.issuedAtTimeMillis +\r\n                (state.token.expireTimeMillis - state.token.issuedAtTimeMillis) *\r\n                    0.5 +\r\n                5 * 60 * 1000;\r\n            // Do not allow refresh time to be past (expireTime - 5 minutes)\r\n            var latestAllowableRefresh = state.token.expireTimeMillis - 5 * 60 * 1000;\r\n            nextRefreshTimeMillis = Math.min(nextRefreshTimeMillis, latestAllowableRefresh);\r\n            return Math.max(0, nextRefreshTimeMillis - Date.now());\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }, TOKEN_REFRESH_TIME.RETRIAL_MIN_WAIT, TOKEN_REFRESH_TIME.RETRIAL_MAX_WAIT);\r\n}\r\nfunction notifyTokenListeners(app, token) {\r\n    var observers = getState(app).tokenObservers;\r\n    for (var _i = 0, observers_1 = observers; _i < observers_1.length; _i++) {\r\n        var observer = observers_1[_i];\r\n        try {\r\n            if (observer.type === \"EXTERNAL\" /* EXTERNAL */ && token.error != null) {\r\n                // If this listener was added by a 3P call, send any token error to\r\n                // the supplied error handler. A 3P observer always has an error\r\n                // handler.\r\n                observer.error(token.error);\r\n            }\r\n            else {\r\n                // If the token has no error field, always return the token.\r\n                // If this is a 2P listener, return the token, whether or not it\r\n                // has an error field.\r\n                observer.next(token);\r\n            }\r\n        }\r\n        catch (ignored) {\r\n            // Errors in the listener function itself are always ignored.\r\n        }\r\n    }\r\n}\r\nfunction isValid(token) {\r\n    return token.expireTimeMillis - Date.now() > 0;\r\n}\r\nfunction makeDummyTokenResult(error) {\r\n    return {\r\n        token: formatDummyToken(defaultTokenErrorData),\r\n        error: error\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECAPTCHA_URL = 'https://www.google.com/recaptcha/api.js';\r\nfunction initialize(app, siteKey) {\r\n    var state = getState(app);\r\n    var initialized = new util.Deferred();\r\n    setState(app, tslib.__assign(tslib.__assign({}, state), { reCAPTCHAState: { initialized: initialized } }));\r\n    var divId = \"fire_app_check_\" + app.name;\r\n    var invisibleDiv = document.createElement('div');\r\n    invisibleDiv.id = divId;\r\n    invisibleDiv.style.display = 'none';\r\n    document.body.appendChild(invisibleDiv);\r\n    var grecaptcha = getRecaptcha();\r\n    if (!grecaptcha) {\r\n        loadReCAPTCHAScript(function () {\r\n            var grecaptcha = getRecaptcha();\r\n            if (!grecaptcha) {\r\n                // it shouldn't happen.\r\n                throw new Error('no recaptcha');\r\n            }\r\n            grecaptcha.ready(function () {\r\n                // Invisible widgets allow us to set a different siteKey for each widget, so we use them to support multiple apps\r\n                renderInvisibleWidget(app, siteKey, grecaptcha, divId);\r\n                initialized.resolve(grecaptcha);\r\n            });\r\n        });\r\n    }\r\n    else {\r\n        grecaptcha.ready(function () {\r\n            renderInvisibleWidget(app, siteKey, grecaptcha, divId);\r\n            initialized.resolve(grecaptcha);\r\n        });\r\n    }\r\n    return initialized.promise;\r\n}\r\nfunction getToken$1(app) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var reCAPTCHAState, recaptcha;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    ensureActivated(app);\r\n                    reCAPTCHAState = getState(app).reCAPTCHAState;\r\n                    return [4 /*yield*/, reCAPTCHAState.initialized.promise];\r\n                case 1:\r\n                    recaptcha = _a.sent();\r\n                    return [2 /*return*/, new Promise(function (resolve, _reject) {\r\n                            // Updated after initialization is complete.\r\n                            var reCAPTCHAState = getState(app).reCAPTCHAState;\r\n                            recaptcha.ready(function () {\r\n                                resolve(\r\n                                // widgetId is guaranteed to be available if reCAPTCHAState.initialized.promise resolved.\r\n                                recaptcha.execute(reCAPTCHAState.widgetId, {\r\n                                    action: 'fire_app_check'\r\n                                }));\r\n                            });\r\n                        })];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n *\r\n * @param app\r\n * @param container - Id of a HTML element.\r\n */\r\nfunction renderInvisibleWidget(app, siteKey, grecaptcha, container) {\r\n    var widgetId = grecaptcha.render(container, {\r\n        sitekey: siteKey,\r\n        size: 'invisible'\r\n    });\r\n    var state = getState(app);\r\n    setState(app, tslib.__assign(tslib.__assign({}, state), { reCAPTCHAState: tslib.__assign(tslib.__assign({}, state.reCAPTCHAState), { // state.reCAPTCHAState is set in the initialize()\r\n            widgetId: widgetId }) }));\r\n}\r\nfunction loadReCAPTCHAScript(onload) {\r\n    var script = document.createElement('script');\r\n    script.src = \"\" + RECAPTCHA_URL;\r\n    script.onload = onload;\r\n    document.head.appendChild(script);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * App Check provider that can obtain a reCAPTCHA V3 token and exchange it\r\n * for an App Check token.\r\n */\r\nvar ReCaptchaV3Provider = /** @class */ (function () {\r\n    /**\r\n     * Create a ReCaptchaV3Provider instance.\r\n     * @param siteKey - ReCAPTCHA V3 siteKey.\r\n     */\r\n    function ReCaptchaV3Provider(_siteKey) {\r\n        this._siteKey = _siteKey;\r\n    }\r\n    /**\r\n     * Returns an App Check token.\r\n     * @internal\r\n     */\r\n    ReCaptchaV3Provider.prototype.getToken = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var attestedClaimsToken;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._app || !this._platformLoggerProvider) {\r\n                            // This should only occur if user has not called initializeAppCheck().\r\n                            // We don't have an appName to provide if so.\r\n                            // This should already be caught in the top level `getToken()` function.\r\n                            throw ERROR_FACTORY.create(\"use-before-activation\" /* USE_BEFORE_ACTIVATION */, {\r\n                                appName: ''\r\n                            });\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, getToken$1(this._app)];\r\n                    case 2:\r\n                        attestedClaimsToken = _a.sent();\r\n                        return [3 /*break*/, 4];\r\n                    case 3:\r\n                        _a.sent();\r\n                        // reCaptcha.execute() throws null which is not very descriptive.\r\n                        throw ERROR_FACTORY.create(\"recaptcha-error\" /* RECAPTCHA_ERROR */);\r\n                    case 4: return [2 /*return*/, exchangeToken(getExchangeRecaptchaTokenRequest(this._app, attestedClaimsToken), this._platformLoggerProvider)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ReCaptchaV3Provider.prototype.initialize = function (app, platformLoggerProvider) {\r\n        this._app = app;\r\n        this._platformLoggerProvider = platformLoggerProvider;\r\n        initialize(app, this._siteKey).catch(function () {\r\n            /* we don't care about the initialization result */\r\n        });\r\n    };\r\n    return ReCaptchaV3Provider;\r\n}());\r\n/**\r\n * Custom provider class.\r\n */\r\nvar CustomProvider = /** @class */ (function () {\r\n    function CustomProvider(_customProviderOptions) {\r\n        this._customProviderOptions = _customProviderOptions;\r\n    }\r\n    /**\r\n     * @internal\r\n     */\r\n    CustomProvider.prototype.getToken = function () {\r\n        return tslib.__awaiter(this, void 0, void 0, function () {\r\n            var customToken, issuedAtTimeSeconds, issuedAtTimeMillis;\r\n            return tslib.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this._app) {\r\n                            // This should only occur if user has not called initializeAppCheck().\r\n                            // We don't have an appName to provide if so.\r\n                            // This should already be caught in the top level `getToken()` function.\r\n                            throw ERROR_FACTORY.create(\"use-before-activation\" /* USE_BEFORE_ACTIVATION */, {\r\n                                appName: ''\r\n                            });\r\n                        }\r\n                        return [4 /*yield*/, this._customProviderOptions.getToken()];\r\n                    case 1:\r\n                        customToken = _a.sent();\r\n                        issuedAtTimeSeconds = util.issuedAtTime(customToken.token);\r\n                        issuedAtTimeMillis = issuedAtTimeSeconds !== null &&\r\n                            issuedAtTimeSeconds < Date.now() &&\r\n                            issuedAtTimeSeconds > 0\r\n                            ? issuedAtTimeSeconds * 1000\r\n                            : Date.now();\r\n                        return [2 /*return*/, tslib.__assign(tslib.__assign({}, customToken), { issuedAtTimeMillis: issuedAtTimeMillis })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @internal\r\n     */\r\n    CustomProvider.prototype.initialize = function (app) {\r\n        this._app = app;\r\n    };\r\n    return CustomProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param app\r\n * @param siteKeyOrProvider - optional custom attestation provider\r\n * or reCAPTCHA provider\r\n * @param isTokenAutoRefreshEnabled - if true, enables auto refresh\r\n * of appCheck token.\r\n */\r\nfunction activate(app, siteKeyOrProvider, platformLoggerProvider, isTokenAutoRefreshEnabled) {\r\n    var state = getState(app);\r\n    if (state.activated) {\r\n        throw ERROR_FACTORY.create(\"already-activated\" /* ALREADY_ACTIVATED */, {\r\n            appName: app.name\r\n        });\r\n    }\r\n    var newState = tslib.__assign(tslib.__assign({}, state), { activated: true });\r\n    // Read cached token from storage if it exists and store it in memory.\r\n    newState.cachedTokenPromise = readTokenFromStorage(app).then(function (cachedToken) {\r\n        if (cachedToken && isValid(cachedToken)) {\r\n            setState(app, tslib.__assign(tslib.__assign({}, getState(app)), { token: cachedToken }));\r\n        }\r\n        return cachedToken;\r\n    });\r\n    if (typeof siteKeyOrProvider === 'string') {\r\n        newState.provider = new ReCaptchaV3Provider(siteKeyOrProvider);\r\n    }\r\n    else if (siteKeyOrProvider instanceof ReCaptchaV3Provider ||\r\n        siteKeyOrProvider instanceof CustomProvider) {\r\n        newState.provider = siteKeyOrProvider;\r\n    }\r\n    else {\r\n        // Process \"old\" custom provider to avoid breaking previous users.\r\n        // This was defined at beta release as simply an object with a\r\n        // getToken() method.\r\n        newState.provider = new CustomProvider({\r\n            getToken: siteKeyOrProvider.getToken\r\n        });\r\n    }\r\n    // Use value of global `automaticDataCollectionEnabled` (which\r\n    // itself defaults to false if not specified in config) if\r\n    // `isTokenAutoRefreshEnabled` param was not provided by user.\r\n    newState.isTokenAutoRefreshEnabled =\r\n        isTokenAutoRefreshEnabled === undefined\r\n            ? app.automaticDataCollectionEnabled\r\n            : isTokenAutoRefreshEnabled;\r\n    setState(app, newState);\r\n    newState.provider.initialize(app, platformLoggerProvider);\r\n}\r\nfunction setTokenAutoRefreshEnabled(app, isTokenAutoRefreshEnabled) {\r\n    var state = getState(app);\r\n    // This will exist if any product libraries have called\r\n    // `addTokenListener()`\r\n    if (state.tokenRefresher) {\r\n        if (isTokenAutoRefreshEnabled === true) {\r\n            state.tokenRefresher.start();\r\n        }\r\n        else {\r\n            state.tokenRefresher.stop();\r\n        }\r\n    }\r\n    setState(app, tslib.__assign(tslib.__assign({}, state), { isTokenAutoRefreshEnabled: isTokenAutoRefreshEnabled }));\r\n}\r\n/**\r\n * Differs from internal getToken in that it throws the error.\r\n */\r\nfunction getToken(app, platformLoggerProvider, forceRefresh) {\r\n    return tslib.__awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return tslib.__generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, getToken$2(app, platformLoggerProvider, forceRefresh)];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    if (result.error) {\r\n                        throw result.error;\r\n                    }\r\n                    return [2 /*return*/, { token: result.token }];\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction onTokenChanged(app, platformLoggerProvider, onNextOrObserver, onError, \r\n/**\r\n * NOTE: Although an `onCompletion` callback can be provided, it will\r\n * never be called because the token stream is never-ending.\r\n * It is added only for API consistency with the observer pattern, which\r\n * we follow in JS APIs.\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nonCompletion) {\r\n    var nextFn = function () { };\r\n    var errorFn = function () { };\r\n    if (onNextOrObserver.next != null) {\r\n        nextFn = onNextOrObserver.next.bind(onNextOrObserver);\r\n    }\r\n    else {\r\n        nextFn = onNextOrObserver;\r\n    }\r\n    if (onNextOrObserver.error != null) {\r\n        errorFn = onNextOrObserver.error.bind(onNextOrObserver);\r\n    }\r\n    else if (onError) {\r\n        errorFn = onError;\r\n    }\r\n    addTokenListener(app, platformLoggerProvider, \"EXTERNAL\" /* EXTERNAL */, nextFn, errorFn);\r\n    return function () { return removeTokenListener(app, nextFn); };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction factory(app, platformLoggerProvider) {\r\n    return {\r\n        app: app,\r\n        activate: function (siteKeyOrProvider, isTokenAutoRefreshEnabled) {\r\n            return activate(app, \r\n            // Public types of ReCaptchaV3Provider/CustomProvider don't\r\n            // expose getToken() and aren't recognized as the internal\r\n            // class version of themselves.\r\n            siteKeyOrProvider, platformLoggerProvider, isTokenAutoRefreshEnabled);\r\n        },\r\n        setTokenAutoRefreshEnabled: function (isTokenAutoRefreshEnabled) {\r\n            return setTokenAutoRefreshEnabled(app, isTokenAutoRefreshEnabled);\r\n        },\r\n        getToken: function (forceRefresh) {\r\n            return getToken(app, platformLoggerProvider, forceRefresh);\r\n        },\r\n        onTokenChanged: function (onNextOrObserver, onError, onCompletion) {\r\n            return onTokenChanged(app, platformLoggerProvider, \r\n            /**\r\n             * This can still be an observer. Need to do this casting because\r\n             * according to Typescript: \"Implementation signatures of overloads\r\n             * are not externally visible\"\r\n             */\r\n            onNextOrObserver, onError);\r\n        },\r\n        INTERNAL: {\r\n            delete: function () {\r\n                var tokenObservers = getState(app).tokenObservers;\r\n                for (var _i = 0, tokenObservers_1 = tokenObservers; _i < tokenObservers_1.length; _i++) {\r\n                    var tokenObserver = tokenObservers_1[_i];\r\n                    removeTokenListener(app, tokenObserver.next);\r\n                }\r\n                return Promise.resolve();\r\n            }\r\n        }\r\n    };\r\n}\r\nfunction internalFactory(app, platformLoggerProvider) {\r\n    return {\r\n        getToken: function (forceRefresh) {\r\n            return getToken$2(app, platformLoggerProvider, forceRefresh);\r\n        },\r\n        addTokenListener: function (listener) {\r\n            return addTokenListener(app, platformLoggerProvider, \"INTERNAL\" /* INTERNAL */, listener);\r\n        },\r\n        removeTokenListener: function (listener) { return removeTokenListener(app, listener); }\r\n    };\r\n}\n\nvar name = \"@firebase/app-check\";\nvar version = \"0.3.2\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar APP_CHECK_NAME = 'appCheck';\r\nvar APP_CHECK_NAME_INTERNAL = 'app-check-internal';\r\nfunction registerAppCheck(firebase) {\r\n    // The public interface\r\n    firebase.INTERNAL.registerComponent(new component.Component(APP_CHECK_NAME, function (container) {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var platformLoggerProvider = container.getProvider('platform-logger');\r\n        return factory(app, platformLoggerProvider);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps({\r\n        ReCaptchaV3Provider: ReCaptchaV3Provider,\r\n        CustomProvider: CustomProvider\r\n    })\r\n        /**\r\n         * AppCheck can only be initialized by explicitly calling firebase.appCheck()\r\n         * We don't want firebase products that consume AppCheck to gate on AppCheck\r\n         * if the user doesn't intend them to, just because the AppCheck component\r\n         * is registered.\r\n         */\r\n        .setInstantiationMode(\"EXPLICIT\" /* EXPLICIT */)\r\n        /**\r\n         * Because all firebase products that depend on app-check depend on app-check-internal directly,\r\n         * we need to initialize app-check-internal after app-check is initialized to make it\r\n         * available to other firebase products.\r\n         */\r\n        .setInstanceCreatedCallback(function (container, _instanceIdentifier, _instance) {\r\n        var appCheckInternalProvider = container.getProvider(APP_CHECK_NAME_INTERNAL);\r\n        appCheckInternalProvider.initialize();\r\n    }));\r\n    // The internal interface used by other Firebase products\r\n    firebase.INTERNAL.registerComponent(new component.Component(APP_CHECK_NAME_INTERNAL, function (container) {\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var platformLoggerProvider = container.getProvider('platform-logger');\r\n        return internalFactory(app, platformLoggerProvider);\r\n    }, \"PUBLIC\" /* PUBLIC */).setInstantiationMode(\"EXPLICIT\" /* EXPLICIT */));\r\n    firebase.registerVersion(name, version);\r\n}\r\nregisterAppCheck(firebase__default['default']);\r\ninitializeDebugMode();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}