{"ast":null,"code":"import { BehaviorSubject, throwError } from \"rxjs\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport { environment } from \"../../../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-toastr\";\nexport class AuthService {\n  constructor(http, toastrService) {\n    this.http = http;\n    this.toastrService = toastrService;\n    this.isAuthenticated$ = new BehaviorSubject(false);\n    this.profileData$ = new BehaviorSubject(null);\n  }\n  get token() {\n    const fbExpToken = localStorage.getItem('fb-exp-token');\n    if (!!fbExpToken && Date.now() > +fbExpToken) {\n      this.logout();\n      this.isAuthenticated$.next(false);\n      return null;\n    }\n    return localStorage.getItem('fb-token');\n  }\n  singUp(user) {\n    user.returnSecureToken = true;\n    return this.http.post(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${environment.apiKey}`, user).pipe(tap(value => {\n      const userData = {\n        userEmail: value.email,\n        displayName: value.displayName,\n        photoUrl: value.photoUrl\n      };\n      AuthService.setSingUpToken(value);\n      this.isAuthenticated$.next(true);\n      this.profileData$.next(userData);\n      localStorage.setItem('id-token', value.idToken);\n    }), catchError(this.handleErrorForSingUp.bind(this)));\n  }\n  handleErrorForSingUp(error) {\n    const message = error.error.error.message;\n    switch (message) {\n      case \"INVALID_EMAIL\":\n        this.toastrService.error('Invalid email');\n        break;\n      case \"EMAIL_EXISTS\":\n        this.toastrService.error('Email exists');\n        break;\n      case \"OPERATION_NOT_ALLOWED\":\n        this.toastrService.error('Operation not allowed');\n        break;\n      case \"TOO_MANY_ATTEMPTS_TRY_LATER\":\n        this.toastrService.error('To many attempts try later ');\n        break;\n    }\n    return throwError(message);\n  }\n  login(user) {\n    user.returnSecureToken = true;\n    return this.http.post(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.apiKey}`, user).pipe(tap(value => {\n      const userData = {\n        userEmail: value.email,\n        displayName: value.displayName,\n        photoUrl: value.photoUrl\n      };\n      AuthService.setToken(value);\n      this.isAuthenticated$.next(true);\n      this.profileData$.next(userData);\n      localStorage.setItem('id-token', value.idToken);\n    }), catchError(this.loginHandleError.bind(this)));\n  }\n  loginHandleError(error) {\n    const {\n      message\n    } = error.error.error;\n    switch (message) {\n      case 'INVALID_EMAIL':\n        this.toastrService.error('Invalid email');\n        break;\n      case 'INVALID_PASSWORD':\n        this.toastrService.error('Invalid password');\n        break;\n      case 'EMAIL_NOT_FOUND':\n        this.toastrService.error('Email not found');\n        break;\n    }\n    return throwError(error);\n  }\n  setProfileData(data) {\n    return this.profileData$.next(data);\n  }\n  getProfileData() {\n    return this.profileData$;\n  }\n  getIsAuthenticated() {\n    return this.isAuthenticated$;\n  }\n  logout() {\n    AuthService.setToken(null);\n    this.setIsAuthenticatedStatus(false);\n  }\n  setIsAuthenticatedStatus(status) {\n    this.isAuthenticated$.next(status);\n  }\n  static setSingUpToken(response) {\n    if (response) {\n      const expTimeToken = new Date(Date.now() + +response.expiresIn * 1000);\n      localStorage.setItem('fb-token', response.idToken);\n      localStorage.setItem('fb-exp-token', expTimeToken.toString());\n    } else {\n      localStorage.clear();\n    }\n  }\n  static setToken(response) {\n    if (response) {\n      const expTimeToken = new Date(Date.now() + +response.expiresIn * 1000);\n      localStorage.setItem('fb-token', response.idToken);\n      localStorage.setItem('fb-exp-token', expTimeToken.toString());\n    } else {\n      localStorage.clear();\n    }\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ToastrService));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: \"root\"\n});","map":{"version":3,"names":["BehaviorSubject","throwError","catchError","tap","environment","AuthService","constructor","http","toastrService","isAuthenticated$","profileData$","token","fbExpToken","localStorage","getItem","Date","now","logout","next","singUp","user","returnSecureToken","post","apiKey","pipe","value","userData","userEmail","email","displayName","photoUrl","setSingUpToken","setItem","idToken","handleErrorForSingUp","bind","error","message","login","setToken","loginHandleError","setProfileData","data","getProfileData","getIsAuthenticated","setIsAuthenticatedStatus","status","response","expTimeToken","expiresIn","toString","clear","i0","ɵɵinject","i1","HttpClient","i2","ToastrService","factory","ɵfac","providedIn"],"sources":["C:\\Progect for learning\\angular-blog\\src\\app\\admin\\shared\\services\\auth.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {HttpClient, HttpErrorResponse} from \"@angular/common/http\";\r\nimport {BehaviorSubject, Observable, throwError} from \"rxjs\";\r\nimport {catchError, tap} from \"rxjs/operators\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\n\r\nimport {FireBaseAuthResponse} from \"../interfaces/fireBaseAuthResponse\";\r\nimport {environment} from \"../../../../environments/environment\";\r\nimport {UserInterface} from \"../interfaces/user.interface\";\r\nimport {FireBaseSingUpResponseInterface} from \"../interfaces/fireBaseSingUpResponse.interface\";\r\nimport {ProfileDataInterface} from \"../interfaces/profileData.intarface\";\r\nimport {UserDataInterface} from \"../interfaces/userDataInterface\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class AuthService {\r\n  private isAuthenticated$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\r\n  private profileData$: BehaviorSubject<ProfileDataInterface | null> = new BehaviorSubject<ProfileDataInterface | null>(null);\r\n\r\n  constructor(private http: HttpClient, private toastrService: ToastrService) {\r\n  }\r\n\r\n  get token(): any {\r\n    const fbExpToken: undefined | string | null = localStorage.getItem('fb-exp-token');\r\n\r\n    if (!!fbExpToken && Date.now() > +fbExpToken) {\r\n      this.logout();\r\n      this.isAuthenticated$.next(false);\r\n      return null;\r\n    }\r\n    return localStorage.getItem('fb-token');\r\n  }\r\n\r\n  singUp(user: UserInterface): Observable<FireBaseAuthResponse | unknown> {\r\n    user.returnSecureToken = true;\r\n    return this.http.post<FireBaseAuthResponse>(`https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${environment.apiKey}`, user)\r\n      .pipe(\r\n        tap(value => {\r\n          const userData: UserDataInterface = {\r\n            userEmail: value.email,\r\n            displayName: value.displayName,\r\n            photoUrl: value.photoUrl\r\n          }\r\n          AuthService.setSingUpToken(value);\r\n          this.isAuthenticated$.next(true);\r\n          this.profileData$.next(userData);\r\n          localStorage.setItem('id-token', <string>value.idToken);\r\n        }),\r\n        catchError(this.handleErrorForSingUp.bind(this))\r\n      )\r\n  }\r\n\r\n  handleErrorForSingUp(error: HttpErrorResponse): any {\r\n    const message = error.error.error.message;\r\n\r\n    switch (message) {\r\n      case \"INVALID_EMAIL\":\r\n        this.toastrService.error('Invalid email');\r\n        break;\r\n      case \"EMAIL_EXISTS\":\r\n        this.toastrService.error('Email exists');\r\n        break;\r\n      case \"OPERATION_NOT_ALLOWED\":\r\n        this.toastrService.error('Operation not allowed');\r\n        break;\r\n      case \"TOO_MANY_ATTEMPTS_TRY_LATER\":\r\n        this.toastrService.error('To many attempts try later ');\r\n        break;\r\n    }\r\n    return throwError(message);\r\n  }\r\n\r\n  login(user: UserInterface): Observable<FireBaseAuthResponse | null> {\r\n    user.returnSecureToken = true;\r\n    return this.http.post<FireBaseAuthResponse>(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${environment.apiKey}`, user)\r\n      .pipe(\r\n        tap((value) => {\r\n          const userData: UserDataInterface = {\r\n            userEmail: value.email,\r\n            displayName: value.displayName,\r\n            photoUrl: value.photoUrl\r\n          }\r\n          AuthService.setToken(value);\r\n          this.isAuthenticated$.next(true);\r\n          this.profileData$.next(userData);\r\n          localStorage.setItem('id-token', <string>value.idToken);\r\n        }),\r\n        catchError(this.loginHandleError.bind(this))\r\n      )\r\n  }\r\n\r\n  loginHandleError(error: HttpErrorResponse): Observable<any> {\r\n    const {message} = error.error.error;\r\n\r\n    switch (message) {\r\n      case 'INVALID_EMAIL':\r\n        this.toastrService.error('Invalid email');\r\n        break;\r\n      case 'INVALID_PASSWORD':\r\n        this.toastrService.error('Invalid password');\r\n        break;\r\n      case 'EMAIL_NOT_FOUND':\r\n        this.toastrService.error('Email not found');\r\n        break;\r\n    }\r\n    return throwError(error);\r\n  }\r\n\r\n  setProfileData(data: ProfileDataInterface) {\r\n    return this.profileData$.next(data)\r\n  }\r\n\r\n  getProfileData(): BehaviorSubject<ProfileDataInterface | null> {\r\n    return this.profileData$;\r\n  }\r\n\r\n  getIsAuthenticated(): BehaviorSubject<boolean> {\r\n    return this.isAuthenticated$;\r\n  }\r\n\r\n  logout() {\r\n    AuthService.setToken(null);\r\n    this.setIsAuthenticatedStatus(false);\r\n  }\r\n\r\n  setIsAuthenticatedStatus(status: boolean): void {\r\n    this.isAuthenticated$.next(status);\r\n  }\r\n\r\n  private static setSingUpToken(response: FireBaseSingUpResponseInterface) {\r\n    if (response) {\r\n      const expTimeToken = new Date(Date.now() + +<string>response.expiresIn * 1000);\r\n\r\n      localStorage.setItem('fb-token', <string>response.idToken);\r\n      localStorage.setItem('fb-exp-token', expTimeToken.toString());\r\n    } else {\r\n      localStorage.clear();\r\n    }\r\n  }\r\n\r\n  private static setToken(response: FireBaseAuthResponse | null) {\r\n    if (response) {\r\n      const expTimeToken = new Date(Date.now() + +<string>response.expiresIn * 1000);\r\n\r\n      localStorage.setItem('fb-token', <string>response.idToken);\r\n      localStorage.setItem('fb-exp-token', expTimeToken.toString());\r\n    } else {\r\n      localStorage.clear();\r\n    }\r\n  }\r\n\r\n}\r\n"],"mappings":"AAEA,SAAQA,eAAe,EAAcC,UAAU,QAAO,MAAM;AAC5D,SAAQC,UAAU,EAAEC,GAAG,QAAO,gBAAgB;AAI9C,SAAQC,WAAW,QAAO,sCAAsC;;;;AAShE,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB,EAAUC,aAA4B;IAAtD,KAAAD,IAAI,GAAJA,IAAI;IAAsB,KAAAC,aAAa,GAAbA,aAAa;IAHnD,KAAAC,gBAAgB,GAA6B,IAAIT,eAAe,CAAU,KAAK,CAAC;IAChF,KAAAU,YAAY,GAAiD,IAAIV,eAAe,CAA8B,IAAI,CAAC;EAG3H;EAEA,IAAIW,KAAKA,CAAA;IACP,MAAMC,UAAU,GAA8BC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAElF,IAAI,CAAC,CAACF,UAAU,IAAIG,IAAI,CAACC,GAAG,EAAE,GAAG,CAACJ,UAAU,EAAE;MAC5C,IAAI,CAACK,MAAM,EAAE;MACb,IAAI,CAACR,gBAAgB,CAACS,IAAI,CAAC,KAAK,CAAC;MACjC,OAAO,IAAI;IACb;IACA,OAAOL,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;EACzC;EAEAK,MAAMA,CAACC,IAAmB;IACxBA,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAuB,iEAAiElB,WAAW,CAACmB,MAAM,EAAE,EAAEH,IAAI,CAAC,CACrII,IAAI,CACHrB,GAAG,CAACsB,KAAK,IAAG;MACV,MAAMC,QAAQ,GAAsB;QAClCC,SAAS,EAAEF,KAAK,CAACG,KAAK;QACtBC,WAAW,EAAEJ,KAAK,CAACI,WAAW;QAC9BC,QAAQ,EAAEL,KAAK,CAACK;OACjB;MACDzB,WAAW,CAAC0B,cAAc,CAACN,KAAK,CAAC;MACjC,IAAI,CAAChB,gBAAgB,CAACS,IAAI,CAAC,IAAI,CAAC;MAChC,IAAI,CAACR,YAAY,CAACQ,IAAI,CAACQ,QAAQ,CAAC;MAChCb,YAAY,CAACmB,OAAO,CAAC,UAAU,EAAUP,KAAK,CAACQ,OAAO,CAAC;IACzD,CAAC,CAAC,EACF/B,UAAU,CAAC,IAAI,CAACgC,oBAAoB,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC,CACjD;EACL;EAEAD,oBAAoBA,CAACE,KAAwB;IAC3C,MAAMC,OAAO,GAAGD,KAAK,CAACA,KAAK,CAACA,KAAK,CAACC,OAAO;IAEzC,QAAQA,OAAO;MACb,KAAK,eAAe;QAClB,IAAI,CAAC7B,aAAa,CAAC4B,KAAK,CAAC,eAAe,CAAC;QACzC;MACF,KAAK,cAAc;QACjB,IAAI,CAAC5B,aAAa,CAAC4B,KAAK,CAAC,cAAc,CAAC;QACxC;MACF,KAAK,uBAAuB;QAC1B,IAAI,CAAC5B,aAAa,CAAC4B,KAAK,CAAC,uBAAuB,CAAC;QACjD;MACF,KAAK,6BAA6B;QAChC,IAAI,CAAC5B,aAAa,CAAC4B,KAAK,CAAC,6BAA6B,CAAC;QACvD;IACJ;IACA,OAAOnC,UAAU,CAACoC,OAAO,CAAC;EAC5B;EAEAC,KAAKA,CAAClB,IAAmB;IACvBA,IAAI,CAACC,iBAAiB,GAAG,IAAI;IAC7B,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAuB,6EAA6ElB,WAAW,CAACmB,MAAM,EAAE,EAAEH,IAAI,CAAC,CACjJI,IAAI,CACHrB,GAAG,CAAEsB,KAAK,IAAI;MACZ,MAAMC,QAAQ,GAAsB;QAClCC,SAAS,EAAEF,KAAK,CAACG,KAAK;QACtBC,WAAW,EAAEJ,KAAK,CAACI,WAAW;QAC9BC,QAAQ,EAAEL,KAAK,CAACK;OACjB;MACDzB,WAAW,CAACkC,QAAQ,CAACd,KAAK,CAAC;MAC3B,IAAI,CAAChB,gBAAgB,CAACS,IAAI,CAAC,IAAI,CAAC;MAChC,IAAI,CAACR,YAAY,CAACQ,IAAI,CAACQ,QAAQ,CAAC;MAChCb,YAAY,CAACmB,OAAO,CAAC,UAAU,EAAUP,KAAK,CAACQ,OAAO,CAAC;IACzD,CAAC,CAAC,EACF/B,UAAU,CAAC,IAAI,CAACsC,gBAAgB,CAACL,IAAI,CAAC,IAAI,CAAC,CAAC,CAC7C;EACL;EAEAK,gBAAgBA,CAACJ,KAAwB;IACvC,MAAM;MAACC;IAAO,CAAC,GAAGD,KAAK,CAACA,KAAK,CAACA,KAAK;IAEnC,QAAQC,OAAO;MACb,KAAK,eAAe;QAClB,IAAI,CAAC7B,aAAa,CAAC4B,KAAK,CAAC,eAAe,CAAC;QACzC;MACF,KAAK,kBAAkB;QACrB,IAAI,CAAC5B,aAAa,CAAC4B,KAAK,CAAC,kBAAkB,CAAC;QAC5C;MACF,KAAK,iBAAiB;QACpB,IAAI,CAAC5B,aAAa,CAAC4B,KAAK,CAAC,iBAAiB,CAAC;QAC3C;IACJ;IACA,OAAOnC,UAAU,CAACmC,KAAK,CAAC;EAC1B;EAEAK,cAAcA,CAACC,IAA0B;IACvC,OAAO,IAAI,CAAChC,YAAY,CAACQ,IAAI,CAACwB,IAAI,CAAC;EACrC;EAEAC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACjC,YAAY;EAC1B;EAEAkC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACnC,gBAAgB;EAC9B;EAEAQ,MAAMA,CAAA;IACJZ,WAAW,CAACkC,QAAQ,CAAC,IAAI,CAAC;IAC1B,IAAI,CAACM,wBAAwB,CAAC,KAAK,CAAC;EACtC;EAEAA,wBAAwBA,CAACC,MAAe;IACtC,IAAI,CAACrC,gBAAgB,CAACS,IAAI,CAAC4B,MAAM,CAAC;EACpC;EAEQ,OAAOf,cAAcA,CAACgB,QAAyC;IACrE,IAAIA,QAAQ,EAAE;MACZ,MAAMC,YAAY,GAAG,IAAIjC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,GAAG,CAAS+B,QAAQ,CAACE,SAAS,GAAG,IAAI,CAAC;MAE9EpC,YAAY,CAACmB,OAAO,CAAC,UAAU,EAAUe,QAAQ,CAACd,OAAO,CAAC;MAC1DpB,YAAY,CAACmB,OAAO,CAAC,cAAc,EAAEgB,YAAY,CAACE,QAAQ,EAAE,CAAC;IAC/D,CAAC,MAAM;MACLrC,YAAY,CAACsC,KAAK,EAAE;IACtB;EACF;EAEQ,OAAOZ,QAAQA,CAACQ,QAAqC;IAC3D,IAAIA,QAAQ,EAAE;MACZ,MAAMC,YAAY,GAAG,IAAIjC,IAAI,CAACA,IAAI,CAACC,GAAG,EAAE,GAAG,CAAS+B,QAAQ,CAACE,SAAS,GAAG,IAAI,CAAC;MAE9EpC,YAAY,CAACmB,OAAO,CAAC,UAAU,EAAUe,QAAQ,CAACd,OAAO,CAAC;MAC1DpB,YAAY,CAACmB,OAAO,CAAC,cAAc,EAAEgB,YAAY,CAACE,QAAQ,EAAE,CAAC;IAC/D,CAAC,MAAM;MACLrC,YAAY,CAACsC,KAAK,EAAE;IACtB;EACF;;;mBAtIW9C,WAAW,EAAA+C,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,aAAA;AAAA;;SAAXpD,WAAW;EAAAqD,OAAA,EAAXrD,WAAW,CAAAsD,IAAA;EAAAC,UAAA,EAFV;AAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}