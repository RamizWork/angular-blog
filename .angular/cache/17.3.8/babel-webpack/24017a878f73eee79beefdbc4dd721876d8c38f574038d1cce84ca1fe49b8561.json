{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class SearchPipe {\n  transform(posts, searchPost = '') {\n    if (!searchPost.trim()) {\n      return posts;\n    }\n    return posts.filter(post => {\n      return post.title.toLowerCase().includes(searchPost.toLowerCase());\n    });\n  }\n}\nSearchPipe.ɵfac = function SearchPipe_Factory(t) {\n  return new (t || SearchPipe)();\n};\nSearchPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"searchPosts\",\n  type: SearchPipe,\n  pure: true\n});","map":{"version":3,"names":["SearchPipe","transform","posts","searchPost","trim","filter","post","title","toLowerCase","includes","pure"],"sources":["C:\\Progect for learning\\angular-blog\\src\\app\\admin\\shared\\pipe\\search.pipe.ts"],"sourcesContent":["import {Pipe, PipeTransform} from \"@angular/core\";\r\nimport {PostInterface} from \"../interfaces/post.interface\";\r\n\r\n@Pipe({\r\n  name: 'searchPosts'\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n  transform(posts: PostInterface[], searchPost = ''): PostInterface[] | undefined {\r\n    if (!searchPost.trim()) {\r\n      return posts;\r\n    }\r\n    return posts!.filter((post: PostInterface) => {\r\n      return post.title.toLowerCase().includes(searchPost.toLowerCase());\r\n    })\r\n  }\r\n}\r\n"],"mappings":";AAMA,OAAM,MAAOA,UAAU;EACrBC,SAASA,CAACC,KAAsB,EAAEC,UAAU,GAAG,EAAE;IAC/C,IAAI,CAACA,UAAU,CAACC,IAAI,EAAE,EAAE;MACtB,OAAOF,KAAK;IACd;IACA,OAAOA,KAAM,CAACG,MAAM,CAAEC,IAAmB,IAAI;MAC3C,OAAOA,IAAI,CAACC,KAAK,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACN,UAAU,CAACK,WAAW,EAAE,CAAC;IACpE,CAAC,CAAC;EACJ;;;mBARWR,UAAU;AAAA;;;QAAVA,UAAU;EAAAU,IAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}