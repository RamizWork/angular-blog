{"ast":null,"code":"import _asyncToGenerator from \"C:/Progect for learning/angular-blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, SecurityContext, PLATFORM_ID, Directive, Input, Output, ElementRef, ChangeDetectorRef, Renderer2, NgZone, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { defer, Subscription, fromEvent } from 'rxjs';\nimport { shareReplay, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\nfunction QuillEditorComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\nfunction QuillEditorComponent_ng_container_0_pre_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 2);\n  }\n}\nfunction QuillEditorComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, QuillEditorComponent_ng_container_0_div_1_Template, 1, 0, \"div\", 1)(2, QuillEditorComponent_ng_container_0_pre_2_Template, 1, 0, \"pre\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.preserve);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.preserve);\n  }\n}\nfunction QuillEditorComponent_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\nfunction QuillEditorComponent_ng_container_2_pre_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 2);\n  }\n}\nfunction QuillEditorComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, QuillEditorComponent_ng_container_2_div_1_Template, 1, 0, \"div\", 1)(2, QuillEditorComponent_ng_container_2_pre_2_Template, 1, 0, \"pre\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.preserve);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.preserve);\n  }\n}\nfunction QuillViewComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 1);\n  }\n}\nfunction QuillViewComponent_pre_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 1);\n  }\n}\nconst defaultModules = {\n  toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n    header: 1\n  }, {\n    header: 2\n  }], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }], [{\n    script: 'sub'\n  }, {\n    script: 'super'\n  }], [{\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], [{\n    direction: 'rtl'\n  }], [{\n    size: ['small', false, 'large', 'huge']\n  }], [{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], [{\n    color: []\n  }, {\n    background: []\n  }], [{\n    font: []\n  }], [{\n    align: []\n  }], ['clean'], ['link', 'image', 'video'] // link and image, video\n  ]\n};\nconst getFormat = (format, configFormat) => {\n  const passedFormat = format || configFormat;\n  return passedFormat || 'html';\n};\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n  providedIn: 'root',\n  factory: () => ({\n    modules: defaultModules\n  })\n});\nclass QuillService {\n  constructor(injector, config) {\n    var _this = this;\n    this.config = config;\n    this.quill$ = defer( /*#__PURE__*/_asyncToGenerator(function* () {\n      if (!_this.Quill) {\n        // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n        // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n        // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n        const maybePatchedAddEventListener = _this.document.addEventListener;\n        // There're 2 types of Angular applications:\n        // 1) zone-full (by default)\n        // 2) zone-less\n        // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n        // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n        // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n        // this means the `zone.js` is not imported.\n        // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n        // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n        _this.document.addEventListener = _this.document['__zone_symbol__addEventListener'] || _this.document.addEventListener;\n        const quillImport = yield import('quill');\n        _this.document.addEventListener = maybePatchedAddEventListener;\n        _this.Quill = quillImport.default ? quillImport.default : quillImport;\n      }\n      // Only register custom options and modules once\n      _this.config.customOptions?.forEach(customOption => {\n        const newCustomOption = _this.Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        _this.Quill.register(newCustomOption, true, _this.config.suppressGlobalRegisterWarning);\n      });\n      _this.config.customModules?.forEach(({\n        implementation,\n        path\n      }) => {\n        _this.Quill.register(path, implementation, _this.config.suppressGlobalRegisterWarning);\n      });\n      return _this.Quill;\n    })).pipe(shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n    this.document = injector.get(DOCUMENT);\n    if (!this.config) {\n      this.config = {\n        modules: defaultModules\n      };\n    }\n  }\n  getQuill() {\n    return this.quill$;\n  }\n}\nQuillService.ɵfac = function QuillService_Factory(t) {\n  return new (t || QuillService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(QUILL_CONFIG_TOKEN, 8));\n};\nQuillService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: QuillService,\n  factory: QuillService.ɵfac,\n  providedIn: 'root'\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [QUILL_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})();\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    this.elementRef = elementRef;\n    this.cd = cd;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.required = false;\n    this.customToolbarPosition = 'top';\n    this.styles = null;\n    this.strict = true;\n    this.customOptions = [];\n    this.customModules = [];\n    this.preserveWhitespace = false;\n    this.trimOnValidation = false;\n    this.compareValues = false;\n    this.filterNull = false;\n    /*\n    https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n           provide default empty value\n    by default null\n           e.g. defaultEmptyValue=\"\" - empty string\n           <quill-editor\n      defaultEmptyValue=\"\"\n      formControlName=\"message\"\n    ></quill-editor>\n    */\n    this.defaultEmptyValue = null;\n    this.onEditorCreated = new EventEmitter();\n    this.onEditorChanged = new EventEmitter();\n    this.onContentChanged = new EventEmitter();\n    this.onSelectionChanged = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.disabled = false; // used to store initial value before ViewInit\n    this.preserve = false;\n    this.toolbarPosition = 'top';\n    this.subscription = null;\n    this.quillSubscription = null;\n    this.valueGetter = (quillEditor, editorElement) => {\n      let html = editorElement.querySelector('.ql-editor').innerHTML;\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n      let modelValue = html;\n      const format = getFormat(this.format, this.service.config.format);\n      if (format === 'text') {\n        modelValue = quillEditor.getText();\n      } else if (format === 'object') {\n        modelValue = quillEditor.getContents();\n      } else if (format === 'json') {\n        try {\n          modelValue = JSON.stringify(quillEditor.getContents());\n        } catch (e) {\n          modelValue = quillEditor.getText();\n        }\n      }\n      return modelValue;\n    };\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      if (format === 'html') {\n        const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n        if (sanitize) {\n          value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n        }\n        return quillEditor.clipboard.convert(value);\n      } else if (format === 'json') {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return [{\n            insert: value\n          }];\n        }\n      }\n      return value;\n    };\n    this.selectionChangeHandler = (range, oldRange, source) => {\n      const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n      // only emit changes when there's any listener\n      if (!this.onBlur.observers.length && !this.onFocus.observers.length && !this.onSelectionChanged.observers.length && !shouldTriggerOnModelTouched) {\n        return;\n      }\n      this.zone.run(() => {\n        if (range === null) {\n          this.onBlur.emit({\n            editor: this.quillEditor,\n            source\n          });\n        } else if (oldRange === null) {\n          this.onFocus.emit({\n            editor: this.quillEditor,\n            source\n          });\n        }\n        this.onSelectionChanged.emit({\n          editor: this.quillEditor,\n          oldRange,\n          range,\n          source\n        });\n        if (shouldTriggerOnModelTouched) {\n          this.onModelTouched();\n        }\n        this.cd.markForCheck();\n      });\n    };\n    this.textChangeHandler = (delta, oldDelta, source) => {\n      // only emit changes emitted by user interactions\n      const text = this.quillEditor.getText();\n      const content = this.quillEditor.getContents();\n      let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n      const trackChanges = this.trackChanges || this.service.config.trackChanges;\n      const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n      // only emit changes when there's any listener\n      if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n        return;\n      }\n      this.zone.run(() => {\n        if (shouldTriggerOnModelChange) {\n          this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n        }\n        this.onContentChanged.emit({\n          content,\n          delta,\n          editor: this.quillEditor,\n          html,\n          oldDelta,\n          source,\n          text\n        });\n        this.cd.markForCheck();\n      });\n    };\n    // eslint-disable-next-line max-len\n    this.editorChangeHandler = (event, current, old, source) => {\n      // only emit changes when there's any listener\n      if (!this.onEditorChanged.observers.length) {\n        return;\n      }\n      // only emit changes emitted by user interactions\n      if (event === 'text-change') {\n        const text = this.quillEditor.getText();\n        const content = this.quillEditor.getContents();\n        let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n        if (html === '<p><br></p>' || html === '<div><br></div>') {\n          html = this.defaultEmptyValue;\n        }\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            content,\n            delta: current,\n            editor: this.quillEditor,\n            event,\n            html,\n            oldDelta: old,\n            source,\n            text\n          });\n          this.cd.markForCheck();\n        });\n      } else {\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            editor: this.quillEditor,\n            event,\n            oldRange: old,\n            range: current,\n            source\n          });\n          this.cd.markForCheck();\n        });\n      }\n    };\n    this.document = injector.get(DOCUMENT);\n  }\n  static normalizeClassNames(classes) {\n    const classList = classes.trim().split(' ');\n    return classList.reduce((prev, cur) => {\n      const trimmed = cur.trim();\n      if (trimmed) {\n        prev.push(trimmed);\n      }\n      return prev;\n    }, []);\n  }\n  ngOnInit() {\n    this.preserve = this.preserveWhitespace;\n    this.toolbarPosition = this.customToolbarPosition;\n  }\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n    // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    this.quillSubscription = this.service.getQuill().subscribe(Quill => {\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n      const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n      if (toolbarElem) {\n        modules.toolbar = toolbarElem;\n      } else if (modules.toolbar === undefined) {\n        modules.toolbar = defaultModules.toolbar;\n      }\n      let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n      if (placeholder === undefined) {\n        placeholder = 'Insert text here ...';\n      }\n      if (this.styles) {\n        Object.keys(this.styles).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n      if (this.classes) {\n        this.addClasses(this.classes);\n      }\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      this.customModules.forEach(({\n        implementation,\n        path\n      }) => {\n        Quill.register(path, implementation);\n      });\n      let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n      if (!bounds) {\n        bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n      }\n      let debug = this.debug;\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n      let readOnly = this.readOnly;\n      if (!readOnly && this.readOnly !== false) {\n        readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n      }\n      let defaultEmptyValue = this.defaultEmptyValue;\n      if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n        defaultEmptyValue = this.service.config.defaultEmptyValue;\n      }\n      let scrollingContainer = this.scrollingContainer;\n      if (!scrollingContainer && this.scrollingContainer !== null) {\n        scrollingContainer = this.service.config.scrollingContainer === null || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n      }\n      let formats = this.formats;\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? [...this.service.config.formats] : this.service.config.formats === null ? null : undefined;\n      }\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          bounds,\n          debug: debug,\n          formats: formats,\n          modules,\n          placeholder,\n          readOnly,\n          defaultEmptyValue,\n          scrollingContainer: scrollingContainer,\n          strict: this.strict,\n          theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n        });\n        // Set optional link placeholder, Quill has no native API for it so using workaround\n        if (this.linkPlaceholder) {\n          const tooltip = this.quillEditor?.theme?.tooltip;\n          const input = tooltip?.root?.querySelector('input[data-link]');\n          if (input?.dataset) {\n            input.dataset.link = this.linkPlaceholder;\n          }\n        }\n      });\n      if (this.content) {\n        const format = getFormat(this.format, this.service.config.format);\n        if (format === 'text') {\n          this.quillEditor.setText(this.content, 'silent');\n        } else {\n          const newValue = this.valueSetter(this.quillEditor, this.content);\n          this.quillEditor.setContents(newValue, 'silent');\n        }\n        this.quillEditor.getModule('history').clear();\n      }\n      // initialize disabled status based on this.disabled as default value\n      this.setDisabledState();\n      this.addQuillEventListeners();\n      // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n      if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n        return;\n      }\n      // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n      requestAnimationFrame(() => {\n        if (this.onValidatorChanged) {\n          this.onValidatorChanged();\n        }\n        this.onEditorCreated.emit(this.quillEditor);\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.dispose();\n    this.quillSubscription?.unsubscribe();\n    this.quillSubscription = null;\n  }\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    /* eslint-disable @typescript-eslint/dot-notation */\n    if (changes.readOnly) {\n      this.quillEditor.enable(!changes.readOnly.currentValue);\n    }\n    if (changes.placeholder) {\n      this.quillEditor.root.dataset.placeholder = changes.placeholder.currentValue;\n    }\n    if (changes.defaultEmptyValue) {\n      this.quillEditor.root.dataset.defaultEmptyValue = changes.defaultEmptyValue.currentValue;\n    }\n    if (changes.styles) {\n      const currentStyling = changes.styles.currentValue;\n      const previousStyling = changes.styles.previousValue;\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach(key => {\n          this.renderer.removeStyle(this.editorElem, key);\n        });\n      }\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n    }\n    if (changes.classes) {\n      const currentClasses = changes.classes.currentValue;\n      const previousClasses = changes.classes.previousValue;\n      if (previousClasses) {\n        this.removeClasses(previousClasses);\n      }\n      if (currentClasses) {\n        this.addClasses(currentClasses);\n      }\n    }\n    // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n    // `debounceTime` operator or vice-versa remove it.\n    if (changes.debounceTime) {\n      this.addQuillEventListeners();\n    }\n    /* eslint-enable @typescript-eslint/dot-notation */\n  }\n  addClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.addClass(this.editorElem, c);\n    });\n  }\n  removeClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.removeClass(this.editorElem, c);\n    });\n  }\n  writeValue(currentValue) {\n    // optional fix for https://github.com/angular/angular/issues/14988\n    if (this.filterNull && currentValue === null) {\n      return;\n    }\n    this.content = currentValue;\n    if (!this.quillEditor) {\n      return;\n    }\n    const format = getFormat(this.format, this.service.config.format);\n    const newValue = this.valueSetter(this.quillEditor, currentValue);\n    if (this.compareValues) {\n      const currentEditorValue = this.quillEditor.getContents();\n      if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n        return;\n      }\n    }\n    if (currentValue) {\n      if (format === 'text') {\n        this.quillEditor.setText(currentValue);\n      } else {\n        this.quillEditor.setContents(newValue);\n      }\n      return;\n    }\n    this.quillEditor.setText('');\n  }\n  setDisabledState(isDisabled = this.disabled) {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled;\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable();\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable();\n        }\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n      }\n    }\n  }\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n  registerOnValidatorChange(fn) {\n    this.onValidatorChanged = fn;\n  }\n  validate() {\n    if (!this.quillEditor) {\n      return null;\n    }\n    const err = {};\n    let valid = true;\n    const text = this.quillEditor.getText();\n    // trim text if wanted + handle special case that an empty editor contains a new line\n    const textLength = this.trimOnValidation ? text.trim().length : text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1;\n    const deltaOperations = this.quillEditor.getContents().ops;\n    const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      };\n      valid = false;\n    }\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      };\n      valid = false;\n    }\n    if (this.required && !textLength && onlyEmptyOperation) {\n      err.requiredError = {\n        empty: true\n      };\n      valid = false;\n    }\n    return valid ? null : err;\n  }\n  addQuillEventListeners() {\n    this.dispose();\n    // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n    // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n    // `zone.run` when we emit an event to the parent component.\n    this.zone.runOutsideAngular(() => {\n      this.subscription = new Subscription();\n      this.subscription.add(\n      // mark model as touched if editor lost focus\n      fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n        this.selectionChangeHandler(range, oldRange, source);\n      }));\n      // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n      // will be invoked upon subscription and teardown.\n      let textChange$ = fromEvent(this.quillEditor, 'text-change');\n      let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n      if (typeof this.debounceTime === 'number') {\n        textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n        editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n      }\n      this.subscription.add(\n      // update model if text changes\n      textChange$.subscribe(([delta, oldDelta, source]) => {\n        this.textChangeHandler(delta, oldDelta, source);\n      }));\n      this.subscription.add(\n      // triggered if selection or text changed\n      editorChange$.subscribe(([event, current, old, source]) => {\n        this.editorChangeHandler(event, current, old, source);\n      }));\n    });\n  }\n  dispose() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n}\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) {\n  return new (t || QuillEditorBase)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService));\n};\nQuillEditorBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: QuillEditorBase,\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    readOnly: \"readOnly\",\n    placeholder: \"placeholder\",\n    maxLength: \"maxLength\",\n    minLength: \"minLength\",\n    required: \"required\",\n    formats: \"formats\",\n    customToolbarPosition: \"customToolbarPosition\",\n    sanitize: \"sanitize\",\n    styles: \"styles\",\n    strict: \"strict\",\n    scrollingContainer: \"scrollingContainer\",\n    bounds: \"bounds\",\n    customOptions: \"customOptions\",\n    customModules: \"customModules\",\n    trackChanges: \"trackChanges\",\n    preserveWhitespace: \"preserveWhitespace\",\n    classes: \"classes\",\n    trimOnValidation: \"trimOnValidation\",\n    linkPlaceholder: \"linkPlaceholder\",\n    compareValues: \"compareValues\",\n    filterNull: \"filterNull\",\n    debounceTime: \"debounceTime\",\n    defaultEmptyValue: \"defaultEmptyValue\",\n    valueGetter: \"valueGetter\",\n    valueSetter: \"valueSetter\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\",\n    onEditorChanged: \"onEditorChanged\",\n    onContentChanged: \"onContentChanged\",\n    onSelectionChanged: \"onSelectionChanged\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    customToolbarPosition: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    trackChanges: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    classes: [{\n      type: Input\n    }],\n    trimOnValidation: [{\n      type: Input\n    }],\n    linkPlaceholder: [{\n      type: Input\n    }],\n    compareValues: [{\n      type: Input\n    }],\n    filterNull: [{\n      type: Input\n    }],\n    debounceTime: [{\n      type: Input\n    }],\n    defaultEmptyValue: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }],\n    onEditorChanged: [{\n      type: Output\n    }],\n    onContentChanged: [{\n      type: Output\n    }],\n    onSelectionChanged: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    valueGetter: [{\n      type: Input\n    }],\n    valueSetter: [{\n      type: Input\n    }]\n  });\n})();\nclass QuillEditorComponent extends QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n  }\n}\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) {\n  return new (t || QuillEditorComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(Renderer2), i0.ɵɵdirectiveInject(NgZone), i0.ɵɵdirectiveInject(QuillService));\n};\nQuillEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillEditorComponent,\n  selectors: [[\"quill-editor\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }, {\n    multi: true,\n    provide: NG_VALIDATORS,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"quill-editor-element\", \"\", 4, \"ngIf\"], [\"quill-editor-element\", \"\"]],\n  template: function QuillEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵtemplate(0, QuillEditorComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵtemplate(2, QuillEditorComponent_ng_container_2_Template, 3, 2, \"ng-container\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.toolbarPosition !== \"top\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.toolbarPosition === \"top\");\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\":host{display:inline-block}\\n\"],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }, {\n        multi: true,\n        provide: NG_VALIDATORS,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }],\n      selector: 'quill-editor',\n      template: `\n  <ng-container *ngIf=\"toolbarPosition !== 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"toolbarPosition === 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n`,\n      styles: [`\n    :host {\n      display: inline-block;\n    }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2,\n      decorators: [{\n        type: Inject,\n        args: [Renderer2]\n      }]\n    }, {\n      type: i0.NgZone,\n      decorators: [{\n        type: Inject,\n        args: [NgZone]\n      }]\n    }, {\n      type: QuillService,\n      decorators: [{\n        type: Inject,\n        args: [QuillService]\n      }]\n    }];\n  }, null);\n})();\nclass QuillViewHTMLComponent {\n  constructor(sanitizer, service) {\n    this.sanitizer = sanitizer;\n    this.service = service;\n    this.content = '';\n    this.innerHTML = '';\n    this.themeClass = 'ql-snow';\n  }\n  ngOnChanges(changes) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    } else if (!this.theme) {\n      const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    }\n    if (changes.content) {\n      const content = changes.content.currentValue;\n      const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n      this.innerHTML = sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n  }\n}\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) {\n  return new (t || QuillViewHTMLComponent)(i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(QuillService));\n};\nQuillViewHTMLComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillViewHTMLComponent,\n  selectors: [[\"quill-view-html\"]],\n  inputs: {\n    content: \"content\",\n    theme: \"theme\",\n    sanitize: \"sanitize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]],\n  template: function QuillViewHTMLComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, i0.ɵɵsanitizeHtml);\n    }\n  },\n  dependencies: [i3.NgClass],\n  styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view-html',\n      styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n      template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n    }]\n  }], function () {\n    return [{\n      type: i1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: QuillService\n    }];\n  }, {\n    content: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }]\n  });\n})();\nclass QuillViewComponent {\n  constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.strict = true;\n    this.customModules = [];\n    this.customOptions = [];\n    this.preserveWhitespace = false;\n    this.onEditorCreated = new EventEmitter();\n    this.preserve = false;\n    this.quillSubscription = null;\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      let content = value;\n      if (format === 'text') {\n        quillEditor.setText(content);\n      } else {\n        if (format === 'html') {\n          const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n          if (sanitize) {\n            value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n          }\n          content = quillEditor.clipboard.convert(value);\n        } else if (format === 'json') {\n          try {\n            content = JSON.parse(value);\n          } catch (e) {\n            content = [{\n              insert: value\n            }];\n          }\n        }\n        quillEditor.setContents(content);\n      }\n    };\n  }\n  ngOnInit() {\n    this.preserve = this.preserveWhitespace;\n  }\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue);\n    }\n  }\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    }\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    this.quillSubscription = this.service.getQuill().subscribe(Quill => {\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n      modules.toolbar = false;\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      this.customModules.forEach(({\n        implementation,\n        path\n      }) => {\n        Quill.register(path, implementation);\n      });\n      let debug = this.debug;\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n      let formats = this.formats;\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? Object.assign({}, this.service.config.formats) : this.service.config.formats === null ? null : undefined;\n      }\n      const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          debug: debug,\n          formats: formats,\n          modules,\n          readOnly: true,\n          strict: this.strict,\n          theme\n        });\n      });\n      this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n      if (this.content) {\n        this.valueSetter(this.quillEditor, this.content);\n      }\n      // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n      if (!this.onEditorCreated.observers.length) {\n        return;\n      }\n      // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n      requestAnimationFrame(() => {\n        this.onEditorCreated.emit(this.quillEditor);\n      });\n    });\n  }\n  ngOnDestroy() {\n    this.quillSubscription?.unsubscribe();\n    this.quillSubscription = null;\n  }\n}\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) {\n  return new (t || QuillViewComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\nQuillViewComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillViewComponent,\n  selectors: [[\"quill-view\"]],\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    formats: \"formats\",\n    sanitize: \"sanitize\",\n    strict: \"strict\",\n    content: \"content\",\n    customModules: \"customModules\",\n    customOptions: \"customOptions\",\n    preserveWhitespace: \"preserveWhitespace\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"quill-view-element\", \"\", 4, \"ngIf\"], [\"quill-view-element\", \"\"]],\n  template: function QuillViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, QuillViewComponent_div_0_Template, 1, 0, \"div\", 0)(1, QuillViewComponent_pre_1_Template, 1, 0, \"pre\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.preserve);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.preserve);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\".ql-container.ngx-quill-view{border:0}\\n\"],\n  encapsulation: 2\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view',\n      styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n      template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }]\n  });\n})();\nclass QuillModule {\n  static forRoot(config) {\n    return {\n      ngModule: QuillModule,\n      providers: [{\n        provide: QUILL_CONFIG_TOKEN,\n        useValue: config\n      }]\n    };\n  }\n}\nQuillModule.ɵfac = function QuillModule_Factory(t) {\n  return new (t || QuillModule)();\n};\nQuillModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: QuillModule\n});\nQuillModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };","map":{"version":3,"names":["i3","DOCUMENT","isPlatformServer","CommonModule","i0","InjectionToken","Injectable","Optional","Inject","EventEmitter","SecurityContext","PLATFORM_ID","Directive","Input","Output","ElementRef","ChangeDetectorRef","Renderer2","NgZone","forwardRef","Component","ViewEncapsulation","NgModule","i1","DomSanitizer","defer","Subscription","fromEvent","shareReplay","debounceTime","NG_VALUE_ACCESSOR","NG_VALIDATORS","_c0","_c1","QuillEditorComponent_ng_container_0_div_1_Template","rf","ctx","ɵɵelement","QuillEditorComponent_ng_container_0_pre_2_Template","QuillEditorComponent_ng_container_0_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","preserve","QuillEditorComponent_ng_container_2_div_1_Template","QuillEditorComponent_ng_container_2_pre_2_Template","QuillEditorComponent_ng_container_2_Template","QuillViewComponent_div_0_Template","QuillViewComponent_pre_1_Template","defaultModules","toolbar","header","list","script","indent","direction","size","color","background","font","align","getFormat","format","configFormat","passedFormat","QUILL_CONFIG_TOKEN","providedIn","factory","modules","QuillService","constructor","injector","config","_this","quill$","_asyncToGenerator","Quill","maybePatchedAddEventListener","document","addEventListener","quillImport","default","customOptions","forEach","customOption","newCustomOption","import","whitelist","register","suppressGlobalRegisterWarning","customModules","implementation","path","pipe","bufferSize","refCount","get","getQuill","ɵfac","QuillService_Factory","t","ɵɵinject","Injector","ɵprov","ɵɵdefineInjectable","token","ngDevMode","ɵsetClassMetadata","type","args","undefined","decorators","QuillEditorBase","elementRef","cd","domSanitizer","platformId","renderer","zone","service","required","customToolbarPosition","styles","strict","preserveWhitespace","trimOnValidation","compareValues","filterNull","defaultEmptyValue","onEditorCreated","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","disabled","toolbarPosition","subscription","quillSubscription","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","e","valueSetter","value","sanitize","includes","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","source","shouldTriggerOnModelTouched","onModelTouched","observers","length","run","emit","editor","markForCheck","textChangeHandler","delta","oldDelta","text","content","editorElem","trackChanges","shouldTriggerOnModelChange","onModelChange","editorChangeHandler","event","current","old","normalizeClassNames","classes","classList","trim","split","reduce","prev","cur","trimmed","push","ngOnInit","ngAfterViewInit","subscribe","nativeElement","toolbarElem","Object","assign","placeholder","keys","key","setStyle","addClasses","bounds","body","debug","readOnly","hasOwnProperty","scrollingContainer","formats","runOutsideAngular","theme","linkPlaceholder","tooltip","input","root","dataset","link","setText","newValue","setContents","getModule","clear","setDisabledState","addQuillEventListeners","onValidatorChanged","requestAnimationFrame","ngOnDestroy","dispose","unsubscribe","ngOnChanges","changes","enable","currentValue","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","c","addClass","removeClass","writeValue","currentEditorValue","isDisabled","disable","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","registerOnValidatorChange","validate","err","valid","textLength","deltaOperations","ops","onlyEmptyOperation","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","add","textChange$","editorChange$","QuillEditorBase_Factory","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","inputs","outputs","features","ɵɵNgOnChangesFeature","QuillEditorComponent","QuillEditorComponent_Factory","ɵcmp","ɵɵdefineComponent","selectors","ɵɵProvidersFeature","multi","provide","useExisting","ɵɵInheritDefinitionFeature","ngContentSelectors","decls","vars","consts","template","QuillEditorComponent_Template","ɵɵprojectionDef","ɵɵprojection","dependencies","NgIf","encapsulation","None","providers","selector","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","QuillViewHTMLComponent_Factory","QuillViewHTMLComponent_Template","ɵɵelementStart","ɵɵelementEnd","ɵɵsanitizeHtml","NgClass","QuillViewComponent","QuillViewComponent_Factory","QuillViewComponent_Template","QuillModule","forRoot","ngModule","useValue","QuillModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["C:/Progect for learning/angular-blog/node_modules/ngx-quill/fesm2020/ngx-quill.mjs"],"sourcesContent":["import * as i3 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, SecurityContext, PLATFORM_ID, Directive, Input, Output, ElementRef, ChangeDetectorRef, Renderer2, NgZone, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { defer, Subscription, fromEvent } from 'rxjs';\nimport { shareReplay, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n    providedIn: 'root',\n    factory: () => ({ modules: defaultModules })\n});\n\nclass QuillService {\n    constructor(injector, config) {\n        this.config = config;\n        this.quill$ = defer(async () => {\n            if (!this.Quill) {\n                // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n                // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n                // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n                const maybePatchedAddEventListener = this.document.addEventListener;\n                // There're 2 types of Angular applications:\n                // 1) zone-full (by default)\n                // 2) zone-less\n                // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n                // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n                // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n                // this means the `zone.js` is not imported.\n                // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n                // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n                // eslint-disable-next-line @typescript-eslint/dot-notation\n                this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener;\n                const quillImport = await import('quill');\n                this.document.addEventListener = maybePatchedAddEventListener;\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n            }\n            // Only register custom options and modules once\n            this.config.customOptions?.forEach((customOption) => {\n                const newCustomOption = this.Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n            });\n            this.config.customModules?.forEach(({ implementation, path }) => {\n                this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n            });\n            return this.Quill;\n        }).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n        this.document = injector.get(DOCUMENT);\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        return this.quill$;\n    }\n}\nQuillService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillService, deps: [{ token: i0.Injector }, { token: QUILL_CONFIG_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nQuillService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [QUILL_CONFIG_TOKEN]\n                }] }]; } });\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        this.elementRef = elementRef;\n        this.cd = cd;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.compareValues = false;\n        this.filterNull = false;\n        /*\n        https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n      \n        provide default empty value\n        by default null\n      \n        e.g. defaultEmptyValue=\"\" - empty string\n      \n        <quill-editor\n          defaultEmptyValue=\"\"\n          formControlName=\"message\"\n        ></quill-editor>\n        */\n        this.defaultEmptyValue = null;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.preserve = false;\n        this.toolbarPosition = 'top';\n        this.subscription = null;\n        this.quillSubscription = null;\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                if (sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observers.length &&\n                !this.onFocus.observers.length &&\n                !this.onSelectionChanged.observers.length &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n                this.cd.markForCheck();\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n                this.cd.markForCheck();\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observers.length) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = this.defaultEmptyValue;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n            else {\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        editor: this.quillEditor,\n                        event,\n                        oldRange: old,\n                        range: current,\n                        source\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n        };\n        this.document = injector.get(DOCUMENT);\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n        this.toolbarPosition = this.customToolbarPosition;\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n        // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        this.quillSubscription = this.service.getQuill().subscribe(Quill => {\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let defaultEmptyValue = this.defaultEmptyValue;\n            if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n                defaultEmptyValue = this.service.config.defaultEmptyValue;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    defaultEmptyValue,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n                // Set optional link placeholder, Quill has no native API for it so using workaround\n                if (this.linkPlaceholder) {\n                    const tooltip = this.quillEditor?.theme?.tooltip;\n                    const input = tooltip?.root?.querySelector('input[data-link]');\n                    if (input?.dataset) {\n                        input.dataset.link = this.linkPlaceholder;\n                    }\n                }\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else {\n                    const newValue = this.valueSetter(this.quillEditor, this.content);\n                    this.quillEditor.setContents(newValue, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            this.addQuillEventListeners();\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.dispose();\n        this.quillSubscription?.unsubscribe();\n        this.quillSubscription = null;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.defaultEmptyValue) {\n            this.quillEditor.root.dataset.defaultEmptyValue =\n                changes.defaultEmptyValue.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n        // `debounceTime` operator or vice-versa remove it.\n        if (changes.debounceTime) {\n            this.addQuillEventListeners();\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        // optional fix for https://github.com/angular/angular/issues/14988\n        if (this.filterNull && currentValue === null) {\n            return;\n        }\n        this.content = currentValue;\n        if (!this.quillEditor) {\n            return;\n        }\n        const format = getFormat(this.format, this.service.config.format);\n        const newValue = this.valueSetter(this.quillEditor, currentValue);\n        if (this.compareValues) {\n            const currentEditorValue = this.quillEditor.getContents();\n            if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n                return;\n            }\n        }\n        if (currentValue) {\n            if (format === 'text') {\n                this.quillEditor.setText(currentValue);\n            }\n            else {\n                this.quillEditor.setContents(newValue);\n            }\n            return;\n        }\n        this.quillEditor.setText('');\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        const deltaOperations = this.quillEditor.getContents().ops;\n        const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength && onlyEmptyOperation) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n    addQuillEventListeners() {\n        this.dispose();\n        // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n        // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n        // `zone.run` when we emit an event to the parent component.\n        this.zone.runOutsideAngular(() => {\n            this.subscription = new Subscription();\n            this.subscription.add(\n            // mark model as touched if editor lost focus\n            fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n                this.selectionChangeHandler(range, oldRange, source);\n            }));\n            // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n            // will be invoked upon subscription and teardown.\n            let textChange$ = fromEvent(this.quillEditor, 'text-change');\n            let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n            if (typeof this.debounceTime === 'number') {\n                textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n                editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n            }\n            this.subscription.add(\n            // update model if text changes\n            textChange$.subscribe(([delta, oldDelta, source]) => {\n                this.textChangeHandler(delta, oldDelta, source);\n            }));\n            this.subscription.add(\n            // triggered if selection or text changed\n            editorChange$.subscribe(([event, current, old, source]) => {\n                this.editorChangeHandler(event, current, old, source);\n            }));\n        });\n    }\n    dispose() {\n        if (this.subscription !== null) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n}\nQuillEditorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillEditorBase, deps: [{ token: i0.Injector }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.DomSanitizer }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Directive });\nQuillEditorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.3\", type: QuillEditorBase, inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", required: \"required\", formats: \"formats\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", styles: \"styles\", strict: \"strict\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", customOptions: \"customOptions\", customModules: \"customModules\", trackChanges: \"trackChanges\", preserveWhitespace: \"preserveWhitespace\", classes: \"classes\", trimOnValidation: \"trimOnValidation\", linkPlaceholder: \"linkPlaceholder\", compareValues: \"compareValues\", filterNull: \"filterNull\", debounceTime: \"debounceTime\", defaultEmptyValue: \"defaultEmptyValue\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillEditorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }]; }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], customToolbarPosition: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], scrollingContainer: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], trackChanges: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], classes: [{\n                type: Input\n            }], trimOnValidation: [{\n                type: Input\n            }], linkPlaceholder: [{\n                type: Input\n            }], compareValues: [{\n                type: Input\n            }], filterNull: [{\n                type: Input\n            }], debounceTime: [{\n                type: Input\n            }], defaultEmptyValue: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }], onEditorChanged: [{\n                type: Output\n            }], onContentChanged: [{\n                type: Output\n            }], onSelectionChanged: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], valueGetter: [{\n                type: Input\n            }], valueSetter: [{\n                type: Input\n            }] } });\nclass QuillEditorComponent extends QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n    }\n}\nQuillEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillEditorComponent, deps: [{ token: i0.Injector }, { token: ElementRef }, { token: ChangeDetectorRef }, { token: DomSanitizer }, { token: PLATFORM_ID }, { token: Renderer2 }, { token: NgZone }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component });\nQuillEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.3\", type: QuillEditorComponent, selector: \"quill-editor\", providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => QuillEditorComponent)\n        },\n        {\n            multi: true,\n            provide: NG_VALIDATORS,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => QuillEditorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: `\n  <ng-container *ngIf=\"toolbarPosition !== 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"toolbarPosition === 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n`, isInline: true, styles: [\":host{display:inline-block}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALIDATORS,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        }\n                    ],\n                    selector: 'quill-editor',\n                    template: `\n  <ng-container *ngIf=\"toolbarPosition !== 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"toolbarPosition === 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n`,\n                    styles: [\n                        `\n    :host {\n      display: inline-block;\n    }\n    `\n                    ]\n                }]\n        }], ctorParameters: function () { return [{ type: i0.Injector }, { type: i0.ElementRef, decorators: [{\n                    type: Inject,\n                    args: [ElementRef]\n                }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                    type: Inject,\n                    args: [ChangeDetectorRef]\n                }] }, { type: i1.DomSanitizer, decorators: [{\n                    type: Inject,\n                    args: [DomSanitizer]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }, { type: i0.Renderer2, decorators: [{\n                    type: Inject,\n                    args: [Renderer2]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Inject,\n                    args: [NgZone]\n                }] }, { type: QuillService, decorators: [{\n                    type: Inject,\n                    args: [QuillService]\n                }] }]; } });\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            const content = changes.content.currentValue;\n            const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n            this.innerHTML = sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n        }\n    }\n}\nQuillViewHTMLComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillViewHTMLComponent, deps: [{ token: DomSanitizer }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component });\nQuillViewHTMLComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.3\", type: QuillViewHTMLComponent, selector: \"quill-view-html\", inputs: { content: \"content\", theme: \"theme\", sanitize: \"sanitize\" }, usesOnChanges: true, ngImport: i0, template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillViewHTMLComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'quill-view-html',\n                    styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n                    template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n                }]\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer, decorators: [{\n                    type: Inject,\n                    args: [DomSanitizer]\n                }] }, { type: QuillService }]; }, propDecorators: { content: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }] } });\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.preserve = false;\n        this.quillSubscription = null;\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                    if (sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        this.quillSubscription = this.service.getQuill().subscribe(Quill => {\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.quillSubscription?.unsubscribe();\n        this.quillSubscription = null;\n    }\n}\nQuillViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillViewComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }, { token: i1.DomSanitizer }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nQuillViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.3\", type: QuillViewComponent, selector: \"quill-view\", inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", sanitize: \"sanitize\", strict: \"strict\", content: \"content\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\" }, outputs: { onEditorCreated: \"onEditorCreated\" }, usesOnChanges: true, ngImport: i0, template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view{border:0}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillViewComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'quill-view',\n                    styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n                    template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }, { type: i1.DomSanitizer }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }] } });\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nQuillModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQuillModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillModule, declarations: [QuillEditorComponent,\n        QuillViewComponent,\n        QuillViewHTMLComponent], imports: [CommonModule], exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] });\nQuillModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        QuillEditorComponent,\n                        QuillViewComponent,\n                        QuillViewHTMLComponent\n                    ],\n                    exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                    imports: [CommonModule],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}