{"ast":null,"code":"import { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { switchMap, tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../shared/services/user.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/checkbox\";\nconst _c0 = [\"passwordInput\"];\nconst _c1 = a0 => ({\n  invalid: a0\n});\nfunction LoginPageComponent_div_8_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Email must not be empty\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_div_8_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \"Enter correct email\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, LoginPageComponent_div_8_small_1_Template, 2, 0, \"small\", 13)(2, LoginPageComponent_div_8_small_2_Template, 2, 0, \"small\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_3_0;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.get(\"email\").touched && ((tmp_3_0 = ctx_r1.form.get(\"email\").errors) == null ? null : tmp_3_0.required));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.get(\"email\").touched && ctx_r1.form.get(\"email\").invalid);\n  }\n}\nfunction LoginPageComponent_div_14_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1, \" Password must not be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPageComponent_div_14_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_4_0;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" Length password not be less \", (tmp_4_0 = ctx_r1.form.get(\"password\")) == null ? null : tmp_4_0.errors.minlength.requiredLength, \" symbols. Now quantity \", (tmp_4_0 = ctx_r1.form.get(\"password\")) == null ? null : tmp_4_0.errors.minlength.actualLength, \" \");\n  }\n}\nfunction LoginPageComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵtemplate(1, LoginPageComponent_div_14_small_1_Template, 2, 0, \"small\", 13)(2, LoginPageComponent_div_14_small_2_Template, 2, 2, \"small\", 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_3_0;\n    let tmp_4_0;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.form.get(\"password\").touched && ((tmp_3_0 = ctx_r1.form.get(\"password\").errors) == null ? null : tmp_3_0.required));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx_r1.form.get(\"password\")) == null ? null : tmp_4_0.errors.minlength);\n  }\n}\nfunction LoginPageComponent_ng_container_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nexport class LoginPageComponent {\n  constructor(authService, router, userService) {\n    this.authService = authService;\n    this.router = router;\n    this.userService = userService;\n    this.isSubmitted = false;\n  }\n  ngOnInit() {\n    this.initialize();\n  }\n  initialize() {\n    this.form = new FormGroup({\n      email: new FormControl(null, [Validators.required, Validators.email]),\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)])\n    });\n  }\n  submit() {\n    if (this.form.invalid) {\n      this.isSubmitted = true;\n    } else {\n      const user = {\n        email: this.form.value.email,\n        password: this.form.value.password\n      };\n      this.login$ = this.authService.login(user).pipe(switchMap(() => {\n        return this.userService.getUserData();\n      }), tap(() => {\n        this.form.reset();\n        this.router.navigate(['/admin', 'dashboard']);\n        this.isSubmitted = false;\n      }));\n    }\n  }\n  changeShowPassword(event) {\n    var _a, _b;\n    if (event.checked) {\n      (_a = this.passwordInput) === null || _a === void 0 ? void 0 : _a.nativeElement.setAttribute('type', 'text');\n    } else {\n      (_b = this.passwordInput) === null || _b === void 0 ? void 0 : _b.nativeElement.setAttribute('type', 'password');\n    }\n  }\n}\nLoginPageComponent.ɵfac = function LoginPageComponent_Factory(t) {\n  return new (t || LoginPageComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.UserService));\n};\nLoginPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPageComponent,\n  selectors: [[\"app-login-page\"]],\n  viewQuery: function LoginPageComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.passwordInput = _t.first);\n    }\n  },\n  decls: 23,\n  vars: 13,\n  consts: [[\"passwordInput\", \"\"], [\"checkBox\", \"\"], [1, \"card__wrapper\"], [1, \"card\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-control\", 3, \"ngClass\"], [\"for\", \"email\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\"], [\"class\", \"validation\", 4, \"ngIf\"], [\"for\", \"password\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\"], [1, \"checkbox__password\", 3, \"change\"], [1, \"button__wrapper\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [4, \"ngIf\"], [1, \"validation\"]],\n  template: function LoginPageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"mat-card\", 2)(1, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPageComponent_Template_form_ngSubmit_1_listener() {\n        i0.ɵɵrestoreView(_r1);\n        return i0.ɵɵresetView(ctx.submit());\n      });\n      i0.ɵɵelementStart(2, \"h2\");\n      i0.ɵɵtext(3, \"Login form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n      i0.ɵɵtext(6, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 6);\n      i0.ɵɵtemplate(8, LoginPageComponent_div_8_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 4)(10, \"label\", 8);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 9, 0);\n      i0.ɵɵtemplate(14, LoginPageComponent_div_14_Template, 3, 2, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"mat-checkbox\", 10, 1);\n      i0.ɵɵlistener(\"change\", function LoginPageComponent_Template_mat_checkbox_change_15_listener($event) {\n        i0.ɵɵrestoreView(_r1);\n        return i0.ɵɵresetView(ctx.changeShowPassword($event));\n      });\n      i0.ɵɵtext(17, \"Show password \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 11)(19, \"button\", 12);\n      i0.ɵɵtext(20, \"Login \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(21, LoginPageComponent_ng_container_21_Template, 1, 0, \"ng-container\", 13);\n      i0.ɵɵpipe(22, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1, ctx.form.get(\"email\").touched && ctx.form.get(\"email\").invalid));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"email\").touched && ctx.form.get(\"email\").invalid);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c1, ctx.form.get(\"password\").touched && ctx.form.get(\"password\").invalid));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.form.get(\"password\").touched && ctx.form.get(\"password\").invalid);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", ctx.form.invalid || ctx.isSubmitted);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(22, 7, ctx.login$));\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i5.NgClass, i5.NgIf, i4.FormGroupDirective, i4.FormControlName, i6.MatCard, i7.MatCheckbox, i5.AsyncPipe],\n  styles: [\".card__wrapper[_ngcontent-%COMP%] {\\n  background-color: white;\\n  max-width: 600px;\\n  color: black;\\n  margin: 0 auto;\\n}\\n.card__wrapper[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%] {\\n  max-width: 600px;\\n  margin: 0 auto;\\n}\\n.card__wrapper[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%] {\\n  color: #888;\\n}\\n.card__wrapper[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   mat-checkbox[_ngcontent-%COMP%]   .div__mat-check[_ngcontent-%COMP%] {\\n  z-index: 100;\\n  margin-left: -24px;\\n  margin-top: 7px;\\n  display: inline-block;\\n  border: 1px solid black;\\n  border-radius: 3px;\\n  height: 16px;\\n  width: 16px;\\n}\\n.card__wrapper[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   .validation[_ngcontent-%COMP%]   small[_ngcontent-%COMP%] {\\n  display: block;\\n}\\n.card__wrapper[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   .button__wrapper[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: flex-end;\\n}\\n.card__wrapper[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   .button__wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  background-color: #4351a9;\\n  width: 120px;\\n}\\n.card__wrapper[_ngcontent-%COMP%]   .card[_ngcontent-%COMP%]   .button__wrapper[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:disabled {\\n  background-color: #bdbdbd;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vbG9naW4tcGFnZS9sb2dpbi1wYWdlLmNvbXBvbmVudC5zY3NzIiwid2VicGFjazovLy4vLi4vLi4vUHJvZ2VjdCUyMGZvciUyMGxlYXJuaW5nL2FuZ3VsYXItYmxvZy9zcmMvYXBwL2FkbWluL2xvZ2luLXBhZ2UvbG9naW4tcGFnZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQ0NGO0FEQ0U7RUFDRSxnQkFBQTtFQUNBLGNBQUE7QUNDSjtBRENJO0VBQ0UsV0FBQTtBQ0NOO0FEQ007RUFDRSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSxlQUFBO0VBQ0EscUJBQUE7RUFDQSx1QkFBQTtFQUNBLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUNDUjtBRE1RO0VBQ0UsY0FBQTtBQ0pWO0FEU0k7RUFDRSxhQUFBO0VBQ0EseUJBQUE7QUNQTjtBRFNNO0VBQ0UseUJBQUE7RUFDQSxZQUFBO0FDUFI7QURTUTtFQUNFLHlCQUFBO0FDUFYiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZF9fd3JhcHBlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgbWF4LXdpZHRoOiA2MDBweDtcclxuICBjb2xvcjogYmxhY2s7XHJcbiAgbWFyZ2luOiAwIGF1dG87XHJcblxyXG4gIC5jYXJkIHtcclxuICAgIG1heC13aWR0aDogNjAwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuXHJcbiAgICBtYXQtY2hlY2tib3gge1xyXG4gICAgICBjb2xvcjogIzg4ODtcclxuXHJcbiAgICAgIC5kaXZfX21hdC1jaGVjayB7XHJcbiAgICAgICAgei1pbmRleDogMTAwO1xyXG4gICAgICAgIG1hcmdpbi1sZWZ0OiAtMjRweDtcclxuICAgICAgICBtYXJnaW4tdG9wOiA3cHg7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDNweDtcclxuICAgICAgICBoZWlnaHQ6IDE2cHg7XHJcbiAgICAgICAgd2lkdGg6IDE2cHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgLmZvcm0tY29udHJvbCB7XHJcbiAgICAgIC52YWxpZGF0aW9uIHtcclxuICAgICAgICBzbWFsbCB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAuYnV0dG9uX193cmFwcGVyIHtcclxuICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuXHJcbiAgICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzQzNTFhOTtcclxuICAgICAgICB3aWR0aDogMTIwcHg7XHJcblxyXG4gICAgICAgICY6ZGlzYWJsZWQge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2JkYmRiZDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcblxyXG4iLCIuY2FyZF9fd3JhcHBlciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICBjb2xvcjogYmxhY2s7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuLmNhcmRfX3dyYXBwZXIgLmNhcmQge1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi5jYXJkX193cmFwcGVyIC5jYXJkIG1hdC1jaGVja2JveCB7XG4gIGNvbG9yOiAjODg4O1xufVxuLmNhcmRfX3dyYXBwZXIgLmNhcmQgbWF0LWNoZWNrYm94IC5kaXZfX21hdC1jaGVjayB7XG4gIHotaW5kZXg6IDEwMDtcbiAgbWFyZ2luLWxlZnQ6IC0yNHB4O1xuICBtYXJnaW4tdG9wOiA3cHg7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XG4gIGJvcmRlci1yYWRpdXM6IDNweDtcbiAgaGVpZ2h0OiAxNnB4O1xuICB3aWR0aDogMTZweDtcbn1cbi5jYXJkX193cmFwcGVyIC5jYXJkIC5mb3JtLWNvbnRyb2wgLnZhbGlkYXRpb24gc21hbGwge1xuICBkaXNwbGF5OiBibG9jaztcbn1cbi5jYXJkX193cmFwcGVyIC5jYXJkIC5idXR0b25fX3dyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuLmNhcmRfX3dyYXBwZXIgLmNhcmQgLmJ1dHRvbl9fd3JhcHBlciBidXR0b24ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDM1MWE5O1xuICB3aWR0aDogMTIwcHg7XG59XG4uY2FyZF9fd3JhcHBlciAuY2FyZCAuYnV0dG9uX193cmFwcGVyIGJ1dHRvbjpkaXNhYmxlZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNiZGJkYmQ7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["FormControl","FormGroup","Validators","switchMap","tap","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","LoginPageComponent_div_8_small_1_Template","LoginPageComponent_div_8_small_2_Template","ɵɵadvance","ɵɵproperty","ctx_r1","form","get","touched","tmp_3_0","errors","required","invalid","ɵɵtextInterpolate2","tmp_4_0","minlength","requiredLength","actualLength","LoginPageComponent_div_14_small_1_Template","LoginPageComponent_div_14_small_2_Template","ɵɵelementContainer","LoginPageComponent","constructor","authService","router","userService","isSubmitted","ngOnInit","initialize","email","password","minLength","submit","user","value","login$","login","pipe","getUserData","reset","navigate","changeShowPassword","event","checked","_a","passwordInput","nativeElement","setAttribute","_b","ɵɵdirectiveInject","i1","AuthService","i2","Router","i3","UserService","selectors","viewQuery","LoginPageComponent_Query","rf","ctx","ɵɵlistener","LoginPageComponent_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r1","ɵɵresetView","ɵɵelement","LoginPageComponent_div_8_Template","LoginPageComponent_div_14_Template","LoginPageComponent_Template_mat_checkbox_change_15_listener","$event","LoginPageComponent_ng_container_21_Template","ɵɵpureFunction1","_c1","ɵɵpipeBind1"],"sources":["C:\\Progect for learning\\angular-blog\\src\\app\\admin\\login-page\\login-page.component.ts","C:\\Progect for learning\\angular-blog\\src\\app\\admin\\login-page\\login-page.component.html"],"sourcesContent":["import {Component, ElementRef, Input, OnInit, ViewChild} from '@angular/core';\r\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Observable} from \"rxjs\";\r\nimport {switchMap, tap} from \"rxjs/operators\";\r\n\r\nimport {UserInterface} from \"../shared/interfaces/user.interface\";\r\nimport {AuthService} from \"../shared/services/auth.service\";\r\nimport {UserService} from \"../shared/services/user.service\";\r\nimport {ResponseForIdentificatedEmailInterface} from \"../shared/interfaces/responseForIdentificatedEmail.interface\";\r\nimport { MatCheckboxChange} from \"@angular/material/checkbox\";\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent implements OnInit {\r\n\r\n  @ViewChild('passwordInput') passwordInput: ElementRef | undefined;\r\n  form: FormGroup | any;\r\n  isSubmitted: boolean = false;\r\n  login$: Observable<ResponseForIdentificatedEmailInterface | null> | undefined;\r\n\r\n\r\n  constructor(private authService: AuthService, private router: Router, private userService: UserService) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initialize();\r\n  }\r\n\r\n  initialize() {\r\n    this.form = new FormGroup({\r\n      email: new FormControl(null, [Validators.required, Validators.email]),\r\n      password: new FormControl(null, [Validators.required, Validators.minLength(6)]),\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) {\r\n      this.isSubmitted = true;\r\n    } else {\r\n      const user: UserInterface = {\r\n        email: this.form.value.email,\r\n        password: this.form.value.password,\r\n      };\r\n\r\n      this.login$ = this.authService.login(user).pipe(\r\n        switchMap(() => {\r\n          return this.userService.getUserData();\r\n        }),\r\n        tap(() => {\r\n            this.form.reset();\r\n            this.router.navigate(['/admin', 'dashboard']);\r\n            this.isSubmitted = false;\r\n          }\r\n        )\r\n      )\r\n    }\r\n  }\r\n\r\n  changeShowPassword(event: MatCheckboxChange) {\r\n    if (event.checked) {\r\n      this.passwordInput?.nativeElement.setAttribute('type','text');\r\n    } else {\r\n      this.passwordInput?.nativeElement.setAttribute('type','password');\r\n    }\r\n  }\r\n}\r\n","<mat-card class=\"card__wrapper\">\r\n  <form class=\"card\" [formGroup]=\"form\" (ngSubmit)=\"submit()\">\r\n    <h2>Login form</h2>\r\n\r\n    <div\r\n      [ngClass]=\"{invalid: form.get('email').touched && form.get('email').invalid}\"\r\n      class=\"form-control\">\r\n      <label for=\"email\">Email</label>\r\n      <input id=\"email\" type=\"email\" formControlName=\"email\">\r\n      <div *ngIf=\"form.get('email').touched && form.get('email').invalid\"\r\n           class=\"validation\">\r\n        <small *ngIf=\"form.get('email').touched && form.get('email').errors?.required\">Email must not be empty</small>\r\n        <small *ngIf=\"form.get('email').touched && form.get('email').invalid\">Enter correct email</small>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      [ngClass]=\"{invalid: form.get('password').touched && form.get('password').invalid}\"\r\n      class=\"form-control\">\r\n      <label for=\"password\">Password</label>\r\n      <input id=\"password\" type=\"password\" formControlName=\"password\" #passwordInput>\r\n      <div\r\n        *ngIf=\"form.get('password').touched && form.get('password').invalid\"\r\n        class=\"validation\">\r\n\r\n        <small *ngIf=\"form.get('password').touched && form.get('password').errors?.required\">\r\n          Password must not be empty\r\n        </small>\r\n        <small *ngIf=\"form.get('password')?.errors.minlength\">\r\n          Length password not be less\r\n          {{form.get('password')?.errors.minlength.requiredLength}}\r\n          symbols. Now quantity\r\n          {{form.get('password')?.errors.minlength.actualLength}}\r\n        </small>\r\n      </div>\r\n    </div>\r\n    <mat-checkbox\r\n      class=\"checkbox__password\"\r\n      (change)=\"changeShowPassword($event)\"\r\n      #checkBox\r\n    >Show password\r\n    </mat-checkbox>\r\n\r\n    <div class=\"button__wrapper\">\r\n      <button\r\n        type=\"submit\" class=\"btn btn-primary\"\r\n        [disabled]=\"form.invalid || isSubmitted\"\r\n      >Login\r\n      </button>\r\n    </div>\r\n  </form>\r\n</mat-card>\r\n<ng-container *ngIf=\"login$ | async\"></ng-container>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}