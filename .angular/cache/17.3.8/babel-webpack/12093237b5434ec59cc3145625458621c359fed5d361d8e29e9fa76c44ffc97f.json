{"ast":null,"code":"import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { __spreadArray, __assign } from 'tslib';\nimport { ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Component } from '@firebase/component';\nvar name = \"@firebase/performance\";\nvar version = \"0.4.18\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\nvar SERVICE = 'performance';\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _a;\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.', _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.', _a[\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */] = 'Trace {$traceName} startTime should be positive.', _a[\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */] = 'Trace {$traceName} duration should be positive.', _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.', _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.', _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.', _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.', _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event', _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.', _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok', _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.', _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.', _a[\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid', _a[\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */] = 'Input for String merger is invalid, contact support team to resolve.', _a);\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar consoleLogger = new Logger(SERVICE_NAME);\nconsoleLogger.logLevel = LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar apiInstance;\nvar windowInstance;\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\nvar Api = /** @class */function () {\n  function Api(window) {\n    this.window = window;\n    if (!window) {\n      throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\n    }\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n  Api.prototype.getUrl = function () {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  };\n  Api.prototype.mark = function (name) {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n    this.performance.mark(name);\n  };\n  Api.prototype.measure = function (measureName, mark1, mark2) {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n    this.performance.measure(measureName, mark1, mark2);\n  };\n  Api.prototype.getEntriesByType = function (type) {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n    return this.performance.getEntriesByType(type);\n  };\n  Api.prototype.getEntriesByName = function (name) {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n    return this.performance.getEntriesByName(name);\n  };\n  Api.prototype.getTimeOrigin = function () {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\n  };\n  Api.prototype.requiredApisAvailable = function () {\n    if (!fetch || !Promise || !this.navigator || !this.navigator.cookieEnabled) {\n      consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\n      return false;\n    }\n    if (!isIndexedDBAvailable()) {\n      consoleLogger.info('IndexedDB is not supported by current browswer');\n      return false;\n    }\n    return true;\n  };\n  Api.prototype.setupObserver = function (entryType, callback) {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n    var observer = new this.PerformanceObserver(function (list) {\n      for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\n        var entry = _a[_i];\n        // `entry` is a PerformanceEntry instance.\n        callback(entry);\n      }\n    });\n    // Start observing the entry types you care about.\n    observer.observe({\n      entryTypes: [entryType]\n    });\n  };\n  Api.getInstance = function () {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n    return apiInstance;\n  };\n  return Api;\n}();\nfunction setupApi(window) {\n  windowInstance = window;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction mergeStrings(part1, part2) {\n  var sizeDiff = part1.length - part2.length;\n  if (sizeDiff < 0 || sizeDiff > 1) {\n    throw ERROR_FACTORY.create(\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */);\n  }\n  var resultArray = [];\n  for (var i = 0; i < part1.length; i++) {\n    resultArray.push(part1.charAt(i));\n    if (part2.length > i) {\n      resultArray.push(part2.charAt(i));\n    }\n  }\n  return resultArray.join('');\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar settingsServiceInstance;\nvar SettingsService = /** @class */function () {\n  function SettingsService() {\n    // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n    this.instrumentationEnabled = true;\n    // The variable which controls logging of custom traces.\n    this.dataCollectionEnabled = true;\n    // Configuration flags set through remote config.\n    this.loggingEnabled = false;\n    // Sampling rate between 0 and 1.\n    this.tracesSamplingRate = 1;\n    this.networkRequestsSamplingRate = 1;\n    // Address of logging service.\n    this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n    // Performance event transport endpoint URL which should be compatible with proto3.\n    // New Address for transport service, not configurable via Remote Config.\n    this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\n    this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\n    // Source type for performance event logs.\n    this.logSource = 462;\n    // Flags which control per session logging of traces and network requests.\n    this.logTraceAfterSampling = false;\n    this.logNetworkAfterSampling = false;\n    // TTL of config retrieved from remote config in hours.\n    this.configTimeToLive = 12;\n  }\n  SettingsService.prototype.getAppId = function () {\n    var appId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.appId;\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\n    }\n    return appId;\n  };\n  SettingsService.prototype.getProjectId = function () {\n    var projectId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.projectId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\n    }\n    return projectId;\n  };\n  SettingsService.prototype.getApiKey = function () {\n    var apiKey = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.apiKey;\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\n    }\n    return apiKey;\n  };\n  SettingsService.prototype.getFlTransportFullUrl = function () {\n    return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\n  };\n  SettingsService.getInstance = function () {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n    return settingsServiceInstance;\n  };\n  return SettingsService;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar iid;\nfunction getIidPromise() {\n  var iidPromise = SettingsService.getInstance().installationsService.getId();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  iidPromise.then(function (iidVal) {\n    iid = iidVal;\n  });\n  return iidPromise;\n}\n// This method should be used after the iid is retrieved by getIidPromise method.\nfunction getIid() {\n  return iid;\n}\nfunction getAuthTokenPromise() {\n  var authTokenPromise = SettingsService.getInstance().installationsService.getToken();\n  // eslint-disable-next-line @typescript-eslint/no-floating-promises\n  authTokenPromise.then(function (authTokenVal) {});\n  return authTokenPromise;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar VisibilityState;\n(function (VisibilityState) {\n  VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\n})(VisibilityState || (VisibilityState = {}));\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\nfunction getServiceWorkerStatus() {\n  var navigator = Api.getInstance().navigator;\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return 2 /* CONTROLLED */;\n    } else {\n      return 3 /* UNCONTROLLED */;\n    }\n  } else {\n    return 1 /* UNSUPPORTED */;\n  }\n}\nfunction getVisibilityState() {\n  var document = Api.getInstance().document;\n  var visibilityState = document.visibilityState;\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\nfunction getEffectiveConnectionType() {\n  var navigator = Api.getInstance().navigator;\n  var navigatorConnection = navigator.connection;\n  var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\n  switch (effectiveType) {\n    case 'slow-2g':\n      return 1 /* CONNECTION_SLOW_2G */;\n    case '2g':\n      return 2 /* CONNECTION_2G */;\n    case '3g':\n      return 3 /* CONNECTION_3G */;\n    case '4g':\n      return 4 /* CONNECTION_4G */;\n    default:\n      return 0 /* UNKNOWN */;\n  }\n}\nfunction isValidCustomAttributeName(name) {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n  var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\n    return name.startsWith(prefix);\n  });\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\nfunction isValidCustomAttributeValue(value) {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\n// These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\nvar DEFAULT_CONFIGS = {\n  loggingEnabled: true\n};\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\nfunction getConfig(iid) {\n  var config = getStoredConfig();\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n  return getRemoteConfig(iid).then(processConfig).then(function (config) {\n    return storeConfig(config);\n  }, /** Do nothing for error, use defaults set in settings service. */\n  function () {});\n}\nfunction getStoredConfig() {\n  var localStorage = Api.getInstance().localStorage;\n  if (!localStorage) {\n    return;\n  }\n  var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n  var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n  if (!configStringified) {\n    return;\n  }\n  try {\n    var configResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch (_a) {\n    return;\n  }\n}\nfunction storeConfig(config) {\n  var localStorage = Api.getInstance().localStorage;\n  if (!config || !localStorage) {\n    return;\n  }\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() + SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\n}\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\nfunction getRemoteConfig(iid) {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise().then(function (authToken) {\n    var projectId = SettingsService.getInstance().getProjectId();\n    var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\n    var request = new Request(configEndPoint, {\n      method: 'POST',\n      headers: {\n        Authorization: FIS_AUTH_PREFIX + \" \" + authToken\n      },\n      /* eslint-disable camelcase */\n      body: JSON.stringify({\n        app_instance_id: iid,\n        app_instance_id_token: authToken,\n        app_id: SettingsService.getInstance().getAppId(),\n        app_version: SDK_VERSION,\n        sdk_version: REMOTE_CONFIG_SDK_VERSION\n      })\n      /* eslint-enable camelcase */\n    });\n    return fetch(request).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n      // In case response is not ok. This will be caught by catch.\n      throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\n    });\n  }).catch(function () {\n    consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n    return undefined;\n  });\n}\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\nfunction processConfig(config) {\n  if (!config) {\n    return config;\n  }\n  var settingsServiceInstance = SettingsService.getInstance();\n  var entries = config.entries || {};\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled = String(entries.fpr_enabled) === 'true';\n  } else {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\n  }\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  }\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  }\n  // Key from Remote Config has to be non-empty string, otherwsie use local value.\n  if (entries.fpr_log_transport_key) {\n    settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\n  }\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\n  }\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\n  }\n  // Set the per session trace and network logging flags.\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\n  return config;\n}\nfunction configValid(expiry) {\n  return Number(expiry) > Date.now();\n}\nfunction shouldLogAfterSampling(samplingRate) {\n  return Math.random() <= samplingRate;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar initializationStatus = 1 /* notInitialized */;\nvar initializationPromise;\nfunction getInitializationPromise() {\n  initializationStatus = 2 /* initializationPending */;\n  initializationPromise = initializationPromise || initializePerf();\n  return initializationPromise;\n}\nfunction isPerfInitialized() {\n  return initializationStatus === 3 /* initialized */;\n}\nfunction initializePerf() {\n  return getDocumentReadyComplete().then(function () {\n    return getIidPromise();\n  }).then(function (iid) {\n    return getConfig(iid);\n  }).then(function () {\n    return changeInitializationStatus();\n  }, function () {\n    return changeInitializationStatus();\n  });\n}\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\nfunction getDocumentReadyComplete() {\n  var document = Api.getInstance().document;\n  return new Promise(function (resolve) {\n    if (document && document.readyState !== 'complete') {\n      var handler_1 = function () {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler_1);\n          resolve();\n        }\n      };\n      document.addEventListener('readystatechange', handler_1);\n    } else {\n      resolve();\n    }\n  });\n}\nfunction changeInitializationStatus() {\n  initializationStatus = 3 /* initialized */;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\n// If end point does not work, the call will be tried for these many times.\nvar DEFAULT_REMAINING_TRIES = 3;\nvar MAX_EVENT_COUNT_PER_REQUEST = 1000;\nvar remainingTries = DEFAULT_REMAINING_TRIES;\n/* eslint-enable camelcase */\nvar queue = [];\nvar isTransportSetup = false;\nfunction setupTransportService() {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\nfunction processQueue(timeOffset) {\n  setTimeout(function () {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    }\n    // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    }\n    dispatchQueueEvents();\n  }, timeOffset);\n}\nfunction dispatchQueueEvents() {\n  // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\n  // The staged events will be used for current logRequest attempt, remaining events will be kept\n  // for next attempt.\n  var staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\n  /* eslint-disable camelcase */\n  // We will pass the JSON serialized event to the backend.\n  var log_event = staged.map(function (evt) {\n    return {\n      source_extension_json_proto3: evt.message,\n      event_time_ms: String(evt.eventTime)\n    };\n  });\n  var data = {\n    request_time_ms: String(Date.now()),\n    client_info: {\n      client_type: 1,\n      js_client_info: {}\n    },\n    log_source: SettingsService.getInstance().logSource,\n    log_event: log_event\n  };\n  /* eslint-enable camelcase */\n  sendEventsToFl(data, staged).catch(function () {\n    // If the request fails for some reason, add the events that were attempted\n    // back to the primary queue to retry later.\n    queue = __spreadArray(__spreadArray([], staged), queue);\n    remainingTries--;\n    consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\n    processQueue(DEFAULT_SEND_INTERVAL_MS);\n  });\n}\nfunction sendEventsToFl(data, staged) {\n  return postToFlEndpoint(data).then(function (res) {\n    if (!res.ok) {\n      consoleLogger.info('Call to Firebase backend failed.');\n    }\n    return res.json();\n  }).then(function (res) {\n    // Find the next call wait time from the response.\n    var transportWait = Number(res.nextRequestWaitMillis);\n    var requestOffset = DEFAULT_SEND_INTERVAL_MS;\n    if (!isNaN(transportWait)) {\n      requestOffset = Math.max(transportWait, requestOffset);\n    }\n    // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\n    // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\n    var logResponseDetails = res.logResponseDetails;\n    if (Array.isArray(logResponseDetails) && logResponseDetails.length > 0 && logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\n      queue = __spreadArray(__spreadArray([], staged), queue);\n      consoleLogger.info(\"Retry transport request later.\");\n    }\n    remainingTries = DEFAULT_REMAINING_TRIES;\n    // Schedule the next process.\n    processQueue(requestOffset);\n  });\n}\nfunction postToFlEndpoint(data) {\n  var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\n  return fetch(flTransportFullUrl, {\n    method: 'POST',\n    body: JSON.stringify(data)\n  });\n}\nfunction addToQueue(evt) {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\n  }\n  // Add the new event to the queue.\n  queue = __spreadArray(__spreadArray([], queue), [evt]);\n}\n/** Log handler for cc service to send the performance logs to the server. */\nfunction transportHandler(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nserializer) {\n  return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n    var message = serializer.apply(void 0, args);\n    addToQueue({\n      message: message,\n      eventTime: Date.now()\n    });\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/* eslint-enble camelcase */\nvar logger;\n// This method is not called before initialization.\nfunction sendLog(resource, resourceType) {\n  if (!logger) {\n    logger = transportHandler(serializer);\n  }\n  logger(resource, resourceType);\n}\nfunction logTrace(trace) {\n  var settingsService = SettingsService.getInstance();\n  // Do not log if trace is auto generated and instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  }\n  // Do not log if trace is custom and data collection is disabled.\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  }\n  // Do not log if required apis are not available.\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  }\n  // Only log the page load auto traces if page is visible.\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(function () {\n      return sendTraceLog(trace);\n    }, function () {\n      return sendTraceLog(trace);\n    });\n  }\n}\nfunction sendTraceLog(trace) {\n  if (!getIid()) {\n    return;\n  }\n  var settingsService = SettingsService.getInstance();\n  if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling) {\n    return;\n  }\n  setTimeout(function () {\n    return sendLog(trace, 1 /* Trace */);\n  }, 0);\n}\nfunction logNetworkRequest(networkRequest) {\n  var settingsService = SettingsService.getInstance();\n  // Do not log network requests if instrumentation is disabled.\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  }\n  // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\n  // Need to blacklist both old and new endpoints to avoid migration gap.\n  var networkRequestUrl = networkRequest.url;\n  // Blacklist old log endpoint and new transport endpoint.\n  // Because Performance SDK doesn't instrument requests sent from SDK itself.\n  var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\n  var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\n  if (networkRequestUrl === logEndpointUrl || networkRequestUrl === flEndpointUrl) {\n    return;\n  }\n  if (!settingsService.loggingEnabled || !settingsService.logNetworkAfterSampling) {\n    return;\n  }\n  setTimeout(function () {\n    return sendLog(networkRequest, 0 /* NetworkRequest */);\n  }, 0);\n}\nfunction serializer(resource, resourceType) {\n  if (resourceType === 0 /* NetworkRequest */) {\n    return serializeNetworkRequest(resource);\n  }\n  return serializeTrace(resource);\n}\nfunction serializeNetworkRequest(networkRequest) {\n  var networkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\nfunction serializeTrace(trace) {\n  var traceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n  var customAttributes = trace.getAttributes();\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\nfunction getApplicationInfo() {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar MAX_METRIC_NAME_LENGTH = 100;\nvar RESERVED_AUTO_PREFIX = '_';\nvar oobMetrics = [FIRST_PAINT_COUNTER_NAME, FIRST_CONTENTFUL_PAINT_COUNTER_NAME, FIRST_INPUT_DELAY_COUNTER_NAME];\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\nfunction isValidMetricName(name, traceName) {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n  return traceName && traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) && oobMetrics.indexOf(name) > -1 || !name.startsWith(RESERVED_AUTO_PREFIX);\n}\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\nfunction convertMetricValueToInteger(providedValue) {\n  var valueAsInteger = Math.floor(providedValue);\n  if (valueAsInteger < providedValue) {\n    consoleLogger.info(\"Metric value should be an Integer, setting the value as : \" + valueAsInteger + \".\");\n  }\n  return valueAsInteger;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar Trace = /** @class */function () {\n  /**\r\n   * @param name The name of the trace.\r\n   * @param isAuto If the trace is auto-instrumented.\r\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n   * is only set when the trace is built for logging when the user directly uses the user timing\r\n   * api (performance.mark and performance.measure).\r\n   */\n  function Trace(name, isAuto, traceMeasureName) {\n    if (isAuto === void 0) {\n      isAuto = false;\n    }\n    this.name = name;\n    this.isAuto = isAuto;\n    this.state = 1 /* UNINITIALIZED */;\n    this.customAttributes = {};\n    this.counters = {};\n    this.api = Api.getInstance();\n    this.randomId = Math.floor(Math.random() * 1000000);\n    if (!this.isAuto) {\n      this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceMeasure = traceMeasureName || TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n  /**\r\n   * Starts a trace. The measurement of the duration starts at this point.\r\n   */\n  Trace.prototype.start = function () {\n    if (this.state !== 1 /* UNINITIALIZED */) {\n      throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\n        traceName: this.name\n      });\n    }\n    this.api.mark(this.traceStartMark);\n    this.state = 2 /* RUNNING */;\n  };\n  /**\r\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n   * is logged.\r\n   */\n  Trace.prototype.stop = function () {\n    if (this.state !== 2 /* RUNNING */) {\n      throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\n        traceName: this.name\n      });\n    }\n    this.state = 3 /* TERMINATED */;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\n    this.calculateTraceMetrics();\n    logTrace(this);\n  };\n  /**\r\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n   * directly. No need to use start and stop methods.\r\n   * @param startTime Trace start time since epoch in millisec\r\n   * @param duration The duraction of the trace in millisec\r\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n   */\n  Trace.prototype.record = function (startTime, duration, options) {\n    if (startTime <= 0) {\n      throw ERROR_FACTORY.create(\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */, {\n        traceName: this.name\n      });\n    }\n    if (duration <= 0) {\n      throw ERROR_FACTORY.create(\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */, {\n        traceName: this.name\n      });\n    }\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n    if (options && options.attributes) {\n      this.customAttributes = __assign({}, options.attributes);\n    }\n    if (options && options.metrics) {\n      for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\n        var metric = _a[_i];\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n    logTrace(this);\n  };\n  /**\r\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n   * custom metric if one with the given name does not exist. The value will be floored down to an\r\n   * integer.\r\n   * @param counter Name of the custom metric\r\n   * @param numAsInteger Increment by value\r\n   */\n  Trace.prototype.incrementMetric = function (counter, numAsInteger) {\n    if (numAsInteger === void 0) {\n      numAsInteger = 1;\n    }\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, numAsInteger);\n    } else {\n      this.putMetric(counter, this.counters[counter] + numAsInteger);\n    }\n  };\n  /**\r\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n   * given name does not exist. The value will be floored down to an integer.\r\n   * @param counter Name of the custom metric\r\n   * @param numAsInteger Set custom metric to this value\r\n   */\n  Trace.prototype.putMetric = function (counter, numAsInteger) {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = convertMetricValueToInteger(numAsInteger);\n    } else {\n      throw ERROR_FACTORY.create(\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\n        customMetricName: counter\n      });\n    }\n  };\n  /**\r\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n   * not exist will return zero.\r\n   * @param counter\r\n   */\n  Trace.prototype.getMetric = function (counter) {\n    return this.counters[counter] || 0;\n  };\n  /**\r\n   * Sets a custom attribute of a trace to a certain value.\r\n   * @param attr\r\n   * @param value\r\n   */\n  Trace.prototype.putAttribute = function (attr, value) {\n    var isValidName = isValidCustomAttributeName(attr);\n    var isValidValue = isValidCustomAttributeValue(value);\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    }\n    // Throw appropriate error when the attribute name or value is invalid.\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\n        attributeName: attr\n      });\n    }\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\n        attributeValue: value\n      });\n    }\n  };\n  /**\r\n   * Retrieves the value a custom attribute of a trace is set to.\r\n   * @param attr\r\n   */\n  Trace.prototype.getAttribute = function (attr) {\n    return this.customAttributes[attr];\n  };\n  Trace.prototype.removeAttribute = function (attr) {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n    delete this.customAttributes[attr];\n  };\n  Trace.prototype.getAttributes = function () {\n    return __assign({}, this.customAttributes);\n  };\n  Trace.prototype.setStartTime = function (startTime) {\n    this.startTimeUs = startTime;\n  };\n  Trace.prototype.setDuration = function (duration) {\n    this.durationUs = duration;\n  };\n  /**\r\n   * Calculates and assigns the duration and start time of the trace using the measure performance\r\n   * entry.\r\n   */\n  Trace.prototype.calculateTraceMetrics = function () {\n    var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\n    }\n  };\n  /**\r\n   * @param navigationTimings A single element array which contains the navigationTIming object of\r\n   * the page load\r\n   * @param paintTimings A array which contains paintTiming object of the page load\r\n   * @param firstInputDelay First input delay in millisec\r\n   */\n  Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\n    var route = Api.getInstance().getUrl();\n    if (!route) {\n      return;\n    }\n    var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs);\n    // navigationTimings includes only one element.\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\n      trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\n      trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\n    }\n    var FIRST_PAINT = 'first-paint';\n    var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n    if (paintTimings) {\n      var firstPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_PAINT;\n      });\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\n      }\n      var firstContentfulPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_CONTENTFUL_PAINT;\n      });\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\n      }\n      if (firstInputDelay) {\n        trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\n      }\n    }\n    logTrace(trace);\n  };\n  Trace.createUserTimingTrace = function (measureName) {\n    var trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  };\n  return Trace;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction createNetworkRequestEntry(entry) {\n  var performanceEntry = entry;\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n  var timeOrigin = Api.getInstance().getTimeOrigin();\n  var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\n  var timeToResponseInitiatedUs = performanceEntry.responseStart ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000) : undefined;\n  var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\n  // Remove the query params from logged network request url.\n  var url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  var networkRequest = {\n    url: url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs: startTimeUs,\n    timeToResponseInitiatedUs: timeToResponseInitiatedUs,\n    timeToResponseCompletedUs: timeToResponseCompletedUs\n  };\n  logNetworkRequest(networkRequest);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar FID_WAIT_TIME_MS = 5000;\nfunction setupOobResources() {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  }\n  // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n  setTimeout(function () {\n    return setupOobTraces();\n  }, 0);\n  setTimeout(function () {\n    return setupNetworkRequests();\n  }, 0);\n  setTimeout(function () {\n    return setupUserTimingTraces();\n  }, 0);\n}\nfunction setupNetworkRequests() {\n  var api = Api.getInstance();\n  var resources = api.getEntriesByType('resource');\n  for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\n    var resource = resources_1[_i];\n    createNetworkRequestEntry(resource);\n  }\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\nfunction setupOobTraces() {\n  var api = Api.getInstance();\n  var navigationTimings = api.getEntriesByType('navigation');\n  var paintTimings = api.getEntriesByType('paint');\n  // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var timeoutId_1 = setTimeout(function () {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId_1 = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay(function (fid) {\n      if (timeoutId_1) {\n        clearTimeout(timeoutId_1);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\nfunction setupUserTimingTraces() {\n  var api = Api.getInstance();\n  // Run through the measure performance entries collected up to this point.\n  var measures = api.getEntriesByType('measure');\n  for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n    var measure = measures_1[_i];\n    createUserTimingTrace(measure);\n  }\n  // Setup an observer to capture the measures from this point on.\n  api.setupObserver('measure', createUserTimingTrace);\n}\nfunction createUserTimingTrace(measure) {\n  var measureName = measure.name;\n  // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n  if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) === TRACE_MEASURE_PREFIX) {\n    return;\n  }\n  Trace.createUserTimingTrace(measureName);\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar PerformanceController = /** @class */function () {\n  function PerformanceController(app) {\n    this.app = app;\n    if (Api.getInstance().requiredApisAvailable()) {\n      validateIndexedDBOpenable().then(function (isAvailable) {\n        if (isAvailable) {\n          setupTransportService();\n          getInitializationPromise().then(setupOobResources, setupOobResources);\n        }\n      }).catch(function (error) {\n        consoleLogger.info(\"Environment doesn't support IndexedDB: \" + error);\n      });\n    }\n  }\n  PerformanceController.prototype.trace = function (name) {\n    return new Trace(name);\n  };\n  Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\n    get: function () {\n      return SettingsService.getInstance().instrumentationEnabled;\n    },\n    set: function (val) {\n      SettingsService.getInstance().instrumentationEnabled = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\n    get: function () {\n      return SettingsService.getInstance().dataCollectionEnabled;\n    },\n    set: function (val) {\n      SettingsService.getInstance().dataCollectionEnabled = val;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return PerformanceController;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\nfunction registerPerformance(instance) {\n  var factoryMethod = function (app, installations) {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\n    }\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\n    }\n    setupApi(window);\n    SettingsService.getInstance().firebaseAppInstance = app;\n    SettingsService.getInstance().installationsService = installations;\n    return new PerformanceController(app);\n  };\n  // Register performance with firebase-app.\n  instance.INTERNAL.registerComponent(new Component('performance', function (container) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    // The following call will always succeed because perf has `import '@firebase/installations'`\n    var installations = container.getProvider('installations').getImmediate();\n    return factoryMethod(app, installations);\n  }, \"PUBLIC\" /* PUBLIC */));\n  instance.registerVersion(name, version);\n}\nregisterPerformance(firebase);\nexport { registerPerformance };","map":{"version":3,"names":["firebase","__spreadArray","__assign","ErrorFactory","isIndexedDBAvailable","validateIndexedDBOpenable","Logger","LogLevel","Component","name","version","SDK_VERSION","TRACE_START_MARK_PREFIX","TRACE_STOP_MARK_PREFIX","TRACE_MEASURE_PREFIX","OOB_TRACE_PAGE_LOAD_PREFIX","FIRST_PAINT_COUNTER_NAME","FIRST_CONTENTFUL_PAINT_COUNTER_NAME","FIRST_INPUT_DELAY_COUNTER_NAME","CONFIG_LOCAL_STORAGE_KEY","CONFIG_EXPIRY_LOCAL_STORAGE_KEY","SERVICE","SERVICE_NAME","_a","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","consoleLogger","logLevel","INFO","apiInstance","windowInstance","Api","window","create","performance","PerformanceObserver","windowLocation","location","navigator","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","prototype","getUrl","href","split","mark","measure","measureName","mark1","mark2","getEntriesByType","type","getEntriesByName","getTimeOrigin","timeOrigin","timing","navigationStart","requiredApisAvailable","fetch","Promise","info","setupObserver","entryType","callback","observer","list","_i","getEntries","length","entry","observe","entryTypes","getInstance","undefined","setupApi","mergeStrings","part1","part2","sizeDiff","resultArray","i","push","charAt","join","settingsServiceInstance","SettingsService","instrumentationEnabled","dataCollectionEnabled","loggingEnabled","tracesSamplingRate","networkRequestsSamplingRate","logEndPointUrl","flTransportEndpointUrl","transportKey","logSource","logTraceAfterSampling","logNetworkAfterSampling","configTimeToLive","getAppId","appId","firebaseAppInstance","options","getProjectId","projectId","getApiKey","apiKey","getFlTransportFullUrl","concat","iid","getIidPromise","iidPromise","installationsService","getId","then","iidVal","getIid","getAuthTokenPromise","authTokenPromise","getToken","authTokenVal","VisibilityState","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","MAX_ATTRIBUTE_NAME_LENGTH","MAX_ATTRIBUTE_VALUE_LENGTH","getServiceWorkerStatus","serviceWorker","controller","getVisibilityState","visibilityState","VISIBLE","HIDDEN","UNKNOWN","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","isValidCustomAttributeName","matchesReservedPrefix","some","prefix","startsWith","match","isValidCustomAttributeValue","value","REMOTE_CONFIG_SDK_VERSION","DEFAULT_CONFIGS","FIS_AUTH_PREFIX","getConfig","config","getStoredConfig","processConfig","resolve","getRemoteConfig","storeConfig","expiryString","getItem","configValid","configStringified","configResponse","JSON","parse","setItem","stringify","String","Date","now","COULD_NOT_GET_CONFIG_MSG","authToken","configEndPoint","request","Request","method","headers","Authorization","body","app_instance_id","app_instance_id_token","app_id","app_version","sdk_version","response","ok","json","catch","entries","fpr_enabled","fpr_log_source","Number","fpr_log_endpoint_url","fpr_log_transport_key","fpr_vc_network_request_sampling_rate","fpr_vc_trace_sampling_rate","shouldLogAfterSampling","expiry","samplingRate","Math","random","initializationStatus","initializationPromise","getInitializationPromise","initializePerf","isPerfInitialized","getDocumentReadyComplete","changeInitializationStatus","readyState","handler_1","removeEventListener","addEventListener","DEFAULT_SEND_INTERVAL_MS","INITIAL_SEND_TIME_DELAY_MS","DEFAULT_REMAINING_TRIES","MAX_EVENT_COUNT_PER_REQUEST","remainingTries","queue","isTransportSetup","setupTransportService","processQueue","timeOffset","setTimeout","dispatchQueueEvents","staged","splice","log_event","map","evt","source_extension_json_proto3","message","event_time_ms","eventTime","data","request_time_ms","client_info","client_type","js_client_info","log_source","sendEventsToFl","postToFlEndpoint","res","transportWait","nextRequestWaitMillis","requestOffset","isNaN","max","logResponseDetails","Array","isArray","responseAction","flTransportFullUrl","addToQueue","transportHandler","serializer","args","arguments","apply","logger","sendLog","resource","resourceType","logTrace","trace","settingsService","isAuto","sendTraceLog","logNetworkRequest","networkRequest","networkRequestUrl","url","logEndpointUrl","flEndpointUrl","serializeNetworkRequest","serializeTrace","networkRequestMetric","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","Object","keys","counters","customAttributes","getAttributes","custom_attributes","trace_metric","google_app_id","web_app_info","page_url","service_worker_status","visibility_state","effective_connection_type","application_process_state","MAX_METRIC_NAME_LENGTH","RESERVED_AUTO_PREFIX","oobMetrics","isValidMetricName","traceName","indexOf","convertMetricValueToInteger","providedValue","valueAsInteger","floor","Trace","traceMeasureName","state","api","randomId","traceStartMark","traceStopMark","traceMeasure","calculateTraceMetrics","start","stop","record","startTime","duration","attributes","metrics","metric","incrementMetric","counter","numAsInteger","putMetric","customMetricName","getMetric","putAttribute","attr","isValidName","isValidValue","attributeName","attributeValue","getAttribute","removeAttribute","setStartTime","setDuration","perfMeasureEntries","perfMeasureEntry","createOobTrace","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","domInteractive","domContentLoadedEventEnd","loadEventEnd","FIRST_PAINT","FIRST_CONTENTFUL_PAINT","firstPaint","find","paintObject","firstContentfulPaint","createUserTimingTrace","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","transferSize","FID_WAIT_TIME_MS","setupOobResources","setupOobTraces","setupNetworkRequests","setupUserTimingTraces","resources","resources_1","timeoutId_1","fid","clearTimeout","measures","measures_1","substring","PerformanceController","app","isAvailable","error","defineProperty","get","set","val","enumerable","configurable","DEFAULT_ENTRY_NAME","registerPerformance","instance","factoryMethod","installations","INTERNAL","registerComponent","container","getProvider","getImmediate","registerVersion"],"sources":["C:/Progect for learning/angular-blog/node_modules/@firebase/performance/dist/index.esm.js"],"sourcesContent":["import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { __spreadArray, __assign } from 'tslib';\nimport { ErrorFactory, isIndexedDBAvailable, validateIndexedDBOpenable } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Component } from '@firebase/component';\n\nvar name = \"@firebase/performance\";\nvar version = \"0.4.18\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar SDK_VERSION = version;\r\n/** The prefix for start User Timing marks used for creating Traces. */\r\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\r\n/** The prefix for stop User Timing marks used for creating Traces. */\r\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\r\n/** The prefix for User Timing measure used for creating Traces. */\r\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\r\n/** The prefix for out of the box page load Trace name. */\r\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\r\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\r\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\r\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\r\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\r\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\r\nvar SERVICE = 'performance';\r\nvar SERVICE_NAME = 'Performance';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"trace started\" /* TRACE_STARTED_BEFORE */] = 'Trace {$traceName} was started before.',\r\n    _a[\"trace stopped\" /* TRACE_STOPPED_BEFORE */] = 'Trace {$traceName} is not running.',\r\n    _a[\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */] = 'Trace {$traceName} startTime should be positive.',\r\n    _a[\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */] = 'Trace {$traceName} duration should be positive.',\r\n    _a[\"no window\" /* NO_WINDOW */] = 'Window is not available.',\r\n    _a[\"no app id\" /* NO_APP_ID */] = 'App id is not available.',\r\n    _a[\"no project id\" /* NO_PROJECT_ID */] = 'Project id is not available.',\r\n    _a[\"no api key\" /* NO_API_KEY */] = 'Api key is not available.',\r\n    _a[\"invalid cc log\" /* INVALID_CC_LOG */] = 'Attempted to queue invalid cc event',\r\n    _a[\"FB not default\" /* FB_NOT_DEFAULT */] = 'Performance can only start when Firebase app instance is the default one.',\r\n    _a[\"RC response not ok\" /* RC_NOT_OK */] = 'RC response is not ok',\r\n    _a[\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */] = 'Attribute name {$attributeName} is invalid.',\r\n    _a[\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */] = 'Attribute value {$attributeValue} is invalid.',\r\n    _a[\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */] = 'Custom metric name {$customMetricName} is invalid',\r\n    _a[\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */] = 'Input for String merger is invalid, contact support team to resolve.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar consoleLogger = new Logger(SERVICE_NAME);\r\nconsoleLogger.logLevel = LogLevel.INFO;\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar apiInstance;\r\nvar windowInstance;\r\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\r\nvar Api = /** @class */ (function () {\r\n    function Api(window) {\r\n        this.window = window;\r\n        if (!window) {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        this.performance = window.performance;\r\n        this.PerformanceObserver = window.PerformanceObserver;\r\n        this.windowLocation = window.location;\r\n        this.navigator = window.navigator;\r\n        this.document = window.document;\r\n        if (this.navigator && this.navigator.cookieEnabled) {\r\n            // If user blocks cookies on the browser, accessing localStorage will\r\n            // throw an exception.\r\n            this.localStorage = window.localStorage;\r\n        }\r\n        if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\r\n            this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\r\n        }\r\n    }\r\n    Api.prototype.getUrl = function () {\r\n        // Do not capture the string query part of url.\r\n        return this.windowLocation.href.split('?')[0];\r\n    };\r\n    Api.prototype.mark = function (name) {\r\n        if (!this.performance || !this.performance.mark) {\r\n            return;\r\n        }\r\n        this.performance.mark(name);\r\n    };\r\n    Api.prototype.measure = function (measureName, mark1, mark2) {\r\n        if (!this.performance || !this.performance.measure) {\r\n            return;\r\n        }\r\n        this.performance.measure(measureName, mark1, mark2);\r\n    };\r\n    Api.prototype.getEntriesByType = function (type) {\r\n        if (!this.performance || !this.performance.getEntriesByType) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByType(type);\r\n    };\r\n    Api.prototype.getEntriesByName = function (name) {\r\n        if (!this.performance || !this.performance.getEntriesByName) {\r\n            return [];\r\n        }\r\n        return this.performance.getEntriesByName(name);\r\n    };\r\n    Api.prototype.getTimeOrigin = function () {\r\n        // Polyfill the time origin with performance.timing.navigationStart.\r\n        return (this.performance &&\r\n            (this.performance.timeOrigin || this.performance.timing.navigationStart));\r\n    };\r\n    Api.prototype.requiredApisAvailable = function () {\r\n        if (!fetch ||\r\n            !Promise ||\r\n            !this.navigator ||\r\n            !this.navigator.cookieEnabled) {\r\n            consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\r\n            return false;\r\n        }\r\n        if (!isIndexedDBAvailable()) {\r\n            consoleLogger.info('IndexedDB is not supported by current browswer');\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    Api.prototype.setupObserver = function (entryType, callback) {\r\n        if (!this.PerformanceObserver) {\r\n            return;\r\n        }\r\n        var observer = new this.PerformanceObserver(function (list) {\r\n            for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                // `entry` is a PerformanceEntry instance.\r\n                callback(entry);\r\n            }\r\n        });\r\n        // Start observing the entry types you care about.\r\n        observer.observe({ entryTypes: [entryType] });\r\n    };\r\n    Api.getInstance = function () {\r\n        if (apiInstance === undefined) {\r\n            apiInstance = new Api(windowInstance);\r\n        }\r\n        return apiInstance;\r\n    };\r\n    return Api;\r\n}());\r\nfunction setupApi(window) {\r\n    windowInstance = window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction mergeStrings(part1, part2) {\r\n    var sizeDiff = part1.length - part2.length;\r\n    if (sizeDiff < 0 || sizeDiff > 1) {\r\n        throw ERROR_FACTORY.create(\"invalid String merger input\" /* INVALID_STRING_MERGER_PARAMETER */);\r\n    }\r\n    var resultArray = [];\r\n    for (var i = 0; i < part1.length; i++) {\r\n        resultArray.push(part1.charAt(i));\r\n        if (part2.length > i) {\r\n            resultArray.push(part2.charAt(i));\r\n        }\r\n    }\r\n    return resultArray.join('');\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar settingsServiceInstance;\r\nvar SettingsService = /** @class */ (function () {\r\n    function SettingsService() {\r\n        // The variable which controls logging of automatic traces and HTTP/S network monitoring.\r\n        this.instrumentationEnabled = true;\r\n        // The variable which controls logging of custom traces.\r\n        this.dataCollectionEnabled = true;\r\n        // Configuration flags set through remote config.\r\n        this.loggingEnabled = false;\r\n        // Sampling rate between 0 and 1.\r\n        this.tracesSamplingRate = 1;\r\n        this.networkRequestsSamplingRate = 1;\r\n        // Address of logging service.\r\n        this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\r\n        // Performance event transport endpoint URL which should be compatible with proto3.\r\n        // New Address for transport service, not configurable via Remote Config.\r\n        this.flTransportEndpointUrl = mergeStrings('hts/frbslgigp.ogepscmv/ieo/eaylg', 'tp:/ieaeogn-agolai.o/1frlglgc/o');\r\n        this.transportKey = mergeStrings('AzSC8r6ReiGqFMyfvgow', 'Iayx0u-XT3vksVM-pIV');\r\n        // Source type for performance event logs.\r\n        this.logSource = 462;\r\n        // Flags which control per session logging of traces and network requests.\r\n        this.logTraceAfterSampling = false;\r\n        this.logNetworkAfterSampling = false;\r\n        // TTL of config retrieved from remote config in hours.\r\n        this.configTimeToLive = 12;\r\n    }\r\n    SettingsService.prototype.getAppId = function () {\r\n        var appId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.appId;\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"no app id\" /* NO_APP_ID */);\r\n        }\r\n        return appId;\r\n    };\r\n    SettingsService.prototype.getProjectId = function () {\r\n        var projectId = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.projectId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"no project id\" /* NO_PROJECT_ID */);\r\n        }\r\n        return projectId;\r\n    };\r\n    SettingsService.prototype.getApiKey = function () {\r\n        var apiKey = this.firebaseAppInstance &&\r\n            this.firebaseAppInstance.options &&\r\n            this.firebaseAppInstance.options.apiKey;\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"no api key\" /* NO_API_KEY */);\r\n        }\r\n        return apiKey;\r\n    };\r\n    SettingsService.prototype.getFlTransportFullUrl = function () {\r\n        return this.flTransportEndpointUrl.concat('?key=', this.transportKey);\r\n    };\r\n    SettingsService.getInstance = function () {\r\n        if (settingsServiceInstance === undefined) {\r\n            settingsServiceInstance = new SettingsService();\r\n        }\r\n        return settingsServiceInstance;\r\n    };\r\n    return SettingsService;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar iid;\r\nfunction getIidPromise() {\r\n    var iidPromise = SettingsService.getInstance().installationsService.getId();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    iidPromise.then(function (iidVal) {\r\n        iid = iidVal;\r\n    });\r\n    return iidPromise;\r\n}\r\n// This method should be used after the iid is retrieved by getIidPromise method.\r\nfunction getIid() {\r\n    return iid;\r\n}\r\nfunction getAuthTokenPromise() {\r\n    var authTokenPromise = SettingsService.getInstance().installationsService.getToken();\r\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n    authTokenPromise.then(function (authTokenVal) {\r\n    });\r\n    return authTokenPromise;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar VisibilityState;\r\n(function (VisibilityState) {\r\n    VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\r\n    VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\r\n})(VisibilityState || (VisibilityState = {}));\r\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\r\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\r\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\r\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\r\nfunction getServiceWorkerStatus() {\r\n    var navigator = Api.getInstance().navigator;\r\n    if ('serviceWorker' in navigator) {\r\n        if (navigator.serviceWorker.controller) {\r\n            return 2 /* CONTROLLED */;\r\n        }\r\n        else {\r\n            return 3 /* UNCONTROLLED */;\r\n        }\r\n    }\r\n    else {\r\n        return 1 /* UNSUPPORTED */;\r\n    }\r\n}\r\nfunction getVisibilityState() {\r\n    var document = Api.getInstance().document;\r\n    var visibilityState = document.visibilityState;\r\n    switch (visibilityState) {\r\n        case 'visible':\r\n            return VisibilityState.VISIBLE;\r\n        case 'hidden':\r\n            return VisibilityState.HIDDEN;\r\n        default:\r\n            return VisibilityState.UNKNOWN;\r\n    }\r\n}\r\nfunction getEffectiveConnectionType() {\r\n    var navigator = Api.getInstance().navigator;\r\n    var navigatorConnection = navigator.connection;\r\n    var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\r\n    switch (effectiveType) {\r\n        case 'slow-2g':\r\n            return 1 /* CONNECTION_SLOW_2G */;\r\n        case '2g':\r\n            return 2 /* CONNECTION_2G */;\r\n        case '3g':\r\n            return 3 /* CONNECTION_3G */;\r\n        case '4g':\r\n            return 4 /* CONNECTION_4G */;\r\n        default:\r\n            return 0 /* UNKNOWN */;\r\n    }\r\n}\r\nfunction isValidCustomAttributeName(name) {\r\n    if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\r\n        return name.startsWith(prefix);\r\n    });\r\n    return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\r\n}\r\nfunction isValidCustomAttributeValue(value) {\r\n    return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1';\r\n// These values will be used if the remote config object is successfully\r\n// retrieved, but the template does not have these fields.\r\nvar DEFAULT_CONFIGS = {\r\n    loggingEnabled: true\r\n};\r\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\r\nfunction getConfig(iid) {\r\n    var config = getStoredConfig();\r\n    if (config) {\r\n        processConfig(config);\r\n        return Promise.resolve();\r\n    }\r\n    return getRemoteConfig(iid)\r\n        .then(processConfig)\r\n        .then(function (config) { return storeConfig(config); }, \r\n    /** Do nothing for error, use defaults set in settings service. */\r\n    function () { });\r\n}\r\nfunction getStoredConfig() {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!localStorage) {\r\n        return;\r\n    }\r\n    var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\r\n    if (!expiryString || !configValid(expiryString)) {\r\n        return;\r\n    }\r\n    var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\r\n    if (!configStringified) {\r\n        return;\r\n    }\r\n    try {\r\n        var configResponse = JSON.parse(configStringified);\r\n        return configResponse;\r\n    }\r\n    catch (_a) {\r\n        return;\r\n    }\r\n}\r\nfunction storeConfig(config) {\r\n    var localStorage = Api.getInstance().localStorage;\r\n    if (!config || !localStorage) {\r\n        return;\r\n    }\r\n    localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\r\n    localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() +\r\n        SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\r\n}\r\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\r\nfunction getRemoteConfig(iid) {\r\n    // Perf needs auth token only to retrieve remote config.\r\n    return getAuthTokenPromise()\r\n        .then(function (authToken) {\r\n        var projectId = SettingsService.getInstance().getProjectId();\r\n        var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\r\n        var request = new Request(configEndPoint, {\r\n            method: 'POST',\r\n            headers: { Authorization: FIS_AUTH_PREFIX + \" \" + authToken },\r\n            /* eslint-disable camelcase */\r\n            body: JSON.stringify({\r\n                app_instance_id: iid,\r\n                app_instance_id_token: authToken,\r\n                app_id: SettingsService.getInstance().getAppId(),\r\n                app_version: SDK_VERSION,\r\n                sdk_version: REMOTE_CONFIG_SDK_VERSION\r\n            })\r\n            /* eslint-enable camelcase */\r\n        });\r\n        return fetch(request).then(function (response) {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            // In case response is not ok. This will be caught by catch.\r\n            throw ERROR_FACTORY.create(\"RC response not ok\" /* RC_NOT_OK */);\r\n        });\r\n    })\r\n        .catch(function () {\r\n        consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\r\n        return undefined;\r\n    });\r\n}\r\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valid.\r\n */\r\nfunction processConfig(config) {\r\n    if (!config) {\r\n        return config;\r\n    }\r\n    var settingsServiceInstance = SettingsService.getInstance();\r\n    var entries = config.entries || {};\r\n    if (entries.fpr_enabled !== undefined) {\r\n        // TODO: Change the assignment of loggingEnabled once the received type is\r\n        // known.\r\n        settingsServiceInstance.loggingEnabled =\r\n            String(entries.fpr_enabled) === 'true';\r\n    }\r\n    else {\r\n        // Config retrieved successfully, but there is no fpr_enabled in template.\r\n        // Use secondary configs value.\r\n        settingsServiceInstance.loggingEnabled = DEFAULT_CONFIGS.loggingEnabled;\r\n    }\r\n    if (entries.fpr_log_source) {\r\n        settingsServiceInstance.logSource = Number(entries.fpr_log_source);\r\n    }\r\n    if (entries.fpr_log_endpoint_url) {\r\n        settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\r\n    }\r\n    // Key from Remote Config has to be non-empty string, otherwsie use local value.\r\n    if (entries.fpr_log_transport_key) {\r\n        settingsServiceInstance.transportKey = entries.fpr_log_transport_key;\r\n    }\r\n    if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\r\n        settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\r\n    }\r\n    if (entries.fpr_vc_trace_sampling_rate !== undefined) {\r\n        settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\r\n    }\r\n    // Set the per session trace and network logging flags.\r\n    settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\r\n    settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\r\n    return config;\r\n}\r\nfunction configValid(expiry) {\r\n    return Number(expiry) > Date.now();\r\n}\r\nfunction shouldLogAfterSampling(samplingRate) {\r\n    return Math.random() <= samplingRate;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar initializationStatus = 1 /* notInitialized */;\r\nvar initializationPromise;\r\nfunction getInitializationPromise() {\r\n    initializationStatus = 2 /* initializationPending */;\r\n    initializationPromise = initializationPromise || initializePerf();\r\n    return initializationPromise;\r\n}\r\nfunction isPerfInitialized() {\r\n    return initializationStatus === 3 /* initialized */;\r\n}\r\nfunction initializePerf() {\r\n    return getDocumentReadyComplete()\r\n        .then(function () { return getIidPromise(); })\r\n        .then(function (iid) { return getConfig(iid); })\r\n        .then(function () { return changeInitializationStatus(); }, function () { return changeInitializationStatus(); });\r\n}\r\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\r\nfunction getDocumentReadyComplete() {\r\n    var document = Api.getInstance().document;\r\n    return new Promise(function (resolve) {\r\n        if (document && document.readyState !== 'complete') {\r\n            var handler_1 = function () {\r\n                if (document.readyState === 'complete') {\r\n                    document.removeEventListener('readystatechange', handler_1);\r\n                    resolve();\r\n                }\r\n            };\r\n            document.addEventListener('readystatechange', handler_1);\r\n        }\r\n        else {\r\n            resolve();\r\n        }\r\n    });\r\n}\r\nfunction changeInitializationStatus() {\r\n    initializationStatus = 3 /* initialized */;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\r\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000;\r\n// If end point does not work, the call will be tried for these many times.\r\nvar DEFAULT_REMAINING_TRIES = 3;\r\nvar MAX_EVENT_COUNT_PER_REQUEST = 1000;\r\nvar remainingTries = DEFAULT_REMAINING_TRIES;\r\n/* eslint-enable camelcase */\r\nvar queue = [];\r\nvar isTransportSetup = false;\r\nfunction setupTransportService() {\r\n    if (!isTransportSetup) {\r\n        processQueue(INITIAL_SEND_TIME_DELAY_MS);\r\n        isTransportSetup = true;\r\n    }\r\n}\r\nfunction processQueue(timeOffset) {\r\n    setTimeout(function () {\r\n        // If there is no remainingTries left, stop retrying.\r\n        if (remainingTries === 0) {\r\n            return;\r\n        }\r\n        // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\r\n        if (!queue.length) {\r\n            return processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n        }\r\n        dispatchQueueEvents();\r\n    }, timeOffset);\r\n}\r\nfunction dispatchQueueEvents() {\r\n    // Extract events up to the maximum cap of single logRequest from top of \"official queue\".\r\n    // The staged events will be used for current logRequest attempt, remaining events will be kept\r\n    // for next attempt.\r\n    var staged = queue.splice(0, MAX_EVENT_COUNT_PER_REQUEST);\r\n    /* eslint-disable camelcase */\r\n    // We will pass the JSON serialized event to the backend.\r\n    var log_event = staged.map(function (evt) { return ({\r\n        source_extension_json_proto3: evt.message,\r\n        event_time_ms: String(evt.eventTime)\r\n    }); });\r\n    var data = {\r\n        request_time_ms: String(Date.now()),\r\n        client_info: {\r\n            client_type: 1,\r\n            js_client_info: {}\r\n        },\r\n        log_source: SettingsService.getInstance().logSource,\r\n        log_event: log_event\r\n    };\r\n    /* eslint-enable camelcase */\r\n    sendEventsToFl(data, staged).catch(function () {\r\n        // If the request fails for some reason, add the events that were attempted\r\n        // back to the primary queue to retry later.\r\n        queue = __spreadArray(__spreadArray([], staged), queue);\r\n        remainingTries--;\r\n        consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\r\n        processQueue(DEFAULT_SEND_INTERVAL_MS);\r\n    });\r\n}\r\nfunction sendEventsToFl(data, staged) {\r\n    return postToFlEndpoint(data)\r\n        .then(function (res) {\r\n        if (!res.ok) {\r\n            consoleLogger.info('Call to Firebase backend failed.');\r\n        }\r\n        return res.json();\r\n    })\r\n        .then(function (res) {\r\n        // Find the next call wait time from the response.\r\n        var transportWait = Number(res.nextRequestWaitMillis);\r\n        var requestOffset = DEFAULT_SEND_INTERVAL_MS;\r\n        if (!isNaN(transportWait)) {\r\n            requestOffset = Math.max(transportWait, requestOffset);\r\n        }\r\n        // Delete request if response include RESPONSE_ACTION_UNKNOWN or DELETE_REQUEST action.\r\n        // Otherwise, retry request using normal scheduling if response include RETRY_REQUEST_LATER.\r\n        var logResponseDetails = res.logResponseDetails;\r\n        if (Array.isArray(logResponseDetails) &&\r\n            logResponseDetails.length > 0 &&\r\n            logResponseDetails[0].responseAction === 'RETRY_REQUEST_LATER') {\r\n            queue = __spreadArray(__spreadArray([], staged), queue);\r\n            consoleLogger.info(\"Retry transport request later.\");\r\n        }\r\n        remainingTries = DEFAULT_REMAINING_TRIES;\r\n        // Schedule the next process.\r\n        processQueue(requestOffset);\r\n    });\r\n}\r\nfunction postToFlEndpoint(data) {\r\n    var flTransportFullUrl = SettingsService.getInstance().getFlTransportFullUrl();\r\n    return fetch(flTransportFullUrl, {\r\n        method: 'POST',\r\n        body: JSON.stringify(data)\r\n    });\r\n}\r\nfunction addToQueue(evt) {\r\n    if (!evt.eventTime || !evt.message) {\r\n        throw ERROR_FACTORY.create(\"invalid cc log\" /* INVALID_CC_LOG */);\r\n    }\r\n    // Add the new event to the queue.\r\n    queue = __spreadArray(__spreadArray([], queue), [evt]);\r\n}\r\n/** Log handler for cc service to send the performance logs to the server. */\r\nfunction transportHandler(\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nserializer) {\r\n    return function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        var message = serializer.apply(void 0, args);\r\n        addToQueue({\r\n            message: message,\r\n            eventTime: Date.now()\r\n        });\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/* eslint-enble camelcase */\r\nvar logger;\r\n// This method is not called before initialization.\r\nfunction sendLog(resource, resourceType) {\r\n    if (!logger) {\r\n        logger = transportHandler(serializer);\r\n    }\r\n    logger(resource, resourceType);\r\n}\r\nfunction logTrace(trace) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log if trace is auto generated and instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled && trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if trace is custom and data collection is disabled.\r\n    if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\r\n        return;\r\n    }\r\n    // Do not log if required apis are not available.\r\n    if (!Api.getInstance().requiredApisAvailable()) {\r\n        return;\r\n    }\r\n    // Only log the page load auto traces if page is visible.\r\n    if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\r\n        return;\r\n    }\r\n    if (isPerfInitialized()) {\r\n        sendTraceLog(trace);\r\n    }\r\n    else {\r\n        // Custom traces can be used before the initialization but logging\r\n        // should wait until after.\r\n        getInitializationPromise().then(function () { return sendTraceLog(trace); }, function () { return sendTraceLog(trace); });\r\n    }\r\n}\r\nfunction sendTraceLog(trace) {\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    var settingsService = SettingsService.getInstance();\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logTraceAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(trace, 1 /* Trace */); }, 0);\r\n}\r\nfunction logNetworkRequest(networkRequest) {\r\n    var settingsService = SettingsService.getInstance();\r\n    // Do not log network requests if instrumentation is disabled.\r\n    if (!settingsService.instrumentationEnabled) {\r\n        return;\r\n    }\r\n    // Do not log the js sdk's call to transport service domain to avoid unnecessary cycle.\r\n    // Need to blacklist both old and new endpoints to avoid migration gap.\r\n    var networkRequestUrl = networkRequest.url;\r\n    // Blacklist old log endpoint and new transport endpoint.\r\n    // Because Performance SDK doesn't instrument requests sent from SDK itself.\r\n    var logEndpointUrl = settingsService.logEndPointUrl.split('?')[0];\r\n    var flEndpointUrl = settingsService.flTransportEndpointUrl.split('?')[0];\r\n    if (networkRequestUrl === logEndpointUrl ||\r\n        networkRequestUrl === flEndpointUrl) {\r\n        return;\r\n    }\r\n    if (!settingsService.loggingEnabled ||\r\n        !settingsService.logNetworkAfterSampling) {\r\n        return;\r\n    }\r\n    setTimeout(function () { return sendLog(networkRequest, 0 /* NetworkRequest */); }, 0);\r\n}\r\nfunction serializer(resource, resourceType) {\r\n    if (resourceType === 0 /* NetworkRequest */) {\r\n        return serializeNetworkRequest(resource);\r\n    }\r\n    return serializeTrace(resource);\r\n}\r\nfunction serializeNetworkRequest(networkRequest) {\r\n    var networkRequestMetric = {\r\n        url: networkRequest.url,\r\n        http_method: networkRequest.httpMethod || 0,\r\n        http_response_code: 200,\r\n        response_payload_bytes: networkRequest.responsePayloadBytes,\r\n        client_start_time_us: networkRequest.startTimeUs,\r\n        time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\r\n        time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\r\n    };\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        network_request_metric: networkRequestMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction serializeTrace(trace) {\r\n    var traceMetric = {\r\n        name: trace.name,\r\n        is_auto: trace.isAuto,\r\n        client_start_time_us: trace.startTimeUs,\r\n        duration_us: trace.durationUs\r\n    };\r\n    if (Object.keys(trace.counters).length !== 0) {\r\n        traceMetric.counters = trace.counters;\r\n    }\r\n    var customAttributes = trace.getAttributes();\r\n    if (Object.keys(customAttributes).length !== 0) {\r\n        traceMetric.custom_attributes = customAttributes;\r\n    }\r\n    var perfMetric = {\r\n        application_info: getApplicationInfo(),\r\n        trace_metric: traceMetric\r\n    };\r\n    return JSON.stringify(perfMetric);\r\n}\r\nfunction getApplicationInfo() {\r\n    return {\r\n        google_app_id: SettingsService.getInstance().getAppId(),\r\n        app_instance_id: getIid(),\r\n        web_app_info: {\r\n            sdk_version: SDK_VERSION,\r\n            page_url: Api.getInstance().getUrl(),\r\n            service_worker_status: getServiceWorkerStatus(),\r\n            visibility_state: getVisibilityState(),\r\n            effective_connection_type: getEffectiveConnectionType()\r\n        },\r\n        application_process_state: 0\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_METRIC_NAME_LENGTH = 100;\r\nvar RESERVED_AUTO_PREFIX = '_';\r\nvar oobMetrics = [\r\n    FIRST_PAINT_COUNTER_NAME,\r\n    FIRST_CONTENTFUL_PAINT_COUNTER_NAME,\r\n    FIRST_INPUT_DELAY_COUNTER_NAME\r\n];\r\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\r\nfunction isValidMetricName(name, traceName) {\r\n    if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\r\n        return false;\r\n    }\r\n    return ((traceName &&\r\n        traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) &&\r\n        oobMetrics.indexOf(name) > -1) ||\r\n        !name.startsWith(RESERVED_AUTO_PREFIX));\r\n}\r\n/**\r\n * Converts the provided value to an integer value to be used in case of a metric.\r\n * @param providedValue Provided number value of the metric that needs to be converted to an integer.\r\n *\r\n * @returns Converted integer number to be set for the metric.\r\n */\r\nfunction convertMetricValueToInteger(providedValue) {\r\n    var valueAsInteger = Math.floor(providedValue);\r\n    if (valueAsInteger < providedValue) {\r\n        consoleLogger.info(\"Metric value should be an Integer, setting the value as : \" + valueAsInteger + \".\");\r\n    }\r\n    return valueAsInteger;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Trace = /** @class */ (function () {\r\n    /**\r\n     * @param name The name of the trace.\r\n     * @param isAuto If the trace is auto-instrumented.\r\n     * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n     * is only set when the trace is built for logging when the user directly uses the user timing\r\n     * api (performance.mark and performance.measure).\r\n     */\r\n    function Trace(name, isAuto, traceMeasureName) {\r\n        if (isAuto === void 0) { isAuto = false; }\r\n        this.name = name;\r\n        this.isAuto = isAuto;\r\n        this.state = 1 /* UNINITIALIZED */;\r\n        this.customAttributes = {};\r\n        this.counters = {};\r\n        this.api = Api.getInstance();\r\n        this.randomId = Math.floor(Math.random() * 1000000);\r\n        if (!this.isAuto) {\r\n            this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            this.traceMeasure =\r\n                traceMeasureName ||\r\n                    TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\r\n            if (traceMeasureName) {\r\n                // For the case of direct user timing traces, no start stop will happen. The measure object\r\n                // is already available.\r\n                this.calculateTraceMetrics();\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Starts a trace. The measurement of the duration starts at this point.\r\n     */\r\n    Trace.prototype.start = function () {\r\n        if (this.state !== 1 /* UNINITIALIZED */) {\r\n            throw ERROR_FACTORY.create(\"trace started\" /* TRACE_STARTED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.api.mark(this.traceStartMark);\r\n        this.state = 2 /* RUNNING */;\r\n    };\r\n    /**\r\n     * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n     * is logged.\r\n     */\r\n    Trace.prototype.stop = function () {\r\n        if (this.state !== 2 /* RUNNING */) {\r\n            throw ERROR_FACTORY.create(\"trace stopped\" /* TRACE_STOPPED_BEFORE */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.state = 3 /* TERMINATED */;\r\n        this.api.mark(this.traceStopMark);\r\n        this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\r\n        this.calculateTraceMetrics();\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n     * directly. No need to use start and stop methods.\r\n     * @param startTime Trace start time since epoch in millisec\r\n     * @param duration The duraction of the trace in millisec\r\n     * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n     */\r\n    Trace.prototype.record = function (startTime, duration, options) {\r\n        if (startTime <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace startTime\" /* NONPOSITIVE_TRACE_START_TIME */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        if (duration <= 0) {\r\n            throw ERROR_FACTORY.create(\"nonpositive trace duration\" /* NONPOSITIVE_TRACE_DURATION */, {\r\n                traceName: this.name\r\n            });\r\n        }\r\n        this.durationUs = Math.floor(duration * 1000);\r\n        this.startTimeUs = Math.floor(startTime * 1000);\r\n        if (options && options.attributes) {\r\n            this.customAttributes = __assign({}, options.attributes);\r\n        }\r\n        if (options && options.metrics) {\r\n            for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\r\n                var metric = _a[_i];\r\n                if (!isNaN(Number(options.metrics[metric]))) {\r\n                    this.counters[metric] = Number(Math.floor(options.metrics[metric]));\r\n                }\r\n            }\r\n        }\r\n        logTrace(this);\r\n    };\r\n    /**\r\n     * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n     * custom metric if one with the given name does not exist. The value will be floored down to an\r\n     * integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Increment by value\r\n     */\r\n    Trace.prototype.incrementMetric = function (counter, numAsInteger) {\r\n        if (numAsInteger === void 0) { numAsInteger = 1; }\r\n        if (this.counters[counter] === undefined) {\r\n            this.putMetric(counter, numAsInteger);\r\n        }\r\n        else {\r\n            this.putMetric(counter, this.counters[counter] + numAsInteger);\r\n        }\r\n    };\r\n    /**\r\n     * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n     * given name does not exist. The value will be floored down to an integer.\r\n     * @param counter Name of the custom metric\r\n     * @param numAsInteger Set custom metric to this value\r\n     */\r\n    Trace.prototype.putMetric = function (counter, numAsInteger) {\r\n        if (isValidMetricName(counter, this.name)) {\r\n            this.counters[counter] = convertMetricValueToInteger(numAsInteger);\r\n        }\r\n        else {\r\n            throw ERROR_FACTORY.create(\"invalid custom metric name\" /* INVALID_CUSTOM_METRIC_NAME */, {\r\n                customMetricName: counter\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n     * not exist will return zero.\r\n     * @param counter\r\n     */\r\n    Trace.prototype.getMetric = function (counter) {\r\n        return this.counters[counter] || 0;\r\n    };\r\n    /**\r\n     * Sets a custom attribute of a trace to a certain value.\r\n     * @param attr\r\n     * @param value\r\n     */\r\n    Trace.prototype.putAttribute = function (attr, value) {\r\n        var isValidName = isValidCustomAttributeName(attr);\r\n        var isValidValue = isValidCustomAttributeValue(value);\r\n        if (isValidName && isValidValue) {\r\n            this.customAttributes[attr] = value;\r\n            return;\r\n        }\r\n        // Throw appropriate error when the attribute name or value is invalid.\r\n        if (!isValidName) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute name\" /* INVALID_ATTRIBUTE_NAME */, {\r\n                attributeName: attr\r\n            });\r\n        }\r\n        if (!isValidValue) {\r\n            throw ERROR_FACTORY.create(\"invalid attribute value\" /* INVALID_ATTRIBUTE_VALUE */, {\r\n                attributeValue: value\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Retrieves the value a custom attribute of a trace is set to.\r\n     * @param attr\r\n     */\r\n    Trace.prototype.getAttribute = function (attr) {\r\n        return this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.removeAttribute = function (attr) {\r\n        if (this.customAttributes[attr] === undefined) {\r\n            return;\r\n        }\r\n        delete this.customAttributes[attr];\r\n    };\r\n    Trace.prototype.getAttributes = function () {\r\n        return __assign({}, this.customAttributes);\r\n    };\r\n    Trace.prototype.setStartTime = function (startTime) {\r\n        this.startTimeUs = startTime;\r\n    };\r\n    Trace.prototype.setDuration = function (duration) {\r\n        this.durationUs = duration;\r\n    };\r\n    /**\r\n     * Calculates and assigns the duration and start time of the trace using the measure performance\r\n     * entry.\r\n     */\r\n    Trace.prototype.calculateTraceMetrics = function () {\r\n        var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\r\n        var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\r\n        if (perfMeasureEntry) {\r\n            this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\r\n            this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\r\n        }\r\n    };\r\n    /**\r\n     * @param navigationTimings A single element array which contains the navigationTIming object of\r\n     * the page load\r\n     * @param paintTimings A array which contains paintTiming object of the page load\r\n     * @param firstInputDelay First input delay in millisec\r\n     */\r\n    Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\r\n        var route = Api.getInstance().getUrl();\r\n        if (!route) {\r\n            return;\r\n        }\r\n        var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\r\n        var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\r\n        trace.setStartTime(timeOriginUs);\r\n        // navigationTimings includes only one element.\r\n        if (navigationTimings && navigationTimings[0]) {\r\n            trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\r\n            trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\r\n            trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\r\n            trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\r\n        }\r\n        var FIRST_PAINT = 'first-paint';\r\n        var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\r\n        if (paintTimings) {\r\n            var firstPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_PAINT; });\r\n            if (firstPaint && firstPaint.startTime) {\r\n                trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\r\n            }\r\n            var firstContentfulPaint = paintTimings.find(function (paintObject) { return paintObject.name === FIRST_CONTENTFUL_PAINT; });\r\n            if (firstContentfulPaint && firstContentfulPaint.startTime) {\r\n                trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\r\n            }\r\n            if (firstInputDelay) {\r\n                trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\r\n            }\r\n        }\r\n        logTrace(trace);\r\n    };\r\n    Trace.createUserTimingTrace = function (measureName) {\r\n        var trace = new Trace(measureName, false, measureName);\r\n        logTrace(trace);\r\n    };\r\n    return Trace;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction createNetworkRequestEntry(entry) {\r\n    var performanceEntry = entry;\r\n    if (!performanceEntry || performanceEntry.responseStart === undefined) {\r\n        return;\r\n    }\r\n    var timeOrigin = Api.getInstance().getTimeOrigin();\r\n    var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\r\n    var timeToResponseInitiatedUs = performanceEntry.responseStart\r\n        ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000)\r\n        : undefined;\r\n    var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000);\r\n    // Remove the query params from logged network request url.\r\n    var url = performanceEntry.name && performanceEntry.name.split('?')[0];\r\n    var networkRequest = {\r\n        url: url,\r\n        responsePayloadBytes: performanceEntry.transferSize,\r\n        startTimeUs: startTimeUs,\r\n        timeToResponseInitiatedUs: timeToResponseInitiatedUs,\r\n        timeToResponseCompletedUs: timeToResponseCompletedUs\r\n    };\r\n    logNetworkRequest(networkRequest);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar FID_WAIT_TIME_MS = 5000;\r\nfunction setupOobResources() {\r\n    // Do not initialize unless iid is available.\r\n    if (!getIid()) {\r\n        return;\r\n    }\r\n    // The load event might not have fired yet, and that means performance navigation timing\r\n    // object has a duration of 0. The setup should run after all current tasks in js queue.\r\n    setTimeout(function () { return setupOobTraces(); }, 0);\r\n    setTimeout(function () { return setupNetworkRequests(); }, 0);\r\n    setTimeout(function () { return setupUserTimingTraces(); }, 0);\r\n}\r\nfunction setupNetworkRequests() {\r\n    var api = Api.getInstance();\r\n    var resources = api.getEntriesByType('resource');\r\n    for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\r\n        var resource = resources_1[_i];\r\n        createNetworkRequestEntry(resource);\r\n    }\r\n    api.setupObserver('resource', createNetworkRequestEntry);\r\n}\r\nfunction setupOobTraces() {\r\n    var api = Api.getInstance();\r\n    var navigationTimings = api.getEntriesByType('navigation');\r\n    var paintTimings = api.getEntriesByType('paint');\r\n    // If First Input Desly polyfill is added to the page, report the fid value.\r\n    // https://github.com/GoogleChromeLabs/first-input-delay\r\n    if (api.onFirstInputDelay) {\r\n        // If the fid call back is not called for certain time, continue without it.\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        var timeoutId_1 = setTimeout(function () {\r\n            Trace.createOobTrace(navigationTimings, paintTimings);\r\n            timeoutId_1 = undefined;\r\n        }, FID_WAIT_TIME_MS);\r\n        api.onFirstInputDelay(function (fid) {\r\n            if (timeoutId_1) {\r\n                clearTimeout(timeoutId_1);\r\n                Trace.createOobTrace(navigationTimings, paintTimings, fid);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        Trace.createOobTrace(navigationTimings, paintTimings);\r\n    }\r\n}\r\nfunction setupUserTimingTraces() {\r\n    var api = Api.getInstance();\r\n    // Run through the measure performance entries collected up to this point.\r\n    var measures = api.getEntriesByType('measure');\r\n    for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\r\n        var measure = measures_1[_i];\r\n        createUserTimingTrace(measure);\r\n    }\r\n    // Setup an observer to capture the measures from this point on.\r\n    api.setupObserver('measure', createUserTimingTrace);\r\n}\r\nfunction createUserTimingTrace(measure) {\r\n    var measureName = measure.name;\r\n    // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\r\n    if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) ===\r\n        TRACE_MEASURE_PREFIX) {\r\n        return;\r\n    }\r\n    Trace.createUserTimingTrace(measureName);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PerformanceController = /** @class */ (function () {\r\n    function PerformanceController(app) {\r\n        this.app = app;\r\n        if (Api.getInstance().requiredApisAvailable()) {\r\n            validateIndexedDBOpenable()\r\n                .then(function (isAvailable) {\r\n                if (isAvailable) {\r\n                    setupTransportService();\r\n                    getInitializationPromise().then(setupOobResources, setupOobResources);\r\n                }\r\n            })\r\n                .catch(function (error) {\r\n                consoleLogger.info(\"Environment doesn't support IndexedDB: \" + error);\r\n            });\r\n        }\r\n    }\r\n    PerformanceController.prototype.trace = function (name) {\r\n        return new Trace(name);\r\n    };\r\n    Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().instrumentationEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().instrumentationEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\r\n        get: function () {\r\n            return SettingsService.getInstance().dataCollectionEnabled;\r\n        },\r\n        set: function (val) {\r\n            SettingsService.getInstance().dataCollectionEnabled = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return PerformanceController;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\r\nfunction registerPerformance(instance) {\r\n    var factoryMethod = function (app, installations) {\r\n        if (app.name !== DEFAULT_ENTRY_NAME) {\r\n            throw ERROR_FACTORY.create(\"FB not default\" /* FB_NOT_DEFAULT */);\r\n        }\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"no window\" /* NO_WINDOW */);\r\n        }\r\n        setupApi(window);\r\n        SettingsService.getInstance().firebaseAppInstance = app;\r\n        SettingsService.getInstance().installationsService = installations;\r\n        return new PerformanceController(app);\r\n    };\r\n    // Register performance with firebase-app.\r\n    instance.INTERNAL.registerComponent(new Component('performance', function (container) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because perf has `import '@firebase/installations'`\r\n        var installations = container\r\n            .getProvider('installations')\r\n            .getImmediate();\r\n        return factoryMethod(app, installations);\r\n    }, \"PUBLIC\" /* PUBLIC */));\r\n    instance.registerVersion(name, version);\r\n}\r\nregisterPerformance(firebase);\n\nexport { registerPerformance };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}