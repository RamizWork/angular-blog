{"ast":null,"code":"import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\nvar errorCodeMap = {\n  OK: 'ok',\n  CANCELLED: 'cancelled',\n  UNKNOWN: 'unknown',\n  INVALID_ARGUMENT: 'invalid-argument',\n  DEADLINE_EXCEEDED: 'deadline-exceeded',\n  NOT_FOUND: 'not-found',\n  ALREADY_EXISTS: 'already-exists',\n  PERMISSION_DENIED: 'permission-denied',\n  UNAUTHENTICATED: 'unauthenticated',\n  RESOURCE_EXHAUSTED: 'resource-exhausted',\n  FAILED_PRECONDITION: 'failed-precondition',\n  ABORTED: 'aborted',\n  OUT_OF_RANGE: 'out-of-range',\n  UNIMPLEMENTED: 'unimplemented',\n  INTERNAL: 'internal',\n  UNAVAILABLE: 'unavailable',\n  DATA_LOSS: 'data-loss'\n};\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\nvar HttpsErrorImpl = /** @class */function (_super) {\n  __extends(HttpsErrorImpl, _super);\n  function HttpsErrorImpl(code, message, details) {\n    var _this = _super.call(this, message) || this;\n    // This is a workaround for a bug in TypeScript when extending Error:\n    // tslint:disable-next-line\n    // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\n    _this.code = code;\n    _this.details = details;\n    return _this;\n  }\n  return HttpsErrorImpl;\n}(Error);\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\nfunction codeForHTTPStatus(status) {\n  // Make sure any successful status is OK.\n  if (status >= 200 && status < 300) {\n    return 'ok';\n  }\n  switch (status) {\n    case 0:\n      // This can happen if the server returns 500.\n      return 'internal';\n    case 400:\n      return 'invalid-argument';\n    case 401:\n      return 'unauthenticated';\n    case 403:\n      return 'permission-denied';\n    case 404:\n      return 'not-found';\n    case 409:\n      return 'aborted';\n    case 429:\n      return 'resource-exhausted';\n    case 499:\n      return 'cancelled';\n    case 500:\n      return 'internal';\n    case 501:\n      return 'unimplemented';\n    case 503:\n      return 'unavailable';\n    case 504:\n      return 'deadline-exceeded';\n  }\n  return 'unknown';\n}\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\nfunction _errorForResponse(status, bodyJSON, serializer) {\n  var code = codeForHTTPStatus(status);\n  // Start with reasonable defaults from the status code.\n  var description = code;\n  var details = undefined;\n  // Then look through the body for explicit details.\n  try {\n    var errorJSON = bodyJSON && bodyJSON.error;\n    if (errorJSON) {\n      var status_1 = errorJSON.status;\n      if (typeof status_1 === 'string') {\n        if (!errorCodeMap[status_1]) {\n          // They must've included an unknown error code in the body.\n          return new HttpsErrorImpl('internal', 'internal');\n        }\n        code = errorCodeMap[status_1];\n        // TODO(klimt): Add better default descriptions for error enums.\n        // The default description needs to be updated for the new code.\n        description = status_1;\n      }\n      var message = errorJSON.message;\n      if (typeof message === 'string') {\n        description = message;\n      }\n      details = errorJSON.details;\n      if (details !== undefined) {\n        details = serializer.decode(details);\n      }\n    }\n  } catch (e) {\n    // If we couldn't parse explicit error data, that's fine.\n  }\n  if (code === 'ok') {\n    // Technically, there's an edge case where a developer could explicitly\n    // return an error code of OK, and we will treat it as success, but that\n    // seems reasonable.\n    return null;\n  }\n  return new HttpsErrorImpl(code, description, details);\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\nvar ContextProvider = /** @class */function () {\n  function ContextProvider(authProvider, messagingProvider) {\n    var _this = this;\n    this.auth = null;\n    this.messaging = null;\n    this.auth = authProvider.getImmediate({\n      optional: true\n    });\n    this.messaging = messagingProvider.getImmediate({\n      optional: true\n    });\n    if (!this.auth) {\n      authProvider.get().then(function (auth) {\n        return _this.auth = auth;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n    if (!this.messaging) {\n      messagingProvider.get().then(function (messaging) {\n        return _this.messaging = messaging;\n      }, function () {\n        /* get() never rejects */\n      });\n    }\n  }\n  ContextProvider.prototype.getAuthToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var token;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.auth) {\n              return [2 /*return*/, undefined];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.auth.getToken()];\n          case 2:\n            token = _a.sent();\n            if (!token) {\n              return [2 /*return*/, undefined];\n            }\n            return [2 /*return*/, token.accessToken];\n          case 3:\n            _a.sent();\n            // If there's any error when trying to get the auth token, leave it off.\n            return [2 /*return*/, undefined];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  ContextProvider.prototype.getInstanceIdToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.messaging || !('Notification' in self) || Notification.permission !== 'granted') {\n              return [2 /*return*/, undefined];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, this.messaging.getToken()];\n          case 2:\n            return [2 /*return*/, _a.sent()];\n          case 3:\n            _a.sent();\n            // We don't warn on this, because it usually means messaging isn't set up.\n            // console.warn('Failed to retrieve instance id token.', e);\n            // If there's any error when trying to get the token, leave it off.\n            return [2 /*return*/, undefined];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  ContextProvider.prototype.getContext = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var authToken, instanceIdToken;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.getAuthToken()];\n          case 1:\n            authToken = _a.sent();\n            return [4 /*yield*/, this.getInstanceIdToken()];\n          case 2:\n            instanceIdToken = _a.sent();\n            return [2 /*return*/, {\n              authToken: authToken,\n              instanceIdToken: instanceIdToken\n            }];\n        }\n      });\n    });\n  };\n  return ContextProvider;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\nfunction mapValues(\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\no, f) {\n  var result = {};\n  for (var key in o) {\n    if (o.hasOwnProperty(key)) {\n      result[key] = f(o[key]);\n    }\n  }\n  return result;\n}\nvar Serializer = /** @class */function () {\n  function Serializer() {}\n  // Takes data and encodes it in a JSON-friendly way, such that types such as\n  // Date are preserved.\n  Serializer.prototype.encode = function (data) {\n    var _this = this;\n    if (data == null) {\n      return null;\n    }\n    if (data instanceof Number) {\n      data = data.valueOf();\n    }\n    if (typeof data === 'number' && isFinite(data)) {\n      // Any number in JS is safe to put directly in JSON and parse as a double\n      // without any loss of precision.\n      return data;\n    }\n    if (data === true || data === false) {\n      return data;\n    }\n    if (Object.prototype.toString.call(data) === '[object String]') {\n      return data;\n    }\n    if (data instanceof Date) {\n      return data.toISOString();\n    }\n    if (Array.isArray(data)) {\n      return data.map(function (x) {\n        return _this.encode(x);\n      });\n    }\n    if (typeof data === 'function' || typeof data === 'object') {\n      return mapValues(data, function (x) {\n        return _this.encode(x);\n      });\n    }\n    // If we got this far, the data is not encodable.\n    throw new Error('Data cannot be encoded in JSON: ' + data);\n  };\n  // Takes data that's been encoded in a JSON-friendly form and returns a form\n  // with richer datatypes, such as Dates, etc.\n  Serializer.prototype.decode = function (json) {\n    var _this = this;\n    if (json == null) {\n      return json;\n    }\n    if (json['@type']) {\n      switch (json['@type']) {\n        case LONG_TYPE:\n        // Fall through and handle this the same as unsigned.\n        case UNSIGNED_LONG_TYPE:\n          {\n            // Technically, this could work return a valid number for malformed\n            // data if there was a number followed by garbage. But it's just not\n            // worth all the extra code to detect that case.\n            var value = Number(json['value']);\n            if (isNaN(value)) {\n              throw new Error('Data cannot be decoded from JSON: ' + json);\n            }\n            return value;\n          }\n        default:\n          {\n            throw new Error('Data cannot be decoded from JSON: ' + json);\n          }\n      }\n    }\n    if (Array.isArray(json)) {\n      return json.map(function (x) {\n        return _this.decode(x);\n      });\n    }\n    if (typeof json === 'function' || typeof json === 'object') {\n      return mapValues(json, function (x) {\n        return _this.decode(x);\n      });\n    }\n    // Anything else is safe to return.\n    return json;\n  };\n  return Serializer;\n}();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\nfunction failAfter(millis) {\n  var timer;\n  var promise = new Promise(function (_, reject) {\n    timer = setTimeout(function () {\n      reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\n    }, millis);\n  });\n  return {\n    timer: timer,\n    promise: promise\n  };\n}\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\nvar Service = /** @class */function () {\n  /**\r\n   * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n   * @param app_ The FirebaseApp to use.\r\n   * @param regionOrCustomDomain_ one of:\r\n   *   a) A region to call functions from, such as us-central1\r\n   *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n   */\n  function Service(app_, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain_, fetchImpl) {\n    var _this = this;\n    if (regionOrCustomDomain_ === void 0) {\n      regionOrCustomDomain_ = 'us-central1';\n    }\n    this.app_ = app_;\n    this.appCheckProvider = appCheckProvider;\n    this.fetchImpl = fetchImpl;\n    this.serializer = new Serializer();\n    this.emulatorOrigin = null;\n    this.INTERNAL = {\n      delete: function () {\n        return Promise.resolve(_this.deleteService());\n      }\n    };\n    this.contextProvider = new ContextProvider(authProvider, messagingProvider);\n    // Cancels all ongoing requests when resolved.\n    this.cancelAllRequests = new Promise(function (resolve) {\n      _this.deleteService = function () {\n        return resolve();\n      };\n    });\n    // Resolve the region or custom domain overload by attempting to parse it.\n    try {\n      var url = new URL(regionOrCustomDomain_);\n      this.customDomain = url.origin;\n      this.region = 'us-central1';\n    } catch (e) {\n      this.customDomain = null;\n      this.region = regionOrCustomDomain_;\n    }\n  }\n  Object.defineProperty(Service.prototype, \"app\", {\n    get: function () {\n      return this.app_;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the URL for a callable with the given name.\r\n   * @param name The name of the callable.\r\n   */\n  Service.prototype._url = function (name) {\n    var projectId = this.app_.options.projectId;\n    if (this.emulatorOrigin !== null) {\n      var origin_1 = this.emulatorOrigin;\n      return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\n    }\n    if (this.customDomain !== null) {\n      return this.customDomain + \"/\" + name;\n    }\n    return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\n  };\n  /**\r\n   * Modify this instance to communicate with the Cloud Functions emulator.\r\n   *\r\n   * Note: this must be called before this instance has been used to do any operations.\r\n   *\r\n   * @param host The emulator host (ex: localhost)\r\n   * @param port The emulator port (ex: 5001)\r\n   */\n  Service.prototype.useEmulator = function (host, port) {\n    this.emulatorOrigin = \"http://\" + host + \":\" + port;\n  };\n  /**\r\n   * Changes this instance to point to a Cloud Functions emulator running\r\n   * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n   *\r\n   * @deprecated Prefer the useEmulator(host, port) method.\r\n   * @param origin The origin of the local emulator, such as\r\n   * \"http://localhost:5005\".\r\n   */\n  Service.prototype.useFunctionsEmulator = function (origin) {\n    this.emulatorOrigin = origin;\n  };\n  /**\r\n   * Returns a reference to the callable https trigger with the given name.\r\n   * @param name The name of the trigger.\r\n   */\n  Service.prototype.httpsCallable = function (name, options) {\n    var _this = this;\n    return function (data) {\n      return _this.call(name, data, options || {});\n    };\n  };\n  /**\r\n   * Does an HTTP POST and returns the completed response.\r\n   * @param url The url to post to.\r\n   * @param body The JSON body of the post.\r\n   * @param headers The HTTP headers to include in the request.\r\n   * @return A Promise that will succeed when the request finishes.\r\n   */\n  Service.prototype.postJSON = function (url, body, headers) {\n    return __awaiter(this, void 0, void 0, function () {\n      var appCheckToken, response, json;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            headers['Content-Type'] = 'application/json';\n            return [4 /*yield*/, this.getAppCheckToken()];\n          case 1:\n            appCheckToken = _a.sent();\n            if (appCheckToken !== null) {\n              headers['X-Firebase-AppCheck'] = appCheckToken;\n            }\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, this.fetchImpl(url, {\n              method: 'POST',\n              body: JSON.stringify(body),\n              headers: headers\n            })];\n          case 3:\n            response = _a.sent();\n            return [3 /*break*/, 5];\n          case 4:\n            _a.sent();\n            // This could be an unhandled error on the backend, or it could be a\n            // network error. There's no way to know, since an unhandled error on the\n            // backend will fail to set the proper CORS header, and thus will be\n            // treated as a network error by fetch.\n            return [2 /*return*/, {\n              status: 0,\n              json: null\n            }];\n          case 5:\n            json = null;\n            _a.label = 6;\n          case 6:\n            _a.trys.push([6, 8,, 9]);\n            return [4 /*yield*/, response.json()];\n          case 7:\n            json = _a.sent();\n            return [3 /*break*/, 9];\n          case 8:\n            _a.sent();\n            return [3 /*break*/, 9];\n          case 9:\n            return [2 /*return*/, {\n              status: response.status,\n              json: json\n            }];\n        }\n      });\n    });\n  };\n  Service.prototype.getAppCheckToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var appCheck, result;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            appCheck = this.appCheckProvider.getImmediate({\n              optional: true\n            });\n            if (!appCheck) return [3 /*break*/, 2];\n            return [4 /*yield*/, appCheck.getToken()];\n          case 1:\n            result = _a.sent();\n            // If getToken() fails, it will still return a dummy token that also has\n            // an error field containing the error message. We will send any token\n            // provided here and show an error if/when it is rejected by the functions\n            // endpoint.\n            return [2 /*return*/, result.token];\n          case 2:\n            return [2 /*return*/, null];\n        }\n      });\n    });\n  };\n  /**\r\n   * Calls a callable function asynchronously and returns the result.\r\n   * @param name The name of the callable trigger.\r\n   * @param data The data to pass as params to the function.s\r\n   */\n  Service.prototype.call = function (name, data, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            url = this._url(name);\n            // Encode any special types, such as dates, in the input data.\n            data = this.serializer.encode(data);\n            body = {\n              data: data\n            };\n            headers = {};\n            return [4 /*yield*/, this.contextProvider.getContext()];\n          case 1:\n            context = _b.sent();\n            if (context.authToken) {\n              headers['Authorization'] = 'Bearer ' + context.authToken;\n            }\n            if (context.instanceIdToken) {\n              headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\n            }\n            timeout = options.timeout || 70000;\n            _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\n            return [4 /*yield*/, Promise.race([clearTimeoutWrapper(timer, this.postJSON(url, body, headers)), failAfterPromise, clearTimeoutWrapper(timer, this.cancelAllRequests)])];\n          case 2:\n            response = _b.sent();\n            // If service was deleted, interrupted response throws an error.\n            if (!response) {\n              throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\n            }\n            error = _errorForResponse(response.status, response.json, this.serializer);\n            if (error) {\n              throw error;\n            }\n            if (!response.json) {\n              throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\n            }\n            responseData = response.json.data;\n            // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\n            // backwards compatibility.\n            if (typeof responseData === 'undefined') {\n              responseData = response.json.result;\n            }\n            if (typeof responseData === 'undefined') {\n              // Consider the response malformed.\n              throw new HttpsErrorImpl('internal', 'Response is missing data field.');\n            }\n            decodedData = this.serializer.decode(responseData);\n            return [2 /*return*/, {\n              data: decodedData\n            }];\n        }\n      });\n    });\n  };\n  return Service;\n}();\nfunction clearTimeoutWrapper(timer, promise) {\n  return __awaiter(this, void 0, void 0, function () {\n    var result;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, promise];\n        case 1:\n          result = _a.sent();\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          clearTimeout(timer);\n          return [2 /*return*/, result];\n      }\n    });\n  });\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Type constant for Firebase Functions.\r\n */\nvar FUNCTIONS_TYPE = 'functions';\nfunction registerFunctions(instance, fetchImpl) {\n  var namespaceExports = {\n    // no-inline\n    Functions: Service\n  };\n  function factory(container, _a) {\n    var regionOrCustomDomain = _a.instanceIdentifier;\n    // Dependencies\n    var app = container.getProvider('app').getImmediate();\n    var authProvider = container.getProvider('auth-internal');\n    var appCheckProvider = container.getProvider('app-check-internal');\n    var messagingProvider = container.getProvider('messaging');\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return new Service(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain, fetchImpl);\n  }\n  instance.INTERNAL.registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* PUBLIC */).setServiceProps(namespaceExports).setMultipleInstances(true));\n}\nvar name = \"@firebase/functions\";\nvar version = \"0.6.16\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nregisterFunctions(firebase, fetch.bind(self));\nfirebase.registerVersion(name, version);","map":{"version":3,"names":["firebase","__extends","__awaiter","__generator","Component","errorCodeMap","OK","CANCELLED","UNKNOWN","INVALID_ARGUMENT","DEADLINE_EXCEEDED","NOT_FOUND","ALREADY_EXISTS","PERMISSION_DENIED","UNAUTHENTICATED","RESOURCE_EXHAUSTED","FAILED_PRECONDITION","ABORTED","OUT_OF_RANGE","UNIMPLEMENTED","INTERNAL","UNAVAILABLE","DATA_LOSS","HttpsErrorImpl","_super","code","message","details","_this","call","Object","setPrototypeOf","prototype","Error","codeForHTTPStatus","status","_errorForResponse","bodyJSON","serializer","description","undefined","errorJSON","error","status_1","decode","e","ContextProvider","authProvider","messagingProvider","auth","messaging","getImmediate","optional","get","then","getAuthToken","token","_a","label","trys","push","getToken","sent","accessToken","getInstanceIdToken","self","Notification","permission","getContext","authToken","instanceIdToken","LONG_TYPE","UNSIGNED_LONG_TYPE","mapValues","o","f","result","key","hasOwnProperty","Serializer","encode","data","Number","valueOf","isFinite","toString","Date","toISOString","Array","isArray","map","x","json","value","isNaN","failAfter","millis","timer","promise","Promise","_","reject","setTimeout","Service","app_","appCheckProvider","regionOrCustomDomain_","fetchImpl","emulatorOrigin","delete","resolve","deleteService","contextProvider","cancelAllRequests","url","URL","customDomain","origin","region","defineProperty","enumerable","configurable","_url","name","projectId","options","origin_1","useEmulator","host","port","useFunctionsEmulator","httpsCallable","postJSON","body","headers","appCheckToken","response","getAppCheckToken","method","JSON","stringify","appCheck","context","timeout","failAfterPromise","responseData","decodedData","_b","race","clearTimeoutWrapper","clearTimeout","FUNCTIONS_TYPE","registerFunctions","instance","namespaceExports","Functions","factory","container","regionOrCustomDomain","instanceIdentifier","app","getProvider","registerComponent","setServiceProps","setMultipleInstances","version","fetch","bind","registerVersion"],"sources":["C:/Progect for learning/angular-blog/node_modules/@firebase/functions/dist/index.esm.js"],"sourcesContent":["import firebase from '@firebase/app';\nimport { __extends, __awaiter, __generator } from 'tslib';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Standard error codes for different ways a request can fail, as defined by:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * This map is used primarily to convert from a backend error code string to\r\n * a client SDK error code string, and make sure it's in the supported set.\r\n */\r\nvar errorCodeMap = {\r\n    OK: 'ok',\r\n    CANCELLED: 'cancelled',\r\n    UNKNOWN: 'unknown',\r\n    INVALID_ARGUMENT: 'invalid-argument',\r\n    DEADLINE_EXCEEDED: 'deadline-exceeded',\r\n    NOT_FOUND: 'not-found',\r\n    ALREADY_EXISTS: 'already-exists',\r\n    PERMISSION_DENIED: 'permission-denied',\r\n    UNAUTHENTICATED: 'unauthenticated',\r\n    RESOURCE_EXHAUSTED: 'resource-exhausted',\r\n    FAILED_PRECONDITION: 'failed-precondition',\r\n    ABORTED: 'aborted',\r\n    OUT_OF_RANGE: 'out-of-range',\r\n    UNIMPLEMENTED: 'unimplemented',\r\n    INTERNAL: 'internal',\r\n    UNAVAILABLE: 'unavailable',\r\n    DATA_LOSS: 'data-loss'\r\n};\r\n/**\r\n * An explicit error that can be thrown from a handler to send an error to the\r\n * client that called the function.\r\n */\r\nvar HttpsErrorImpl = /** @class */ (function (_super) {\r\n    __extends(HttpsErrorImpl, _super);\r\n    function HttpsErrorImpl(code, message, details) {\r\n        var _this = _super.call(this, message) || this;\r\n        // This is a workaround for a bug in TypeScript when extending Error:\r\n        // tslint:disable-next-line\r\n        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n        Object.setPrototypeOf(_this, HttpsErrorImpl.prototype);\r\n        _this.code = code;\r\n        _this.details = details;\r\n        return _this;\r\n    }\r\n    return HttpsErrorImpl;\r\n}(Error));\r\n/**\r\n * Takes an HTTP status code and returns the corresponding ErrorCode.\r\n * This is the standard HTTP status code -> error mapping defined in:\r\n * https://github.com/googleapis/googleapis/blob/master/google/rpc/code.proto\r\n *\r\n * @param status An HTTP status code.\r\n * @return The corresponding ErrorCode, or ErrorCode.UNKNOWN if none.\r\n */\r\nfunction codeForHTTPStatus(status) {\r\n    // Make sure any successful status is OK.\r\n    if (status >= 200 && status < 300) {\r\n        return 'ok';\r\n    }\r\n    switch (status) {\r\n        case 0:\r\n            // This can happen if the server returns 500.\r\n            return 'internal';\r\n        case 400:\r\n            return 'invalid-argument';\r\n        case 401:\r\n            return 'unauthenticated';\r\n        case 403:\r\n            return 'permission-denied';\r\n        case 404:\r\n            return 'not-found';\r\n        case 409:\r\n            return 'aborted';\r\n        case 429:\r\n            return 'resource-exhausted';\r\n        case 499:\r\n            return 'cancelled';\r\n        case 500:\r\n            return 'internal';\r\n        case 501:\r\n            return 'unimplemented';\r\n        case 503:\r\n            return 'unavailable';\r\n        case 504:\r\n            return 'deadline-exceeded';\r\n    }\r\n    return 'unknown';\r\n}\r\n/**\r\n * Takes an HTTP response and returns the corresponding Error, if any.\r\n */\r\nfunction _errorForResponse(status, bodyJSON, serializer) {\r\n    var code = codeForHTTPStatus(status);\r\n    // Start with reasonable defaults from the status code.\r\n    var description = code;\r\n    var details = undefined;\r\n    // Then look through the body for explicit details.\r\n    try {\r\n        var errorJSON = bodyJSON && bodyJSON.error;\r\n        if (errorJSON) {\r\n            var status_1 = errorJSON.status;\r\n            if (typeof status_1 === 'string') {\r\n                if (!errorCodeMap[status_1]) {\r\n                    // They must've included an unknown error code in the body.\r\n                    return new HttpsErrorImpl('internal', 'internal');\r\n                }\r\n                code = errorCodeMap[status_1];\r\n                // TODO(klimt): Add better default descriptions for error enums.\r\n                // The default description needs to be updated for the new code.\r\n                description = status_1;\r\n            }\r\n            var message = errorJSON.message;\r\n            if (typeof message === 'string') {\r\n                description = message;\r\n            }\r\n            details = errorJSON.details;\r\n            if (details !== undefined) {\r\n                details = serializer.decode(details);\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // If we couldn't parse explicit error data, that's fine.\r\n    }\r\n    if (code === 'ok') {\r\n        // Technically, there's an edge case where a developer could explicitly\r\n        // return an error code of OK, and we will treat it as success, but that\r\n        // seems reasonable.\r\n        return null;\r\n    }\r\n    return new HttpsErrorImpl(code, description, details);\r\n}\n\n/**\r\n * Helper class to get metadata that should be included with a function call.\r\n */\r\nvar ContextProvider = /** @class */ (function () {\r\n    function ContextProvider(authProvider, messagingProvider) {\r\n        var _this = this;\r\n        this.auth = null;\r\n        this.messaging = null;\r\n        this.auth = authProvider.getImmediate({ optional: true });\r\n        this.messaging = messagingProvider.getImmediate({\r\n            optional: true\r\n        });\r\n        if (!this.auth) {\r\n            authProvider.get().then(function (auth) { return (_this.auth = auth); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n        if (!this.messaging) {\r\n            messagingProvider.get().then(function (messaging) { return (_this.messaging = messaging); }, function () {\r\n                /* get() never rejects */\r\n            });\r\n        }\r\n    }\r\n    ContextProvider.prototype.getAuthToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var token;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.auth) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.auth.getToken()];\r\n                    case 2:\r\n                        token = _a.sent();\r\n                        if (!token) {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [2 /*return*/, token.accessToken];\r\n                    case 3:\r\n                        _a.sent();\r\n                        // If there's any error when trying to get the auth token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getInstanceIdToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.messaging ||\r\n                            !('Notification' in self) ||\r\n                            Notification.permission !== 'granted') {\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, this.messaging.getToken()];\r\n                    case 2: return [2 /*return*/, _a.sent()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        // We don't warn on this, because it usually means messaging isn't set up.\r\n                        // console.warn('Failed to retrieve instance id token.', e);\r\n                        // If there's any error when trying to get the token, leave it off.\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    ContextProvider.prototype.getContext = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var authToken, instanceIdToken;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.getAuthToken()];\r\n                    case 1:\r\n                        authToken = _a.sent();\r\n                        return [4 /*yield*/, this.getInstanceIdToken()];\r\n                    case 2:\r\n                        instanceIdToken = _a.sent();\r\n                        return [2 /*return*/, { authToken: authToken, instanceIdToken: instanceIdToken }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return ContextProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LONG_TYPE = 'type.googleapis.com/google.protobuf.Int64Value';\r\nvar UNSIGNED_LONG_TYPE = 'type.googleapis.com/google.protobuf.UInt64Value';\r\nfunction mapValues(\r\n// { [k: string]: unknown } is no longer a wildcard assignment target after typescript 3.5\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\no, f) {\r\n    var result = {};\r\n    for (var key in o) {\r\n        if (o.hasOwnProperty(key)) {\r\n            result[key] = f(o[key]);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nvar Serializer = /** @class */ (function () {\r\n    function Serializer() {\r\n    }\r\n    // Takes data and encodes it in a JSON-friendly way, such that types such as\r\n    // Date are preserved.\r\n    Serializer.prototype.encode = function (data) {\r\n        var _this = this;\r\n        if (data == null) {\r\n            return null;\r\n        }\r\n        if (data instanceof Number) {\r\n            data = data.valueOf();\r\n        }\r\n        if (typeof data === 'number' && isFinite(data)) {\r\n            // Any number in JS is safe to put directly in JSON and parse as a double\r\n            // without any loss of precision.\r\n            return data;\r\n        }\r\n        if (data === true || data === false) {\r\n            return data;\r\n        }\r\n        if (Object.prototype.toString.call(data) === '[object String]') {\r\n            return data;\r\n        }\r\n        if (data instanceof Date) {\r\n            return data.toISOString();\r\n        }\r\n        if (Array.isArray(data)) {\r\n            return data.map(function (x) { return _this.encode(x); });\r\n        }\r\n        if (typeof data === 'function' || typeof data === 'object') {\r\n            return mapValues(data, function (x) { return _this.encode(x); });\r\n        }\r\n        // If we got this far, the data is not encodable.\r\n        throw new Error('Data cannot be encoded in JSON: ' + data);\r\n    };\r\n    // Takes data that's been encoded in a JSON-friendly form and returns a form\r\n    // with richer datatypes, such as Dates, etc.\r\n    Serializer.prototype.decode = function (json) {\r\n        var _this = this;\r\n        if (json == null) {\r\n            return json;\r\n        }\r\n        if (json['@type']) {\r\n            switch (json['@type']) {\r\n                case LONG_TYPE:\r\n                // Fall through and handle this the same as unsigned.\r\n                case UNSIGNED_LONG_TYPE: {\r\n                    // Technically, this could work return a valid number for malformed\r\n                    // data if there was a number followed by garbage. But it's just not\r\n                    // worth all the extra code to detect that case.\r\n                    var value = Number(json['value']);\r\n                    if (isNaN(value)) {\r\n                        throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                    }\r\n                    return value;\r\n                }\r\n                default: {\r\n                    throw new Error('Data cannot be decoded from JSON: ' + json);\r\n                }\r\n            }\r\n        }\r\n        if (Array.isArray(json)) {\r\n            return json.map(function (x) { return _this.decode(x); });\r\n        }\r\n        if (typeof json === 'function' || typeof json === 'object') {\r\n            return mapValues(json, function (x) { return _this.decode(x); });\r\n        }\r\n        // Anything else is safe to return.\r\n        return json;\r\n    };\r\n    return Serializer;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns a Promise that will be rejected after the given duration.\r\n * The error will be of type HttpsErrorImpl.\r\n *\r\n * @param millis Number of milliseconds to wait before rejecting.\r\n */\r\nfunction failAfter(millis) {\r\n    var timer;\r\n    var promise = new Promise(function (_, reject) {\r\n        timer = setTimeout(function () {\r\n            reject(new HttpsErrorImpl('deadline-exceeded', 'deadline-exceeded'));\r\n        }, millis);\r\n    });\r\n    return {\r\n        timer: timer,\r\n        promise: promise\r\n    };\r\n}\r\n/**\r\n * The main class for the Firebase Functions SDK.\r\n */\r\nvar Service = /** @class */ (function () {\r\n    /**\r\n     * Creates a new Functions service for the given app and (optional) region or custom domain.\r\n     * @param app_ The FirebaseApp to use.\r\n     * @param regionOrCustomDomain_ one of:\r\n     *   a) A region to call functions from, such as us-central1\r\n     *   b) A custom domain to use as a functions prefix, such as https://mydomain.com\r\n     */\r\n    function Service(app_, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain_, fetchImpl) {\r\n        var _this = this;\r\n        if (regionOrCustomDomain_ === void 0) { regionOrCustomDomain_ = 'us-central1'; }\r\n        this.app_ = app_;\r\n        this.appCheckProvider = appCheckProvider;\r\n        this.fetchImpl = fetchImpl;\r\n        this.serializer = new Serializer();\r\n        this.emulatorOrigin = null;\r\n        this.INTERNAL = {\r\n            delete: function () {\r\n                return Promise.resolve(_this.deleteService());\r\n            }\r\n        };\r\n        this.contextProvider = new ContextProvider(authProvider, messagingProvider);\r\n        // Cancels all ongoing requests when resolved.\r\n        this.cancelAllRequests = new Promise(function (resolve) {\r\n            _this.deleteService = function () {\r\n                return resolve();\r\n            };\r\n        });\r\n        // Resolve the region or custom domain overload by attempting to parse it.\r\n        try {\r\n            var url = new URL(regionOrCustomDomain_);\r\n            this.customDomain = url.origin;\r\n            this.region = 'us-central1';\r\n        }\r\n        catch (e) {\r\n            this.customDomain = null;\r\n            this.region = regionOrCustomDomain_;\r\n        }\r\n    }\r\n    Object.defineProperty(Service.prototype, \"app\", {\r\n        get: function () {\r\n            return this.app_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the URL for a callable with the given name.\r\n     * @param name The name of the callable.\r\n     */\r\n    Service.prototype._url = function (name) {\r\n        var projectId = this.app_.options.projectId;\r\n        if (this.emulatorOrigin !== null) {\r\n            var origin_1 = this.emulatorOrigin;\r\n            return origin_1 + \"/\" + projectId + \"/\" + this.region + \"/\" + name;\r\n        }\r\n        if (this.customDomain !== null) {\r\n            return this.customDomain + \"/\" + name;\r\n        }\r\n        return \"https://\" + this.region + \"-\" + projectId + \".cloudfunctions.net/\" + name;\r\n    };\r\n    /**\r\n     * Modify this instance to communicate with the Cloud Functions emulator.\r\n     *\r\n     * Note: this must be called before this instance has been used to do any operations.\r\n     *\r\n     * @param host The emulator host (ex: localhost)\r\n     * @param port The emulator port (ex: 5001)\r\n     */\r\n    Service.prototype.useEmulator = function (host, port) {\r\n        this.emulatorOrigin = \"http://\" + host + \":\" + port;\r\n    };\r\n    /**\r\n     * Changes this instance to point to a Cloud Functions emulator running\r\n     * locally. See https://firebase.google.com/docs/functions/local-emulator\r\n     *\r\n     * @deprecated Prefer the useEmulator(host, port) method.\r\n     * @param origin The origin of the local emulator, such as\r\n     * \"http://localhost:5005\".\r\n     */\r\n    Service.prototype.useFunctionsEmulator = function (origin) {\r\n        this.emulatorOrigin = origin;\r\n    };\r\n    /**\r\n     * Returns a reference to the callable https trigger with the given name.\r\n     * @param name The name of the trigger.\r\n     */\r\n    Service.prototype.httpsCallable = function (name, options) {\r\n        var _this = this;\r\n        return function (data) {\r\n            return _this.call(name, data, options || {});\r\n        };\r\n    };\r\n    /**\r\n     * Does an HTTP POST and returns the completed response.\r\n     * @param url The url to post to.\r\n     * @param body The JSON body of the post.\r\n     * @param headers The HTTP headers to include in the request.\r\n     * @return A Promise that will succeed when the request finishes.\r\n     */\r\n    Service.prototype.postJSON = function (url, body, headers) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var appCheckToken, response, json;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        headers['Content-Type'] = 'application/json';\r\n                        return [4 /*yield*/, this.getAppCheckToken()];\r\n                    case 1:\r\n                        appCheckToken = _a.sent();\r\n                        if (appCheckToken !== null) {\r\n                            headers['X-Firebase-AppCheck'] = appCheckToken;\r\n                        }\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.fetchImpl(url, {\r\n                                method: 'POST',\r\n                                body: JSON.stringify(body),\r\n                                headers: headers\r\n                            })];\r\n                    case 3:\r\n                        response = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        _a.sent();\r\n                        // This could be an unhandled error on the backend, or it could be a\r\n                        // network error. There's no way to know, since an unhandled error on the\r\n                        // backend will fail to set the proper CORS header, and thus will be\r\n                        // treated as a network error by fetch.\r\n                        return [2 /*return*/, {\r\n                                status: 0,\r\n                                json: null\r\n                            }];\r\n                    case 5:\r\n                        json = null;\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        _a.trys.push([6, 8, , 9]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 7:\r\n                        json = _a.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 8:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 9];\r\n                    case 9: return [2 /*return*/, {\r\n                            status: response.status,\r\n                            json: json\r\n                        }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Service.prototype.getAppCheckToken = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var appCheck, result;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        appCheck = this.appCheckProvider.getImmediate({ optional: true });\r\n                        if (!appCheck) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, appCheck.getToken()];\r\n                    case 1:\r\n                        result = _a.sent();\r\n                        // If getToken() fails, it will still return a dummy token that also has\r\n                        // an error field containing the error message. We will send any token\r\n                        // provided here and show an error if/when it is rejected by the functions\r\n                        // endpoint.\r\n                        return [2 /*return*/, result.token];\r\n                    case 2: return [2 /*return*/, null];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Calls a callable function asynchronously and returns the result.\r\n     * @param name The name of the callable trigger.\r\n     * @param data The data to pass as params to the function.s\r\n     */\r\n    Service.prototype.call = function (name, data, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var url, body, headers, context, timeout, _a, timer, failAfterPromise, response, error, responseData, decodedData;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        url = this._url(name);\r\n                        // Encode any special types, such as dates, in the input data.\r\n                        data = this.serializer.encode(data);\r\n                        body = { data: data };\r\n                        headers = {};\r\n                        return [4 /*yield*/, this.contextProvider.getContext()];\r\n                    case 1:\r\n                        context = _b.sent();\r\n                        if (context.authToken) {\r\n                            headers['Authorization'] = 'Bearer ' + context.authToken;\r\n                        }\r\n                        if (context.instanceIdToken) {\r\n                            headers['Firebase-Instance-ID-Token'] = context.instanceIdToken;\r\n                        }\r\n                        timeout = options.timeout || 70000;\r\n                        _a = failAfter(timeout), timer = _a.timer, failAfterPromise = _a.promise;\r\n                        return [4 /*yield*/, Promise.race([\r\n                                clearTimeoutWrapper(timer, this.postJSON(url, body, headers)),\r\n                                failAfterPromise,\r\n                                clearTimeoutWrapper(timer, this.cancelAllRequests)\r\n                            ])];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        // If service was deleted, interrupted response throws an error.\r\n                        if (!response) {\r\n                            throw new HttpsErrorImpl('cancelled', 'Firebase Functions instance was deleted.');\r\n                        }\r\n                        error = _errorForResponse(response.status, response.json, this.serializer);\r\n                        if (error) {\r\n                            throw error;\r\n                        }\r\n                        if (!response.json) {\r\n                            throw new HttpsErrorImpl('internal', 'Response is not valid JSON object.');\r\n                        }\r\n                        responseData = response.json.data;\r\n                        // TODO(klimt): For right now, allow \"result\" instead of \"data\", for\r\n                        // backwards compatibility.\r\n                        if (typeof responseData === 'undefined') {\r\n                            responseData = response.json.result;\r\n                        }\r\n                        if (typeof responseData === 'undefined') {\r\n                            // Consider the response malformed.\r\n                            throw new HttpsErrorImpl('internal', 'Response is missing data field.');\r\n                        }\r\n                        decodedData = this.serializer.decode(responseData);\r\n                        return [2 /*return*/, { data: decodedData }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return Service;\r\n}());\r\nfunction clearTimeoutWrapper(timer, promise) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var result;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, promise];\r\n                case 1:\r\n                    result = _a.sent();\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    clearTimeout(timer);\r\n                    return [2 /*return*/, result];\r\n            }\r\n        });\r\n    });\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Type constant for Firebase Functions.\r\n */\r\nvar FUNCTIONS_TYPE = 'functions';\r\nfunction registerFunctions(instance, fetchImpl) {\r\n    var namespaceExports = {\r\n        // no-inline\r\n        Functions: Service\r\n    };\r\n    function factory(container, _a) {\r\n        var regionOrCustomDomain = _a.instanceIdentifier;\r\n        // Dependencies\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        var appCheckProvider = container.getProvider('app-check-internal');\r\n        var messagingProvider = container.getProvider('messaging');\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return new Service(app, authProvider, messagingProvider, appCheckProvider, regionOrCustomDomain, fetchImpl);\r\n    }\r\n    instance.INTERNAL.registerComponent(new Component(FUNCTIONS_TYPE, factory, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(namespaceExports)\r\n        .setMultipleInstances(true));\r\n}\n\nvar name = \"@firebase/functions\";\nvar version = \"0.6.16\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nregisterFunctions(firebase, fetch.bind(self));\r\nfirebase.registerVersion(name, version);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}