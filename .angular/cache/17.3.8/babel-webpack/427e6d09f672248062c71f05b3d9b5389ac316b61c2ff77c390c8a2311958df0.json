{"ast":null,"code":"import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { __awaiter, __generator, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError, calculateBackoffMillis } from '@firebase/util';\nimport { LogLevel, Logger } from '@firebase/logger';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\nvar CachingClient = /** @class */function () {\n  function CachingClient(client, storage, storageCache, logger) {\n    this.client = client;\n    this.storage = storage;\n    this.storageCache = storageCache;\n    this.logger = logger;\n  }\n  /**\r\n   * Returns true if the age of the cached fetched configs is less than or equal to\r\n   * {@link Settings#minimumFetchIntervalInSeconds}.\r\n   *\r\n   * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n   * native Fetch API.\r\n   *\r\n   * <p>Visible for testing.\r\n   */\n  CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\n    // Cache can only be fresh if it's populated.\n    if (!lastSuccessfulFetchTimestampMillis) {\n      this.logger.debug('Config fetch cache check. Cache unpopulated.');\n      return false;\n    }\n    // Calculates age of cache entry.\n    var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\n    var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\n    this.logger.debug('Config fetch cache check.' + (\" Cache age millis: \" + cacheAgeMillis + \".\") + (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") + (\" Is cache hit: \" + isCachedDataFresh + \".\"));\n    return isCachedDataFresh;\n  };\n  CachingClient.prototype.fetch = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all([this.storage.getLastSuccessfulFetchTimestampMillis(), this.storage.getLastSuccessfulFetchResponse()])];\n          case 1:\n            _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1];\n            // Exits early on cache hit.\n            if (lastSuccessfulFetchResponse && this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\n              return [2 /*return*/, lastSuccessfulFetchResponse];\n            }\n            // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\n            // that allows the caller to pass an ETag.\n            request.eTag = lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\n            return [4 /*yield*/, this.client.fetch(request)];\n          case 2:\n            response = _b.sent();\n            storageOperations = [\n            // Uses write-through cache for consistency with synchronous public API.\n            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())];\n            if (response.status === 200) {\n              // Caches response only if it has changed, ie non-304 responses.\n              storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\n            }\n            return [4 /*yield*/, Promise.all(storageOperations)];\n          case 3:\n            _b.sent();\n            return [2 /*return*/, response];\n        }\n      });\n    });\n  };\n  return CachingClient;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar _a;\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"registration-window\" /* REGISTRATION_WINDOW */] = 'Undefined window object. This SDK only supports usage in a browser environment.', _a[\"registration-project-id\" /* REGISTRATION_PROJECT_ID */] = 'Undefined project identifier. Check Firebase app initialization.', _a[\"registration-api-key\" /* REGISTRATION_API_KEY */] = 'Undefined API key. Check Firebase app initialization.', _a[\"registration-app-id\" /* REGISTRATION_APP_ID */] = 'Undefined app identifier. Check Firebase app initialization.', _a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.', _a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.', _a[\"storage-set\" /* STORAGE_SET */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.', _a[\"storage-delete\" /* STORAGE_DELETE */] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.', _a[\"fetch-client-network\" /* FETCH_NETWORK */] = 'Fetch client failed to connect to a network. Check Internet connection.' + ' Original error: {$originalErrorMessage}.', _a[\"fetch-timeout\" /* FETCH_TIMEOUT */] = 'The config fetch request timed out. ' + ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.', _a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' + ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' + ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.', _a[\"fetch-client-parse\" /* FETCH_PARSE */] = 'Fetch client could not parse response.' + ' Original error: {$originalErrorMessage}.', _a[\"fetch-status\" /* FETCH_STATUS */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.', _a);\nvar ERROR_FACTORY = new ErrorFactory('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\n// Note how this is like typeof/instanceof, but for ErrorCode.\nfunction hasErrorCode(e, errorCode) {\n  return e instanceof FirebaseError && e.code.indexOf(errorCode) !== -1;\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\nfunction getUserLanguage(navigatorLanguage) {\n  if (navigatorLanguage === void 0) {\n    navigatorLanguage = navigator;\n  }\n  return (\n    // Most reliable, but only supported in Chrome/Firefox.\n    navigatorLanguage.languages && navigatorLanguage.languages[0] ||\n    // Supported in most browsers, but returns the language of the browser\n    // UI, not the language set in browser settings.\n    navigatorLanguage.language\n    // Polyfill otherwise.\n  );\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\nvar RestClient = /** @class */function () {\n  function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\n    this.firebaseInstallations = firebaseInstallations;\n    this.sdkVersion = sdkVersion;\n    this.namespace = namespace;\n    this.projectId = projectId;\n    this.apiKey = apiKey;\n    this.appId = appId;\n  }\n  /**\r\n   * Fetches from the Remote Config REST API.\r\n   *\r\n   * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n   * connect to the network.\r\n   * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n   * fetch response.\r\n   * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n   */\n  RestClient.prototype.fetch = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all([this.firebaseInstallations.getId(), this.firebaseInstallations.getToken()])];\n          case 1:\n            _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\n            urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE || 'https://firebaseremoteconfig.googleapis.com';\n            url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\n            headers = {\n              'Content-Type': 'application/json',\n              'Content-Encoding': 'gzip',\n              // Deviates from pure decorator by not passing max-age header since we don't currently have\n              // service behavior using that header.\n              'If-None-Match': request.eTag || '*'\n            };\n            requestBody = {\n              /* eslint-disable camelcase */\n              sdk_version: this.sdkVersion,\n              app_instance_id: installationId,\n              app_instance_id_token: installationToken,\n              app_id: this.appId,\n              language_code: getUserLanguage()\n              /* eslint-enable camelcase */\n            };\n            options = {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(requestBody)\n            };\n            fetchPromise = fetch(url, options);\n            timeoutPromise = new Promise(function (_resolve, reject) {\n              // Maps async event listener to Promise API.\n              request.signal.addEventListener(function () {\n                // Emulates https://heycam.github.io/webidl/#aborterror\n                var error = new Error('The operation was aborted.');\n                error.name = 'AbortError';\n                reject(error);\n              });\n            });\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 5,, 6]);\n            return [4 /*yield*/, Promise.race([fetchPromise, timeoutPromise])];\n          case 3:\n            _b.sent();\n            return [4 /*yield*/, fetchPromise];\n          case 4:\n            response = _b.sent();\n            return [3 /*break*/, 6];\n          case 5:\n            originalError_1 = _b.sent();\n            errorCode = \"fetch-client-network\" /* FETCH_NETWORK */;\n            if (originalError_1.name === 'AbortError') {\n              errorCode = \"fetch-timeout\" /* FETCH_TIMEOUT */;\n            }\n            throw ERROR_FACTORY.create(errorCode, {\n              originalErrorMessage: originalError_1.message\n            });\n          case 6:\n            status = response.status;\n            responseEtag = response.headers.get('ETag') || undefined;\n            if (!(response.status === 200)) return [3 /*break*/, 11];\n            responseBody = void 0;\n            _b.label = 7;\n          case 7:\n            _b.trys.push([7, 9,, 10]);\n            return [4 /*yield*/, response.json()];\n          case 8:\n            responseBody = _b.sent();\n            return [3 /*break*/, 10];\n          case 9:\n            originalError_2 = _b.sent();\n            throw ERROR_FACTORY.create(\"fetch-client-parse\" /* FETCH_PARSE */, {\n              originalErrorMessage: originalError_2.message\n            });\n          case 10:\n            config = responseBody['entries'];\n            state = responseBody['state'];\n            _b.label = 11;\n          case 11:\n            // Normalizes based on legacy state.\n            if (state === 'INSTANCE_STATE_UNSPECIFIED') {\n              status = 500;\n            } else if (state === 'NO_CHANGE') {\n              status = 304;\n            } else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\n              // These cases can be fixed remotely, so normalize to safe value.\n              config = {};\n            }\n            // Normalize to exception-based control flow for non-success cases.\n            // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\n            // differentiating success states (200 from 304; the state body param is undefined in a\n            // standard 304).\n            if (status !== 304 && status !== 200) {\n              throw ERROR_FACTORY.create(\"fetch-status\" /* FETCH_STATUS */, {\n                httpStatus: status\n              });\n            }\n            return [2 /*return*/, {\n              status: status,\n              eTag: responseEtag,\n              config: config\n            }];\n        }\n      });\n    });\n  };\n  return RestClient;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\nvar RemoteConfigAbortSignal = /** @class */function () {\n  function RemoteConfigAbortSignal() {\n    this.listeners = [];\n  }\n  RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\n    this.listeners.push(listener);\n  };\n  RemoteConfigAbortSignal.prototype.abort = function () {\n    this.listeners.forEach(function (listener) {\n      return listener();\n    });\n  };\n  return RemoteConfigAbortSignal;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\nvar DEFAULT_VALUE_FOR_STRING = '';\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\nvar Value = /** @class */function () {\n  function Value(_source, _value) {\n    if (_value === void 0) {\n      _value = DEFAULT_VALUE_FOR_STRING;\n    }\n    this._source = _source;\n    this._value = _value;\n  }\n  Value.prototype.asString = function () {\n    return this._value;\n  };\n  Value.prototype.asBoolean = function () {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_BOOLEAN;\n    }\n    return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\n  };\n  Value.prototype.asNumber = function () {\n    if (this._source === 'static') {\n      return DEFAULT_VALUE_FOR_NUMBER;\n    }\n    var num = Number(this._value);\n    if (isNaN(num)) {\n      num = DEFAULT_VALUE_FOR_NUMBER;\n    }\n    return num;\n  };\n  Value.prototype.getSource = function () {\n    return this._source;\n  };\n  return Value;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\nvar RemoteConfig = /** @class */function () {\n  function RemoteConfig(\n  // Required by FirebaseServiceFactory interface.\n  app,\n  // JS doesn't support private yet\n  // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\n  // underscore prefix.\n  _client, _storageCache, _storage, _logger) {\n    this.app = app;\n    this._client = _client;\n    this._storageCache = _storageCache;\n    this._storage = _storage;\n    this._logger = _logger;\n    // Tracks completion of initialization promise.\n    this._isInitializationComplete = false;\n    this.settings = {\n      fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\n      minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\n    };\n    this.defaultConfig = {};\n  }\n  // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\n  // to differentiate 2p and 3p use-cases.\n  RemoteConfig.prototype.setLogLevel = function (logLevel) {\n    switch (logLevel) {\n      case 'debug':\n        this._logger.logLevel = LogLevel.DEBUG;\n        break;\n      case 'silent':\n        this._logger.logLevel = LogLevel.SILENT;\n        break;\n      default:\n        this._logger.logLevel = LogLevel.ERROR;\n    }\n  };\n  Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\n    get: function () {\n      return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\n    get: function () {\n      return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  RemoteConfig.prototype.activate = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, lastSuccessfulFetchResponse, activeConfigEtag;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4 /*yield*/, Promise.all([this._storage.getLastSuccessfulFetchResponse(), this._storage.getActiveConfigEtag()])];\n          case 1:\n            _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\n            if (!lastSuccessfulFetchResponse || !lastSuccessfulFetchResponse.config || !lastSuccessfulFetchResponse.eTag || lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\n              // Either there is no successful fetched config, or is the same as current active\n              // config.\n              return [2 /*return*/, false];\n            }\n            return [4 /*yield*/, Promise.all([this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config), this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)])];\n          case 2:\n            _b.sent();\n            return [2 /*return*/, true];\n        }\n      });\n    });\n  };\n  RemoteConfig.prototype.ensureInitialized = function () {\n    var _this = this;\n    if (!this._initializePromise) {\n      this._initializePromise = this._storageCache.loadFromStorage().then(function () {\n        _this._isInitializationComplete = true;\n      });\n    }\n    return this._initializePromise;\n  };\n  /**\r\n   * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n   * {@link Settings.fetchTimeoutInSeconds} or\r\n   * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n   */\n  RemoteConfig.prototype.fetch = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var abortSignal, e_1, lastFetchStatus;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            abortSignal = new RemoteConfigAbortSignal();\n            setTimeout(function () {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\n                  abortSignal.abort();\n                  return [2 /*return*/];\n                });\n              });\n            }, this.settings.fetchTimeoutMillis);\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 4,, 6]);\n            return [4 /*yield*/, this._client.fetch({\n              cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\n              signal: abortSignal\n            })];\n          case 2:\n            _a.sent();\n            return [4 /*yield*/, this._storageCache.setLastFetchStatus('success')];\n          case 3:\n            _a.sent();\n            return [3 /*break*/, 6];\n          case 4:\n            e_1 = _a.sent();\n            lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\" /* FETCH_THROTTLE */) ? 'throttle' : 'failure';\n            return [4 /*yield*/, this._storageCache.setLastFetchStatus(lastFetchStatus)];\n          case 5:\n            _a.sent();\n            throw e_1;\n          case 6:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  RemoteConfig.prototype.fetchAndActivate = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.fetch()];\n          case 1:\n            _a.sent();\n            return [2 /*return*/, this.activate()];\n        }\n      });\n    });\n  };\n  RemoteConfig.prototype.getAll = function () {\n    var _this = this;\n    return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\n      allConfigs[key] = _this.getValue(key);\n      return allConfigs;\n    }, {});\n  };\n  RemoteConfig.prototype.getBoolean = function (key) {\n    return this.getValue(key).asBoolean();\n  };\n  RemoteConfig.prototype.getNumber = function (key) {\n    return this.getValue(key).asNumber();\n  };\n  RemoteConfig.prototype.getString = function (key) {\n    return this.getValue(key).asString();\n  };\n  RemoteConfig.prototype.getValue = function (key) {\n    if (!this._isInitializationComplete) {\n      this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" + ' Await on ensureInitialized if the intent was to get a previously activated value.');\n    }\n    var activeConfig = this._storageCache.getActiveConfig();\n    if (activeConfig && activeConfig[key] !== undefined) {\n      return new Value('remote', activeConfig[key]);\n    } else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\n      return new Value('default', String(this.defaultConfig[key]));\n    }\n    this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" + ' Define a default or remote value if this is unintentional.');\n    return new Value('static');\n  };\n  return RemoteConfig;\n}();\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\nfunction getAllKeys(obj1, obj2) {\n  if (obj1 === void 0) {\n    obj1 = {};\n  }\n  if (obj2 === void 0) {\n    obj2 = {};\n  }\n  return Object.keys(__assign(__assign({}, obj1), obj2));\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\nfunction toFirebaseError(event, errorCode) {\n  var originalError = event.target.error || undefined;\n  return ERROR_FACTORY.create(errorCode, {\n    originalErrorMessage: originalError && originalError.message\n  });\n}\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\nvar DB_NAME = 'firebase_remote_config';\nvar DB_VERSION = 1;\n// Visible for testing.\nfunction openDatabase() {\n  return new Promise(function (resolve, reject) {\n    var request = indexedDB.open(DB_NAME, DB_VERSION);\n    request.onerror = function (event) {\n      reject(toFirebaseError(event, \"storage-open\" /* STORAGE_OPEN */));\n    };\n    request.onsuccess = function (event) {\n      resolve(event.target.result);\n    };\n    request.onupgradeneeded = function (event) {\n      var db = event.target.result;\n      // We don't use 'break' in this switch statement, the fall-through\n      // behavior is what we want, because if there are multiple versions between\n      // the old version and the current version, we want ALL the migrations\n      // that correspond to those versions to run, not only the last one.\n      // eslint-disable-next-line default-case\n      switch (event.oldVersion) {\n        case 0:\n          db.createObjectStore(APP_NAMESPACE_STORE, {\n            keyPath: 'compositeKey'\n          });\n      }\n    };\n  });\n}\n/**\r\n * Abstracts data persistence.\r\n */\nvar Storage = /** @class */function () {\n  /**\r\n   * @param appId enables storage segmentation by app (ID + name).\r\n   * @param appName enables storage segmentation by app (ID + name).\r\n   * @param namespace enables storage segmentation by namespace.\r\n   */\n  function Storage(appId, appName, namespace, openDbPromise) {\n    if (openDbPromise === void 0) {\n      openDbPromise = openDatabase();\n    }\n    this.appId = appId;\n    this.appName = appName;\n    this.namespace = namespace;\n    this.openDbPromise = openDbPromise;\n  }\n  Storage.prototype.getLastFetchStatus = function () {\n    return this.get('last_fetch_status');\n  };\n  Storage.prototype.setLastFetchStatus = function (status) {\n    return this.set('last_fetch_status', status);\n  };\n  // This is comparable to a cache entry timestamp. If we need to expire other data, we could\n  // consider adding timestamp to all storage records and an optional max age arg to getters.\n  Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\n    return this.get('last_successful_fetch_timestamp_millis');\n  };\n  Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\n    return this.set('last_successful_fetch_timestamp_millis', timestamp);\n  };\n  Storage.prototype.getLastSuccessfulFetchResponse = function () {\n    return this.get('last_successful_fetch_response');\n  };\n  Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\n    return this.set('last_successful_fetch_response', response);\n  };\n  Storage.prototype.getActiveConfig = function () {\n    return this.get('active_config');\n  };\n  Storage.prototype.setActiveConfig = function (config) {\n    return this.set('active_config', config);\n  };\n  Storage.prototype.getActiveConfigEtag = function () {\n    return this.get('active_config_etag');\n  };\n  Storage.prototype.setActiveConfigEtag = function (etag) {\n    return this.set('active_config_etag', etag);\n  };\n  Storage.prototype.getThrottleMetadata = function () {\n    return this.get('throttle_metadata');\n  };\n  Storage.prototype.setThrottleMetadata = function (metadata) {\n    return this.set('throttle_metadata', metadata);\n  };\n  Storage.prototype.deleteThrottleMetadata = function () {\n    return this.delete('throttle_metadata');\n  };\n  Storage.prototype.get = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var db;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.openDbPromise];\n          case 1:\n            db = _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n              var compositeKey = _this.createCompositeKey(key);\n              try {\n                var request = objectStore.get(compositeKey);\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-get\" /* STORAGE_GET */));\n                };\n                request.onsuccess = function (event) {\n                  var result = event.target.result;\n                  if (result) {\n                    resolve(result.value);\n                  } else {\n                    resolve(undefined);\n                  }\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n  Storage.prototype.set = function (key, value) {\n    return __awaiter(this, void 0, void 0, function () {\n      var db;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.openDbPromise];\n          case 1:\n            db = _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n              var compositeKey = _this.createCompositeKey(key);\n              try {\n                var request = objectStore.put({\n                  compositeKey: compositeKey,\n                  value: value\n                });\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-set\" /* STORAGE_SET */));\n                };\n                request.onsuccess = function () {\n                  resolve();\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_SET */, {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n  Storage.prototype.delete = function (key) {\n    return __awaiter(this, void 0, void 0, function () {\n      var db;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.openDbPromise];\n          case 1:\n            db = _a.sent();\n            return [2 /*return*/, new Promise(function (resolve, reject) {\n              var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\n              var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\n              var compositeKey = _this.createCompositeKey(key);\n              try {\n                var request = objectStore.delete(compositeKey);\n                request.onerror = function (event) {\n                  reject(toFirebaseError(event, \"storage-delete\" /* STORAGE_DELETE */));\n                };\n                request.onsuccess = function () {\n                  resolve();\n                };\n              } catch (e) {\n                reject(ERROR_FACTORY.create(\"storage-delete\" /* STORAGE_DELETE */, {\n                  originalErrorMessage: e && e.message\n                }));\n              }\n            })];\n        }\n      });\n    });\n  };\n  // Facilitates composite key functionality (which is unsupported in IE).\n  Storage.prototype.createCompositeKey = function (key) {\n    return [this.appId, this.appName, this.namespace, key].join();\n  };\n  return Storage;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\nvar StorageCache = /** @class */function () {\n  function StorageCache(storage) {\n    this.storage = storage;\n  }\n  /**\r\n   * Memory-only getters\r\n   */\n  StorageCache.prototype.getLastFetchStatus = function () {\n    return this.lastFetchStatus;\n  };\n  StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\n    return this.lastSuccessfulFetchTimestampMillis;\n  };\n  StorageCache.prototype.getActiveConfig = function () {\n    return this.activeConfig;\n  };\n  /**\r\n   * Read-ahead getter\r\n   */\n  StorageCache.prototype.loadFromStorage = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            lastFetchStatusPromise = this.storage.getLastFetchStatus();\n            lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\n            activeConfigPromise = this.storage.getActiveConfig();\n            return [4 /*yield*/, lastFetchStatusPromise];\n          case 1:\n            lastFetchStatus = _a.sent();\n            if (lastFetchStatus) {\n              this.lastFetchStatus = lastFetchStatus;\n            }\n            return [4 /*yield*/, lastSuccessfulFetchTimestampMillisPromise];\n          case 2:\n            lastSuccessfulFetchTimestampMillis = _a.sent();\n            if (lastSuccessfulFetchTimestampMillis) {\n              this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\n            }\n            return [4 /*yield*/, activeConfigPromise];\n          case 3:\n            activeConfig = _a.sent();\n            if (activeConfig) {\n              this.activeConfig = activeConfig;\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Write-through setters\r\n   */\n  StorageCache.prototype.setLastFetchStatus = function (status) {\n    this.lastFetchStatus = status;\n    return this.storage.setLastFetchStatus(status);\n  };\n  StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\n    this.lastSuccessfulFetchTimestampMillis = timestampMillis;\n    return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\n  };\n  StorageCache.prototype.setActiveConfig = function (activeConfig) {\n    this.activeConfig = activeConfig;\n    return this.storage.setActiveConfig(activeConfig);\n  };\n  return StorageCache;\n}();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\n  return new Promise(function (resolve, reject) {\n    // Derives backoff from given end time, normalizing negative numbers to zero.\n    var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\n    var timeout = setTimeout(resolve, backoffMillis);\n    // Adds listener, rather than sets onabort, because signal is a shared object.\n    signal.addEventListener(function () {\n      clearTimeout(timeout);\n      // If the request completes before this timeout, the rejection has no effect.\n      reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\n        throttleEndTimeMillis: throttleEndTimeMillis\n      }));\n    });\n  });\n}\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\nfunction isRetriableError(e) {\n  if (!(e instanceof FirebaseError) || !e.customData) {\n    return false;\n  }\n  // Uses string index defined by ErrorData, which FirebaseError implements.\n  var httpStatus = Number(e.customData['httpStatus']);\n  return httpStatus === 429 || httpStatus === 500 || httpStatus === 503 || httpStatus === 504;\n}\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\nvar RetryingClient = /** @class */function () {\n  function RetryingClient(client, storage) {\n    this.client = client;\n    this.storage = storage;\n  }\n  RetryingClient.prototype.fetch = function (request) {\n    return __awaiter(this, void 0, void 0, function () {\n      var throttleMetadata;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, this.storage.getThrottleMetadata()];\n          case 1:\n            throttleMetadata = _a.sent() || {\n              backoffCount: 0,\n              throttleEndTimeMillis: Date.now()\n            };\n            return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\n        }\n      });\n    });\n  };\n  /**\r\n   * A recursive helper for attempting a fetch request repeatedly.\r\n   *\r\n   * @throws any non-retriable errors.\r\n   */\n  RetryingClient.prototype.attemptFetch = function (request, _a) {\n    var throttleEndTimeMillis = _a.throttleEndTimeMillis,\n      backoffCount = _a.backoffCount;\n    return __awaiter(this, void 0, void 0, function () {\n      var response, e_1, throttleMetadata;\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\n            // Ensures the throttle end time is honored if the last attempt timed out.\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\n            return [4 /*yield*/, setAbortableTimeout(request.signal, throttleEndTimeMillis)];\n          case 1:\n            // Starts with a (potentially zero) timeout to support resumption from stored state.\n            // Ensures the throttle end time is honored if the last attempt timed out.\n            // Note the SDK will never make a request if the fetch timeout expires at this point.\n            _b.sent();\n            _b.label = 2;\n          case 2:\n            _b.trys.push([2, 5,, 7]);\n            return [4 /*yield*/, this.client.fetch(request)];\n          case 3:\n            response = _b.sent();\n            // Note the SDK only clears throttle state if response is success or non-retriable.\n            return [4 /*yield*/, this.storage.deleteThrottleMetadata()];\n          case 4:\n            // Note the SDK only clears throttle state if response is success or non-retriable.\n            _b.sent();\n            return [2 /*return*/, response];\n          case 5:\n            e_1 = _b.sent();\n            if (!isRetriableError(e_1)) {\n              throw e_1;\n            }\n            throttleMetadata = {\n              throttleEndTimeMillis: Date.now() + calculateBackoffMillis(backoffCount),\n              backoffCount: backoffCount + 1\n            };\n            // Persists state.\n            return [4 /*yield*/, this.storage.setThrottleMetadata(throttleMetadata)];\n          case 6:\n            // Persists state.\n            _b.sent();\n            return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  return RetryingClient;\n}();\nvar name = \"@firebase/remote-config\";\nvar version = \"0.1.43\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction registerRemoteConfig(firebaseInstance) {\n  firebaseInstance.INTERNAL.registerComponent(new Component('remoteConfig', remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\n  firebaseInstance.registerVersion(name, version);\n  function remoteConfigFactory(container, _a) {\n    var namespace = _a.instanceIdentifier;\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate();\n    // The following call will always succeed because rc has `import '@firebase/installations'`\n    var installations = container.getProvider('installations').getImmediate();\n    // Guards against the SDK being used in non-browser environments.\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"registration-window\" /* REGISTRATION_WINDOW */);\n    }\n    // Normalizes optional inputs.\n    var _b = app.options,\n      projectId = _b.projectId,\n      apiKey = _b.apiKey,\n      appId = _b.appId;\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"registration-project-id\" /* REGISTRATION_PROJECT_ID */);\n    }\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"registration-api-key\" /* REGISTRATION_API_KEY */);\n    }\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"registration-app-id\" /* REGISTRATION_APP_ID */);\n    }\n    namespace = namespace || 'firebase';\n    var storage = new Storage(appId, app.name, namespace);\n    var storageCache = new StorageCache(storage);\n    var logger = new Logger(name);\n    // Sets ERROR as the default log level.\n    // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\n    logger.logLevel = LogLevel.ERROR;\n    var restClient = new RestClient(installations,\n    // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\n    firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\n    var retryingClient = new RetryingClient(restClient, storage);\n    var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger);\n    var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger);\n    // Starts warming cache.\n    // eslint-disable-next-line @typescript-eslint/no-floating-promises\n    remoteConfigInstance.ensureInitialized();\n    return remoteConfigInstance;\n  }\n}\nregisterRemoteConfig(firebase);\nexport { registerRemoteConfig };","map":{"version":3,"names":["firebase","__awaiter","__generator","__assign","ErrorFactory","FirebaseError","calculateBackoffMillis","LogLevel","Logger","Component","CachingClient","client","storage","storageCache","logger","prototype","isCachedDataFresh","cacheMaxAgeMillis","lastSuccessfulFetchTimestampMillis","debug","cacheAgeMillis","Date","now","fetch","request","_a","lastSuccessfulFetchResponse","response","storageOperations","_b","label","Promise","all","getLastSuccessfulFetchTimestampMillis","getLastSuccessfulFetchResponse","sent","eTag","setLastSuccessfulFetchTimestampMillis","status","push","setLastSuccessfulFetchResponse","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","hasErrorCode","e","errorCode","code","indexOf","getUserLanguage","navigatorLanguage","navigator","languages","language","RestClient","firebaseInstallations","sdkVersion","namespace","projectId","apiKey","appId","installationId","installationToken","urlBase","url","headers","requestBody","options","fetchPromise","timeoutPromise","originalError_1","responseEtag","config","state","responseBody","originalError_2","getId","getToken","window","FIREBASE_REMOTE_CONFIG_URL_BASE","sdk_version","app_instance_id","app_instance_id_token","app_id","language_code","method","body","JSON","stringify","_resolve","reject","signal","addEventListener","error","Error","name","trys","race","create","originalErrorMessage","message","get","undefined","json","httpStatus","RemoteConfigAbortSignal","listeners","listener","abort","forEach","DEFAULT_VALUE_FOR_BOOLEAN","DEFAULT_VALUE_FOR_STRING","DEFAULT_VALUE_FOR_NUMBER","BOOLEAN_TRUTHY_VALUES","Value","_source","_value","asString","asBoolean","toLowerCase","asNumber","num","Number","isNaN","getSource","DEFAULT_FETCH_TIMEOUT_MILLIS","DEFAULT_CACHE_MAX_AGE_MILLIS","RemoteConfig","app","_client","_storageCache","_storage","_logger","_isInitializationComplete","settings","fetchTimeoutMillis","minimumFetchIntervalMillis","defaultConfig","setLogLevel","logLevel","DEBUG","SILENT","ERROR","Object","defineProperty","enumerable","configurable","getLastFetchStatus","activate","activeConfigEtag","getActiveConfigEtag","setActiveConfig","setActiveConfigEtag","ensureInitialized","_this","_initializePromise","loadFromStorage","then","abortSignal","e_1","lastFetchStatus","setTimeout","setLastFetchStatus","fetchAndActivate","getAll","getAllKeys","getActiveConfig","reduce","allConfigs","key","getValue","getBoolean","getNumber","getString","activeConfig","String","obj1","obj2","keys","toFirebaseError","event","originalError","target","APP_NAMESPACE_STORE","DB_NAME","DB_VERSION","openDatabase","resolve","indexedDB","open","onerror","onsuccess","result","onupgradeneeded","db","oldVersion","createObjectStore","keyPath","Storage","appName","openDbPromise","set","timestamp","etag","getThrottleMetadata","setThrottleMetadata","metadata","deleteThrottleMetadata","delete","transaction","objectStore","compositeKey","createCompositeKey","value","put","join","StorageCache","lastFetchStatusPromise","lastSuccessfulFetchTimestampMillisPromise","activeConfigPromise","timestampMillis","setAbortableTimeout","throttleEndTimeMillis","backoffMillis","Math","max","timeout","clearTimeout","isRetriableError","customData","RetryingClient","throttleMetadata","backoffCount","attemptFetch","version","registerRemoteConfig","firebaseInstance","INTERNAL","registerComponent","remoteConfigFactory","setMultipleInstances","registerVersion","container","instanceIdentifier","getProvider","getImmediate","installations","restClient","SDK_VERSION","retryingClient","cachingClient","remoteConfigInstance"],"sources":["C:/Progect for learning/angular-blog/node_modules/@firebase/remote-config/dist/index.esm.js"],"sourcesContent":["import firebase from '@firebase/app';\nimport '@firebase/installations';\nimport { __awaiter, __generator, __assign } from 'tslib';\nimport { ErrorFactory, FirebaseError, calculateBackoffMillis } from '@firebase/util';\nimport { LogLevel, Logger } from '@firebase/logger';\nimport { Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the {@link RemoteConfigClient} abstraction with success response caching.\r\n *\r\n * <p>Comparable to the browser's Cache API for responses, but the Cache API requires a Service\r\n * Worker, which requires HTTPS, which would significantly complicate SDK installation. Also, the\r\n * Cache API doesn't support matching entries by time.\r\n */\r\nvar CachingClient = /** @class */ (function () {\r\n    function CachingClient(client, storage, storageCache, logger) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n        this.storageCache = storageCache;\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Returns true if the age of the cached fetched configs is less than or equal to\r\n     * {@link Settings#minimumFetchIntervalInSeconds}.\r\n     *\r\n     * <p>This is comparable to passing `headers = { 'Cache-Control': max-age <maxAge> }` to the\r\n     * native Fetch API.\r\n     *\r\n     * <p>Visible for testing.\r\n     */\r\n    CachingClient.prototype.isCachedDataFresh = function (cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis) {\r\n        // Cache can only be fresh if it's populated.\r\n        if (!lastSuccessfulFetchTimestampMillis) {\r\n            this.logger.debug('Config fetch cache check. Cache unpopulated.');\r\n            return false;\r\n        }\r\n        // Calculates age of cache entry.\r\n        var cacheAgeMillis = Date.now() - lastSuccessfulFetchTimestampMillis;\r\n        var isCachedDataFresh = cacheAgeMillis <= cacheMaxAgeMillis;\r\n        this.logger.debug('Config fetch cache check.' +\r\n            (\" Cache age millis: \" + cacheAgeMillis + \".\") +\r\n            (\" Cache max age millis (minimumFetchIntervalMillis setting): \" + cacheMaxAgeMillis + \".\") +\r\n            (\" Is cache hit: \" + isCachedDataFresh + \".\"));\r\n        return isCachedDataFresh;\r\n    };\r\n    CachingClient.prototype.fetch = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchTimestampMillis, lastSuccessfulFetchResponse, response, storageOperations;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.storage.getLastSuccessfulFetchTimestampMillis(),\r\n                            this.storage.getLastSuccessfulFetchResponse()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchTimestampMillis = _a[0], lastSuccessfulFetchResponse = _a[1];\r\n                        // Exits early on cache hit.\r\n                        if (lastSuccessfulFetchResponse &&\r\n                            this.isCachedDataFresh(request.cacheMaxAgeMillis, lastSuccessfulFetchTimestampMillis)) {\r\n                            return [2 /*return*/, lastSuccessfulFetchResponse];\r\n                        }\r\n                        // Deviates from pure decorator by not honoring a passed ETag since we don't have a public API\r\n                        // that allows the caller to pass an ETag.\r\n                        request.eTag =\r\n                            lastSuccessfulFetchResponse && lastSuccessfulFetchResponse.eTag;\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 2:\r\n                        response = _b.sent();\r\n                        storageOperations = [\r\n                            // Uses write-through cache for consistency with synchronous public API.\r\n                            this.storageCache.setLastSuccessfulFetchTimestampMillis(Date.now())\r\n                        ];\r\n                        if (response.status === 200) {\r\n                            // Caches response only if it has changed, ie non-304 responses.\r\n                            storageOperations.push(this.storage.setLastSuccessfulFetchResponse(response));\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(storageOperations)];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return CachingClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _a;\r\nvar ERROR_DESCRIPTION_MAP = (_a = {},\r\n    _a[\"registration-window\" /* REGISTRATION_WINDOW */] = 'Undefined window object. This SDK only supports usage in a browser environment.',\r\n    _a[\"registration-project-id\" /* REGISTRATION_PROJECT_ID */] = 'Undefined project identifier. Check Firebase app initialization.',\r\n    _a[\"registration-api-key\" /* REGISTRATION_API_KEY */] = 'Undefined API key. Check Firebase app initialization.',\r\n    _a[\"registration-app-id\" /* REGISTRATION_APP_ID */] = 'Undefined app identifier. Check Firebase app initialization.',\r\n    _a[\"storage-open\" /* STORAGE_OPEN */] = 'Error thrown when opening storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-get\" /* STORAGE_GET */] = 'Error thrown when reading from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-set\" /* STORAGE_SET */] = 'Error thrown when writing to storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"storage-delete\" /* STORAGE_DELETE */] = 'Error thrown when deleting from storage. Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-client-network\" /* FETCH_NETWORK */] = 'Fetch client failed to connect to a network. Check Internet connection.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-timeout\" /* FETCH_TIMEOUT */] = 'The config fetch request timed out. ' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.',\r\n    _a[\"fetch-throttle\" /* FETCH_THROTTLE */] = 'The config fetch request timed out while in an exponential backoff state.' +\r\n        ' Configure timeout using \"fetchTimeoutMillis\" SDK setting.' +\r\n        ' Unix timestamp in milliseconds when fetch request throttling ends: {$throttleEndTimeMillis}.',\r\n    _a[\"fetch-client-parse\" /* FETCH_PARSE */] = 'Fetch client could not parse response.' +\r\n        ' Original error: {$originalErrorMessage}.',\r\n    _a[\"fetch-status\" /* FETCH_STATUS */] = 'Fetch server returned an HTTP error status. HTTP status: {$httpStatus}.',\r\n    _a);\r\nvar ERROR_FACTORY = new ErrorFactory('remoteconfig' /* service */, 'Remote Config' /* service name */, ERROR_DESCRIPTION_MAP);\r\n// Note how this is like typeof/instanceof, but for ErrorCode.\r\nfunction hasErrorCode(e, errorCode) {\r\n    return e instanceof FirebaseError && e.code.indexOf(errorCode) !== -1;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Attempts to get the most accurate browser language setting.\r\n *\r\n * <p>Adapted from getUserLanguage in packages/auth/src/utils.js for TypeScript.\r\n *\r\n * <p>Defers default language specification to server logic for consistency.\r\n *\r\n * @param navigatorLanguage Enables tests to override read-only {@link NavigatorLanguage}.\r\n */\r\nfunction getUserLanguage(navigatorLanguage) {\r\n    if (navigatorLanguage === void 0) { navigatorLanguage = navigator; }\r\n    return (\r\n    // Most reliable, but only supported in Chrome/Firefox.\r\n    (navigatorLanguage.languages && navigatorLanguage.languages[0]) ||\r\n        // Supported in most browsers, but returns the language of the browser\r\n        // UI, not the language set in browser settings.\r\n        navigatorLanguage.language\r\n    // Polyfill otherwise.\r\n    );\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Implements the Client abstraction for the Remote Config REST API.\r\n */\r\nvar RestClient = /** @class */ (function () {\r\n    function RestClient(firebaseInstallations, sdkVersion, namespace, projectId, apiKey, appId) {\r\n        this.firebaseInstallations = firebaseInstallations;\r\n        this.sdkVersion = sdkVersion;\r\n        this.namespace = namespace;\r\n        this.projectId = projectId;\r\n        this.apiKey = apiKey;\r\n        this.appId = appId;\r\n    }\r\n    /**\r\n     * Fetches from the Remote Config REST API.\r\n     *\r\n     * @throws a {@link ErrorCode.FETCH_NETWORK} error if {@link GlobalFetch#fetch} can't\r\n     * connect to the network.\r\n     * @throws a {@link ErrorCode.FETCH_PARSE} error if {@link Response#json} can't parse the\r\n     * fetch response.\r\n     * @throws a {@link ErrorCode.FETCH_STATUS} error if the service returns an HTTP error status.\r\n     */\r\n    RestClient.prototype.fetch = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, installationId, installationToken, urlBase, url, headers, requestBody, options, fetchPromise, timeoutPromise, response, originalError_1, errorCode, status, responseEtag, config, state, responseBody, originalError_2;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this.firebaseInstallations.getId(),\r\n                            this.firebaseInstallations.getToken()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), installationId = _a[0], installationToken = _a[1];\r\n                        urlBase = window.FIREBASE_REMOTE_CONFIG_URL_BASE ||\r\n                            'https://firebaseremoteconfig.googleapis.com';\r\n                        url = urlBase + \"/v1/projects/\" + this.projectId + \"/namespaces/\" + this.namespace + \":fetch?key=\" + this.apiKey;\r\n                        headers = {\r\n                            'Content-Type': 'application/json',\r\n                            'Content-Encoding': 'gzip',\r\n                            // Deviates from pure decorator by not passing max-age header since we don't currently have\r\n                            // service behavior using that header.\r\n                            'If-None-Match': request.eTag || '*'\r\n                        };\r\n                        requestBody = {\r\n                            /* eslint-disable camelcase */\r\n                            sdk_version: this.sdkVersion,\r\n                            app_instance_id: installationId,\r\n                            app_instance_id_token: installationToken,\r\n                            app_id: this.appId,\r\n                            language_code: getUserLanguage()\r\n                            /* eslint-enable camelcase */\r\n                        };\r\n                        options = {\r\n                            method: 'POST',\r\n                            headers: headers,\r\n                            body: JSON.stringify(requestBody)\r\n                        };\r\n                        fetchPromise = fetch(url, options);\r\n                        timeoutPromise = new Promise(function (_resolve, reject) {\r\n                            // Maps async event listener to Promise API.\r\n                            request.signal.addEventListener(function () {\r\n                                // Emulates https://heycam.github.io/webidl/#aborterror\r\n                                var error = new Error('The operation was aborted.');\r\n                                error.name = 'AbortError';\r\n                                reject(error);\r\n                            });\r\n                        });\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 6]);\r\n                        return [4 /*yield*/, Promise.race([fetchPromise, timeoutPromise])];\r\n                    case 3:\r\n                        _b.sent();\r\n                        return [4 /*yield*/, fetchPromise];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        originalError_1 = _b.sent();\r\n                        errorCode = \"fetch-client-network\" /* FETCH_NETWORK */;\r\n                        if (originalError_1.name === 'AbortError') {\r\n                            errorCode = \"fetch-timeout\" /* FETCH_TIMEOUT */;\r\n                        }\r\n                        throw ERROR_FACTORY.create(errorCode, {\r\n                            originalErrorMessage: originalError_1.message\r\n                        });\r\n                    case 6:\r\n                        status = response.status;\r\n                        responseEtag = response.headers.get('ETag') || undefined;\r\n                        if (!(response.status === 200)) return [3 /*break*/, 11];\r\n                        responseBody = void 0;\r\n                        _b.label = 7;\r\n                    case 7:\r\n                        _b.trys.push([7, 9, , 10]);\r\n                        return [4 /*yield*/, response.json()];\r\n                    case 8:\r\n                        responseBody = _b.sent();\r\n                        return [3 /*break*/, 10];\r\n                    case 9:\r\n                        originalError_2 = _b.sent();\r\n                        throw ERROR_FACTORY.create(\"fetch-client-parse\" /* FETCH_PARSE */, {\r\n                            originalErrorMessage: originalError_2.message\r\n                        });\r\n                    case 10:\r\n                        config = responseBody['entries'];\r\n                        state = responseBody['state'];\r\n                        _b.label = 11;\r\n                    case 11:\r\n                        // Normalizes based on legacy state.\r\n                        if (state === 'INSTANCE_STATE_UNSPECIFIED') {\r\n                            status = 500;\r\n                        }\r\n                        else if (state === 'NO_CHANGE') {\r\n                            status = 304;\r\n                        }\r\n                        else if (state === 'NO_TEMPLATE' || state === 'EMPTY_CONFIG') {\r\n                            // These cases can be fixed remotely, so normalize to safe value.\r\n                            config = {};\r\n                        }\r\n                        // Normalize to exception-based control flow for non-success cases.\r\n                        // Encapsulates HTTP specifics in this class as much as possible. Status is still the best for\r\n                        // differentiating success states (200 from 304; the state body param is undefined in a\r\n                        // standard 304).\r\n                        if (status !== 304 && status !== 200) {\r\n                            throw ERROR_FACTORY.create(\"fetch-status\" /* FETCH_STATUS */, {\r\n                                httpStatus: status\r\n                            });\r\n                        }\r\n                        return [2 /*return*/, { status: status, eTag: responseEtag, config: config }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RestClient;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Shims a minimal AbortSignal.\r\n *\r\n * <p>AbortController's AbortSignal conveniently decouples fetch timeout logic from other aspects\r\n * of networking, such as retries. Firebase doesn't use AbortController enough to justify a\r\n * polyfill recommendation, like we do with the Fetch API, but this minimal shim can easily be\r\n * swapped out if/when we do.\r\n */\r\nvar RemoteConfigAbortSignal = /** @class */ (function () {\r\n    function RemoteConfigAbortSignal() {\r\n        this.listeners = [];\r\n    }\r\n    RemoteConfigAbortSignal.prototype.addEventListener = function (listener) {\r\n        this.listeners.push(listener);\r\n    };\r\n    RemoteConfigAbortSignal.prototype.abort = function () {\r\n        this.listeners.forEach(function (listener) { return listener(); });\r\n    };\r\n    return RemoteConfigAbortSignal;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_VALUE_FOR_BOOLEAN = false;\r\nvar DEFAULT_VALUE_FOR_STRING = '';\r\nvar DEFAULT_VALUE_FOR_NUMBER = 0;\r\nvar BOOLEAN_TRUTHY_VALUES = ['1', 'true', 't', 'yes', 'y', 'on'];\r\nvar Value = /** @class */ (function () {\r\n    function Value(_source, _value) {\r\n        if (_value === void 0) { _value = DEFAULT_VALUE_FOR_STRING; }\r\n        this._source = _source;\r\n        this._value = _value;\r\n    }\r\n    Value.prototype.asString = function () {\r\n        return this._value;\r\n    };\r\n    Value.prototype.asBoolean = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_BOOLEAN;\r\n        }\r\n        return BOOLEAN_TRUTHY_VALUES.indexOf(this._value.toLowerCase()) >= 0;\r\n    };\r\n    Value.prototype.asNumber = function () {\r\n        if (this._source === 'static') {\r\n            return DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        var num = Number(this._value);\r\n        if (isNaN(num)) {\r\n            num = DEFAULT_VALUE_FOR_NUMBER;\r\n        }\r\n        return num;\r\n    };\r\n    Value.prototype.getSource = function () {\r\n        return this._source;\r\n    };\r\n    return Value;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DEFAULT_FETCH_TIMEOUT_MILLIS = 60 * 1000; // One minute\r\nvar DEFAULT_CACHE_MAX_AGE_MILLIS = 12 * 60 * 60 * 1000; // Twelve hours.\r\n/**\r\n * Encapsulates business logic mapping network and storage dependencies to the public SDK API.\r\n *\r\n * See {@link https://github.com/FirebasePrivate/firebase-js-sdk/blob/master/packages/firebase/index.d.ts|interface documentation} for method descriptions.\r\n */\r\nvar RemoteConfig = /** @class */ (function () {\r\n    function RemoteConfig(\r\n    // Required by FirebaseServiceFactory interface.\r\n    app, \r\n    // JS doesn't support private yet\r\n    // (https://github.com/tc39/proposal-class-fields#private-fields), so we hint using an\r\n    // underscore prefix.\r\n    _client, _storageCache, _storage, _logger) {\r\n        this.app = app;\r\n        this._client = _client;\r\n        this._storageCache = _storageCache;\r\n        this._storage = _storage;\r\n        this._logger = _logger;\r\n        // Tracks completion of initialization promise.\r\n        this._isInitializationComplete = false;\r\n        this.settings = {\r\n            fetchTimeoutMillis: DEFAULT_FETCH_TIMEOUT_MILLIS,\r\n            minimumFetchIntervalMillis: DEFAULT_CACHE_MAX_AGE_MILLIS\r\n        };\r\n        this.defaultConfig = {};\r\n    }\r\n    // Based on packages/firestore/src/util/log.ts but not static because we need per-instance levels\r\n    // to differentiate 2p and 3p use-cases.\r\n    RemoteConfig.prototype.setLogLevel = function (logLevel) {\r\n        switch (logLevel) {\r\n            case 'debug':\r\n                this._logger.logLevel = LogLevel.DEBUG;\r\n                break;\r\n            case 'silent':\r\n                this._logger.logLevel = LogLevel.SILENT;\r\n                break;\r\n            default:\r\n                this._logger.logLevel = LogLevel.ERROR;\r\n        }\r\n    };\r\n    Object.defineProperty(RemoteConfig.prototype, \"fetchTimeMillis\", {\r\n        get: function () {\r\n            return this._storageCache.getLastSuccessfulFetchTimestampMillis() || -1;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(RemoteConfig.prototype, \"lastFetchStatus\", {\r\n        get: function () {\r\n            return this._storageCache.getLastFetchStatus() || 'no-fetch-yet';\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    RemoteConfig.prototype.activate = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, lastSuccessfulFetchResponse, activeConfigEtag;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: return [4 /*yield*/, Promise.all([\r\n                            this._storage.getLastSuccessfulFetchResponse(),\r\n                            this._storage.getActiveConfigEtag()\r\n                        ])];\r\n                    case 1:\r\n                        _a = _b.sent(), lastSuccessfulFetchResponse = _a[0], activeConfigEtag = _a[1];\r\n                        if (!lastSuccessfulFetchResponse ||\r\n                            !lastSuccessfulFetchResponse.config ||\r\n                            !lastSuccessfulFetchResponse.eTag ||\r\n                            lastSuccessfulFetchResponse.eTag === activeConfigEtag) {\r\n                            // Either there is no successful fetched config, or is the same as current active\r\n                            // config.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [4 /*yield*/, Promise.all([\r\n                                this._storageCache.setActiveConfig(lastSuccessfulFetchResponse.config),\r\n                                this._storage.setActiveConfigEtag(lastSuccessfulFetchResponse.eTag)\r\n                            ])];\r\n                    case 2:\r\n                        _b.sent();\r\n                        return [2 /*return*/, true];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.ensureInitialized = function () {\r\n        var _this = this;\r\n        if (!this._initializePromise) {\r\n            this._initializePromise = this._storageCache\r\n                .loadFromStorage()\r\n                .then(function () {\r\n                _this._isInitializationComplete = true;\r\n            });\r\n        }\r\n        return this._initializePromise;\r\n    };\r\n    /**\r\n     * @throws a {@link ErrorCode.FETCH_CLIENT_TIMEOUT} if the request takes longer than\r\n     * {@link Settings.fetchTimeoutInSeconds} or\r\n     * {@link DEFAULT_FETCH_TIMEOUT_SECONDS}.\r\n     */\r\n    RemoteConfig.prototype.fetch = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var abortSignal, e_1, lastFetchStatus;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        abortSignal = new RemoteConfigAbortSignal();\r\n                        setTimeout(function () { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                // Note a very low delay, eg < 10ms, can elapse before listeners are initialized.\r\n                                abortSignal.abort();\r\n                                return [2 /*return*/];\r\n                            });\r\n                        }); }, this.settings.fetchTimeoutMillis);\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 4, , 6]);\r\n                        return [4 /*yield*/, this._client.fetch({\r\n                                cacheMaxAgeMillis: this.settings.minimumFetchIntervalMillis,\r\n                                signal: abortSignal\r\n                            })];\r\n                    case 2:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus('success')];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 4:\r\n                        e_1 = _a.sent();\r\n                        lastFetchStatus = hasErrorCode(e_1, \"fetch-throttle\" /* FETCH_THROTTLE */)\r\n                            ? 'throttle'\r\n                            : 'failure';\r\n                        return [4 /*yield*/, this._storageCache.setLastFetchStatus(lastFetchStatus)];\r\n                    case 5:\r\n                        _a.sent();\r\n                        throw e_1;\r\n                    case 6: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.fetchAndActivate = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.fetch()];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/, this.activate()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    RemoteConfig.prototype.getAll = function () {\r\n        var _this = this;\r\n        return getAllKeys(this._storageCache.getActiveConfig(), this.defaultConfig).reduce(function (allConfigs, key) {\r\n            allConfigs[key] = _this.getValue(key);\r\n            return allConfigs;\r\n        }, {});\r\n    };\r\n    RemoteConfig.prototype.getBoolean = function (key) {\r\n        return this.getValue(key).asBoolean();\r\n    };\r\n    RemoteConfig.prototype.getNumber = function (key) {\r\n        return this.getValue(key).asNumber();\r\n    };\r\n    RemoteConfig.prototype.getString = function (key) {\r\n        return this.getValue(key).asString();\r\n    };\r\n    RemoteConfig.prototype.getValue = function (key) {\r\n        if (!this._isInitializationComplete) {\r\n            this._logger.debug(\"A value was requested for key \\\"\" + key + \"\\\" before SDK initialization completed.\" +\r\n                ' Await on ensureInitialized if the intent was to get a previously activated value.');\r\n        }\r\n        var activeConfig = this._storageCache.getActiveConfig();\r\n        if (activeConfig && activeConfig[key] !== undefined) {\r\n            return new Value('remote', activeConfig[key]);\r\n        }\r\n        else if (this.defaultConfig && this.defaultConfig[key] !== undefined) {\r\n            return new Value('default', String(this.defaultConfig[key]));\r\n        }\r\n        this._logger.debug(\"Returning static value for key \\\"\" + key + \"\\\".\" +\r\n            ' Define a default or remote value if this is unintentional.');\r\n        return new Value('static');\r\n    };\r\n    return RemoteConfig;\r\n}());\r\n/**\r\n * Dedupes and returns an array of all the keys of the received objects.\r\n */\r\nfunction getAllKeys(obj1, obj2) {\r\n    if (obj1 === void 0) { obj1 = {}; }\r\n    if (obj2 === void 0) { obj2 = {}; }\r\n    return Object.keys(__assign(__assign({}, obj1), obj2));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Converts an error event associated with a {@link IDBRequest} to a {@link FirebaseError}.\r\n */\r\nfunction toFirebaseError(event, errorCode) {\r\n    var originalError = event.target.error || undefined;\r\n    return ERROR_FACTORY.create(errorCode, {\r\n        originalErrorMessage: originalError && originalError.message\r\n    });\r\n}\r\n/**\r\n * A general-purpose store keyed by app + namespace + {@link\r\n * ProjectNamespaceKeyFieldValue}.\r\n *\r\n * <p>The Remote Config SDK can be used with multiple app installations, and each app can interact\r\n * with multiple namespaces, so this store uses app (ID + name) and namespace as common parent keys\r\n * for a set of key-value pairs. See {@link Storage#createCompositeKey}.\r\n *\r\n * <p>Visible for testing.\r\n */\r\nvar APP_NAMESPACE_STORE = 'app_namespace_store';\r\nvar DB_NAME = 'firebase_remote_config';\r\nvar DB_VERSION = 1;\r\n// Visible for testing.\r\nfunction openDatabase() {\r\n    return new Promise(function (resolve, reject) {\r\n        var request = indexedDB.open(DB_NAME, DB_VERSION);\r\n        request.onerror = function (event) {\r\n            reject(toFirebaseError(event, \"storage-open\" /* STORAGE_OPEN */));\r\n        };\r\n        request.onsuccess = function (event) {\r\n            resolve(event.target.result);\r\n        };\r\n        request.onupgradeneeded = function (event) {\r\n            var db = event.target.result;\r\n            // We don't use 'break' in this switch statement, the fall-through\r\n            // behavior is what we want, because if there are multiple versions between\r\n            // the old version and the current version, we want ALL the migrations\r\n            // that correspond to those versions to run, not only the last one.\r\n            // eslint-disable-next-line default-case\r\n            switch (event.oldVersion) {\r\n                case 0:\r\n                    db.createObjectStore(APP_NAMESPACE_STORE, {\r\n                        keyPath: 'compositeKey'\r\n                    });\r\n            }\r\n        };\r\n    });\r\n}\r\n/**\r\n * Abstracts data persistence.\r\n */\r\nvar Storage = /** @class */ (function () {\r\n    /**\r\n     * @param appId enables storage segmentation by app (ID + name).\r\n     * @param appName enables storage segmentation by app (ID + name).\r\n     * @param namespace enables storage segmentation by namespace.\r\n     */\r\n    function Storage(appId, appName, namespace, openDbPromise) {\r\n        if (openDbPromise === void 0) { openDbPromise = openDatabase(); }\r\n        this.appId = appId;\r\n        this.appName = appName;\r\n        this.namespace = namespace;\r\n        this.openDbPromise = openDbPromise;\r\n    }\r\n    Storage.prototype.getLastFetchStatus = function () {\r\n        return this.get('last_fetch_status');\r\n    };\r\n    Storage.prototype.setLastFetchStatus = function (status) {\r\n        return this.set('last_fetch_status', status);\r\n    };\r\n    // This is comparable to a cache entry timestamp. If we need to expire other data, we could\r\n    // consider adding timestamp to all storage records and an optional max age arg to getters.\r\n    Storage.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.get('last_successful_fetch_timestamp_millis');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchTimestampMillis = function (timestamp) {\r\n        return this.set('last_successful_fetch_timestamp_millis', timestamp);\r\n    };\r\n    Storage.prototype.getLastSuccessfulFetchResponse = function () {\r\n        return this.get('last_successful_fetch_response');\r\n    };\r\n    Storage.prototype.setLastSuccessfulFetchResponse = function (response) {\r\n        return this.set('last_successful_fetch_response', response);\r\n    };\r\n    Storage.prototype.getActiveConfig = function () {\r\n        return this.get('active_config');\r\n    };\r\n    Storage.prototype.setActiveConfig = function (config) {\r\n        return this.set('active_config', config);\r\n    };\r\n    Storage.prototype.getActiveConfigEtag = function () {\r\n        return this.get('active_config_etag');\r\n    };\r\n    Storage.prototype.setActiveConfigEtag = function (etag) {\r\n        return this.set('active_config_etag', etag);\r\n    };\r\n    Storage.prototype.getThrottleMetadata = function () {\r\n        return this.get('throttle_metadata');\r\n    };\r\n    Storage.prototype.setThrottleMetadata = function (metadata) {\r\n        return this.set('throttle_metadata', metadata);\r\n    };\r\n    Storage.prototype.deleteThrottleMetadata = function () {\r\n        return this.delete('throttle_metadata');\r\n    };\r\n    Storage.prototype.get = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readonly');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.get(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-get\" /* STORAGE_GET */));\r\n                                    };\r\n                                    request.onsuccess = function (event) {\r\n                                        var result = event.target.result;\r\n                                        if (result) {\r\n                                            resolve(result.value);\r\n                                        }\r\n                                        else {\r\n                                            resolve(undefined);\r\n                                        }\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-get\" /* STORAGE_GET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.set = function (key, value) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.put({\r\n                                        compositeKey: compositeKey,\r\n                                        value: value\r\n                                    });\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-set\" /* STORAGE_SET */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-set\" /* STORAGE_SET */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Storage.prototype.delete = function (key) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var db;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.openDbPromise];\r\n                    case 1:\r\n                        db = _a.sent();\r\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\r\n                                var transaction = db.transaction([APP_NAMESPACE_STORE], 'readwrite');\r\n                                var objectStore = transaction.objectStore(APP_NAMESPACE_STORE);\r\n                                var compositeKey = _this.createCompositeKey(key);\r\n                                try {\r\n                                    var request = objectStore.delete(compositeKey);\r\n                                    request.onerror = function (event) {\r\n                                        reject(toFirebaseError(event, \"storage-delete\" /* STORAGE_DELETE */));\r\n                                    };\r\n                                    request.onsuccess = function () {\r\n                                        resolve();\r\n                                    };\r\n                                }\r\n                                catch (e) {\r\n                                    reject(ERROR_FACTORY.create(\"storage-delete\" /* STORAGE_DELETE */, {\r\n                                        originalErrorMessage: e && e.message\r\n                                    }));\r\n                                }\r\n                            })];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Facilitates composite key functionality (which is unsupported in IE).\r\n    Storage.prototype.createCompositeKey = function (key) {\r\n        return [this.appId, this.appName, this.namespace, key].join();\r\n    };\r\n    return Storage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A memory cache layer over storage to support the SDK's synchronous read requirements.\r\n */\r\nvar StorageCache = /** @class */ (function () {\r\n    function StorageCache(storage) {\r\n        this.storage = storage;\r\n    }\r\n    /**\r\n     * Memory-only getters\r\n     */\r\n    StorageCache.prototype.getLastFetchStatus = function () {\r\n        return this.lastFetchStatus;\r\n    };\r\n    StorageCache.prototype.getLastSuccessfulFetchTimestampMillis = function () {\r\n        return this.lastSuccessfulFetchTimestampMillis;\r\n    };\r\n    StorageCache.prototype.getActiveConfig = function () {\r\n        return this.activeConfig;\r\n    };\r\n    /**\r\n     * Read-ahead getter\r\n     */\r\n    StorageCache.prototype.loadFromStorage = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var lastFetchStatusPromise, lastSuccessfulFetchTimestampMillisPromise, activeConfigPromise, lastFetchStatus, lastSuccessfulFetchTimestampMillis, activeConfig;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        lastFetchStatusPromise = this.storage.getLastFetchStatus();\r\n                        lastSuccessfulFetchTimestampMillisPromise = this.storage.getLastSuccessfulFetchTimestampMillis();\r\n                        activeConfigPromise = this.storage.getActiveConfig();\r\n                        return [4 /*yield*/, lastFetchStatusPromise];\r\n                    case 1:\r\n                        lastFetchStatus = _a.sent();\r\n                        if (lastFetchStatus) {\r\n                            this.lastFetchStatus = lastFetchStatus;\r\n                        }\r\n                        return [4 /*yield*/, lastSuccessfulFetchTimestampMillisPromise];\r\n                    case 2:\r\n                        lastSuccessfulFetchTimestampMillis = _a.sent();\r\n                        if (lastSuccessfulFetchTimestampMillis) {\r\n                            this.lastSuccessfulFetchTimestampMillis = lastSuccessfulFetchTimestampMillis;\r\n                        }\r\n                        return [4 /*yield*/, activeConfigPromise];\r\n                    case 3:\r\n                        activeConfig = _a.sent();\r\n                        if (activeConfig) {\r\n                            this.activeConfig = activeConfig;\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Write-through setters\r\n     */\r\n    StorageCache.prototype.setLastFetchStatus = function (status) {\r\n        this.lastFetchStatus = status;\r\n        return this.storage.setLastFetchStatus(status);\r\n    };\r\n    StorageCache.prototype.setLastSuccessfulFetchTimestampMillis = function (timestampMillis) {\r\n        this.lastSuccessfulFetchTimestampMillis = timestampMillis;\r\n        return this.storage.setLastSuccessfulFetchTimestampMillis(timestampMillis);\r\n    };\r\n    StorageCache.prototype.setActiveConfig = function (activeConfig) {\r\n        this.activeConfig = activeConfig;\r\n        return this.storage.setActiveConfig(activeConfig);\r\n    };\r\n    return StorageCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Supports waiting on a backoff by:\r\n *\r\n * <ul>\r\n *   <li>Promisifying setTimeout, so we can set a timeout in our Promise chain</li>\r\n *   <li>Listening on a signal bus for abort events, just like the Fetch API</li>\r\n *   <li>Failing in the same way the Fetch API fails, so timing out a live request and a throttled\r\n *       request appear the same.</li>\r\n * </ul>\r\n *\r\n * <p>Visible for testing.\r\n */\r\nfunction setAbortableTimeout(signal, throttleEndTimeMillis) {\r\n    return new Promise(function (resolve, reject) {\r\n        // Derives backoff from given end time, normalizing negative numbers to zero.\r\n        var backoffMillis = Math.max(throttleEndTimeMillis - Date.now(), 0);\r\n        var timeout = setTimeout(resolve, backoffMillis);\r\n        // Adds listener, rather than sets onabort, because signal is a shared object.\r\n        signal.addEventListener(function () {\r\n            clearTimeout(timeout);\r\n            // If the request completes before this timeout, the rejection has no effect.\r\n            reject(ERROR_FACTORY.create(\"fetch-throttle\" /* FETCH_THROTTLE */, {\r\n                throttleEndTimeMillis: throttleEndTimeMillis\r\n            }));\r\n        });\r\n    });\r\n}\r\n/**\r\n * Returns true if the {@link Error} indicates a fetch request may succeed later.\r\n */\r\nfunction isRetriableError(e) {\r\n    if (!(e instanceof FirebaseError) || !e.customData) {\r\n        return false;\r\n    }\r\n    // Uses string index defined by ErrorData, which FirebaseError implements.\r\n    var httpStatus = Number(e.customData['httpStatus']);\r\n    return (httpStatus === 429 ||\r\n        httpStatus === 500 ||\r\n        httpStatus === 503 ||\r\n        httpStatus === 504);\r\n}\r\n/**\r\n * Decorates a Client with retry logic.\r\n *\r\n * <p>Comparable to CachingClient, but uses backoff logic instead of cache max age and doesn't cache\r\n * responses (because the SDK has no use for error responses).\r\n */\r\nvar RetryingClient = /** @class */ (function () {\r\n    function RetryingClient(client, storage) {\r\n        this.client = client;\r\n        this.storage = storage;\r\n    }\r\n    RetryingClient.prototype.fetch = function (request) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var throttleMetadata;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, this.storage.getThrottleMetadata()];\r\n                    case 1:\r\n                        throttleMetadata = (_a.sent()) || {\r\n                            backoffCount: 0,\r\n                            throttleEndTimeMillis: Date.now()\r\n                        };\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A recursive helper for attempting a fetch request repeatedly.\r\n     *\r\n     * @throws any non-retriable errors.\r\n     */\r\n    RetryingClient.prototype.attemptFetch = function (request, _a) {\r\n        var throttleEndTimeMillis = _a.throttleEndTimeMillis, backoffCount = _a.backoffCount;\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, e_1, throttleMetadata;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0: \r\n                    // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                    // Ensures the throttle end time is honored if the last attempt timed out.\r\n                    // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                    return [4 /*yield*/, setAbortableTimeout(request.signal, throttleEndTimeMillis)];\r\n                    case 1:\r\n                        // Starts with a (potentially zero) timeout to support resumption from stored state.\r\n                        // Ensures the throttle end time is honored if the last attempt timed out.\r\n                        // Note the SDK will never make a request if the fetch timeout expires at this point.\r\n                        _b.sent();\r\n                        _b.label = 2;\r\n                    case 2:\r\n                        _b.trys.push([2, 5, , 7]);\r\n                        return [4 /*yield*/, this.client.fetch(request)];\r\n                    case 3:\r\n                        response = _b.sent();\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        return [4 /*yield*/, this.storage.deleteThrottleMetadata()];\r\n                    case 4:\r\n                        // Note the SDK only clears throttle state if response is success or non-retriable.\r\n                        _b.sent();\r\n                        return [2 /*return*/, response];\r\n                    case 5:\r\n                        e_1 = _b.sent();\r\n                        if (!isRetriableError(e_1)) {\r\n                            throw e_1;\r\n                        }\r\n                        throttleMetadata = {\r\n                            throttleEndTimeMillis: Date.now() + calculateBackoffMillis(backoffCount),\r\n                            backoffCount: backoffCount + 1\r\n                        };\r\n                        // Persists state.\r\n                        return [4 /*yield*/, this.storage.setThrottleMetadata(throttleMetadata)];\r\n                    case 6:\r\n                        // Persists state.\r\n                        _b.sent();\r\n                        return [2 /*return*/, this.attemptFetch(request, throttleMetadata)];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    return RetryingClient;\r\n}());\n\nvar name = \"@firebase/remote-config\";\nvar version = \"0.1.43\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerRemoteConfig(firebaseInstance) {\r\n    firebaseInstance.INTERNAL.registerComponent(new Component('remoteConfig', remoteConfigFactory, \"PUBLIC\" /* PUBLIC */).setMultipleInstances(true));\r\n    firebaseInstance.registerVersion(name, version);\r\n    function remoteConfigFactory(container, _a) {\r\n        var namespace = _a.instanceIdentifier;\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        // The following call will always succeed because rc has `import '@firebase/installations'`\r\n        var installations = container.getProvider('installations').getImmediate();\r\n        // Guards against the SDK being used in non-browser environments.\r\n        if (typeof window === 'undefined') {\r\n            throw ERROR_FACTORY.create(\"registration-window\" /* REGISTRATION_WINDOW */);\r\n        }\r\n        // Normalizes optional inputs.\r\n        var _b = app.options, projectId = _b.projectId, apiKey = _b.apiKey, appId = _b.appId;\r\n        if (!projectId) {\r\n            throw ERROR_FACTORY.create(\"registration-project-id\" /* REGISTRATION_PROJECT_ID */);\r\n        }\r\n        if (!apiKey) {\r\n            throw ERROR_FACTORY.create(\"registration-api-key\" /* REGISTRATION_API_KEY */);\r\n        }\r\n        if (!appId) {\r\n            throw ERROR_FACTORY.create(\"registration-app-id\" /* REGISTRATION_APP_ID */);\r\n        }\r\n        namespace = namespace || 'firebase';\r\n        var storage = new Storage(appId, app.name, namespace);\r\n        var storageCache = new StorageCache(storage);\r\n        var logger = new Logger(name);\r\n        // Sets ERROR as the default log level.\r\n        // See RemoteConfig#setLogLevel for corresponding normalization to ERROR log level.\r\n        logger.logLevel = LogLevel.ERROR;\r\n        var restClient = new RestClient(installations, \r\n        // Uses the JS SDK version, by which the RC package version can be deduced, if necessary.\r\n        firebaseInstance.SDK_VERSION, namespace, projectId, apiKey, appId);\r\n        var retryingClient = new RetryingClient(restClient, storage);\r\n        var cachingClient = new CachingClient(retryingClient, storage, storageCache, logger);\r\n        var remoteConfigInstance = new RemoteConfig(app, cachingClient, storageCache, storage, logger);\r\n        // Starts warming cache.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        remoteConfigInstance.ensureInitialized();\r\n        return remoteConfigInstance;\r\n    }\r\n}\r\nregisterRemoteConfig(firebase);\n\nexport { registerRemoteConfig };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}