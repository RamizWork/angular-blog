{"ast":null,"code":"import { catchError } from \"rxjs/operators\";\nimport { throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthInterceptor {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  intercept(req, next) {\n    return next.handle(req).pipe(catchError(error => {\n      if (error.status === 401) {\n        this.authService.logout();\n        this.router.navigate(['/admin', 'login'], {\n          queryParams: {\n            authFailed: true\n          }\n        });\n      }\n      return throwError(error);\n    }));\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["catchError","throwError","AuthInterceptor","constructor","authService","router","intercept","req","next","handle","pipe","error","status","logout","navigate","queryParams","authFailed","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac"],"sources":["C:\\Progect for learning\\angular-blog\\src\\app\\admin\\shared\\auth.interceptor.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\r\nimport {Router} from \"@angular/router\";\r\nimport {catchError} from \"rxjs/operators\";\r\nimport {Observable, throwError} from \"rxjs\";\r\n\r\nimport {AuthService} from \"./services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private authService: AuthService, private router: Router) {\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req)\r\n      .pipe(\r\n        catchError((error: HttpErrorResponse) => {\r\n            if (error.status === 401) {\r\n              this.authService.logout();\r\n              this.router.navigate(['/admin', 'login'], {\r\n                queryParams: {\r\n                  authFailed: true\r\n                }\r\n              })\r\n            }\r\n            return throwError(error);\r\n          }\r\n        )\r\n      )\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAAQA,UAAU,QAAO,gBAAgB;AACzC,SAAoBC,UAAU,QAAO,MAAM;;;;AAK3C,OAAM,MAAOC,eAAe;EAC1BC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAC5D;EAEAC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,OAAOA,IAAI,CAACC,MAAM,CAACF,GAAG,CAAC,CACpBG,IAAI,CACHV,UAAU,CAAEW,KAAwB,IAAI;MACpC,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;QACxB,IAAI,CAACR,WAAW,CAACS,MAAM,EAAE;QACzB,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE;UACxCC,WAAW,EAAE;YACXC,UAAU,EAAE;;SAEf,CAAC;MACJ;MACA,OAAOf,UAAU,CAACU,KAAK,CAAC;IAC1B,CAAC,CACF,CACF;EACL;EAAC,QAAAM,CAAA,G;qBApBUf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAftB,eAAe;IAAAuB,OAAA,EAAfvB,eAAe,CAAAwB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}