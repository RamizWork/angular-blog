{"ast":null,"code":"import { environment } from \"../../../../environments/environment\";\nimport firebase from \"firebase\";\nimport { from, of } from \"rxjs\";\nimport { switchMap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nconst config = {\n  apiKey: environment.apiKey,\n  authDomain: environment.authDomain,\n  databaseURL: environment.databaseURL,\n  storageBucket: environment.storageBucket\n};\nexport class FireBaseService {\n  constructor() {\n    this.initializeFireBase();\n  }\n  upLoadFileToStorage(file) {\n    const storageRef = firebase.storage().ref();\n    const token = localStorage.getItem('id-token');\n    if (file) {\n      const storagePhotoRef = storageRef.child('images/' + file.name);\n      return from(storagePhotoRef.put(file)).pipe(switchMap(() => {\n        return from(storagePhotoRef.getDownloadURL());\n      }));\n    }\n    return of('');\n  }\n  initializeFireBase() {\n    firebase.initializeApp(config);\n  }\n  static #_ = this.ɵfac = function FireBaseService_Factory(t) {\n    return new (t || FireBaseService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FireBaseService,\n    factory: FireBaseService.ɵfac\n  });\n}","map":{"version":3,"names":["environment","firebase","from","of","switchMap","config","apiKey","authDomain","databaseURL","storageBucket","FireBaseService","constructor","initializeFireBase","upLoadFileToStorage","file","storageRef","storage","ref","token","localStorage","getItem","storagePhotoRef","child","name","put","pipe","getDownloadURL","initializeApp","_","_2","factory","ɵfac"],"sources":["C:\\Progect for learning\\angular-blog\\src\\app\\admin\\shared\\services\\fireBase.service.ts"],"sourcesContent":["import {Injectable} from \"@angular/core\";\r\nimport {environment} from \"../../../../environments/environment\";\r\nimport firebase from \"firebase\";\r\nimport {from, Observable, of} from \"rxjs\";\r\nimport {AuthService} from \"./auth.service\";\r\nimport {switchMap} from \"rxjs/operators\";\r\n\r\nconst config: any = {\r\n  apiKey: environment.apiKey,\r\n  authDomain: environment.authDomain,\r\n  databaseURL: environment.databaseURL,\r\n  storageBucket: environment.storageBucket\r\n}\r\n\r\n@Injectable()\r\nexport class FireBaseService {\r\n\r\n  constructor() {\r\n    this.initializeFireBase();\r\n  }\r\n\r\n  upLoadFileToStorage(file: any): Observable<any> {\r\n    const storageRef = firebase.storage().ref();\r\n    const token = localStorage.getItem('id-token');\r\n\r\n    if (file) {\r\n      const storagePhotoRef = storageRef.child('images/' + file.name);\r\n      return from(storagePhotoRef.put(file)).pipe(\r\n        switchMap(() => {\r\n          return from(storagePhotoRef.getDownloadURL());\r\n        })\r\n      );\r\n    }\r\n\r\n    return of('')\r\n  }\r\n\r\n  private initializeFireBase() {\r\n    firebase.initializeApp(config);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAAQA,WAAW,QAAO,sCAAsC;AAChE,OAAOC,QAAQ,MAAM,UAAU;AAC/B,SAAQC,IAAI,EAAcC,EAAE,QAAO,MAAM;AAEzC,SAAQC,SAAS,QAAO,gBAAgB;;AAExC,MAAMC,MAAM,GAAQ;EAClBC,MAAM,EAAEN,WAAW,CAACM,MAAM;EAC1BC,UAAU,EAAEP,WAAW,CAACO,UAAU;EAClCC,WAAW,EAAER,WAAW,CAACQ,WAAW;EACpCC,aAAa,EAAET,WAAW,CAACS;CAC5B;AAGD,OAAM,MAAOC,eAAe;EAE1BC,YAAA;IACE,IAAI,CAACC,kBAAkB,EAAE;EAC3B;EAEAC,mBAAmBA,CAACC,IAAS;IAC3B,MAAMC,UAAU,GAAGd,QAAQ,CAACe,OAAO,EAAE,CAACC,GAAG,EAAE;IAC3C,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAE9C,IAAIN,IAAI,EAAE;MACR,MAAMO,eAAe,GAAGN,UAAU,CAACO,KAAK,CAAC,SAAS,GAAGR,IAAI,CAACS,IAAI,CAAC;MAC/D,OAAOrB,IAAI,CAACmB,eAAe,CAACG,GAAG,CAACV,IAAI,CAAC,CAAC,CAACW,IAAI,CACzCrB,SAAS,CAAC,MAAK;QACb,OAAOF,IAAI,CAACmB,eAAe,CAACK,cAAc,EAAE,CAAC;MAC/C,CAAC,CAAC,CACH;IACH;IAEA,OAAOvB,EAAE,CAAC,EAAE,CAAC;EACf;EAEQS,kBAAkBA,CAAA;IACxBX,QAAQ,CAAC0B,aAAa,CAACtB,MAAM,CAAC;EAChC;EAAC,QAAAuB,CAAA,G;qBAxBUlB,eAAe;EAAA;EAAA,QAAAmB,EAAA,G;WAAfnB,eAAe;IAAAoB,OAAA,EAAfpB,eAAe,CAAAqB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}